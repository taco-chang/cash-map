{"version":3,"sources":["components/EditRecord.tsx"],"names":["EditForm","data","isAppended","intl","useIntl","record","RecordModel","showGroup","useState","window","innerWidth","isXs","asXs","isLoading","useLoading","isSizeChanged","JSON","stringify","getJSON","initValue","Loading","dispatch","useRecord","Message","useMessage","doCancel","useCallback","reset","history","back","useEffect","$","on","off","onOpenGroup","onEditGroup","value","group","doStopSubmit","e","preventDefault","stopPropagation","type","content","handler","btn","BTN","CONFIRM","doCreate","show","callbackFn","action","params","fail","message","success","doUpdate","useEvents","onChange","onSubmit","className","tagName","id","align","width","md","messages","RECORD_DESC","onClick","desc","target","def","cycle","disableOnce","disableDeposit","amount","amountStr","margin","t","disabled","EditRecord","match","uid","store"],"mappings":"oOAsGMA,G,MAA4D,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACnEC,EAAOC,cACPC,EAAS,IAAIC,IAAYL,GACzBM,EAAYC,oBAAkB,GAHsD,EAInEA,mBAASC,OAAOC,WAAa,KAJsC,mBAIlFC,EAJkF,KAI5EC,EAJ4E,KAKlFC,EAAcC,cAAdD,UALkF,EA3E1E,SAAC,GAAoD,IAAlDF,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,KAAMP,EAAqC,EAArCA,OAAQE,EAA6B,EAA7BA,UACjCQ,EAAgBJ,IAAUF,OAAOC,WAAa,IADgB,EAE9CF,mBAASQ,KAAKC,UAAUZ,EAAOa,SAAQ,KAArDC,EAF4D,sBAGrCL,cAAvBD,EAH4D,EAG5DA,UAAWO,EAHiD,EAGjDA,QACXC,EAAaC,cAAbD,SACAE,EAAYC,cAAZD,QAEFE,EAAWC,sBAAY,WAC3BrB,EAAOsB,QACPlB,OAAOmB,QAAQC,QACd,CAAExB,IAQL,OANAyB,oBAAU,WAGR,OAFAC,EAAEtB,QAAQuB,GAAG,SAAU,kBAAMpB,EAAKH,OAAOC,WAAa,OAE/C,WAAQqB,EAAEtB,QAAQwB,IAAI,YAC5B,CAAElB,EAAeH,IAEb,CACLsB,YAAaR,sBAAY,kBAAMnB,EAAU,IAAG,IAAO,CAAEA,IAErD4B,YAAaT,sBAAY,SAACU,GAAD,OAAmB/B,EAAOgC,MAAQD,GAAO,CAAE/B,IAEpEiC,aAAcZ,sBAAY,SAACa,GACzBA,EAAEC,iBACFD,EAAEE,mBACD,IAEHhB,SAAUC,sBAAY,kBAAMP,IAAcH,KAAKC,UAAUZ,EAAOa,SAAQ,IAAUO,IAAaF,EAAQ,CACrGmB,KAAM,UACNC,QAAS,qBACTC,QAAS,SAAAC,GAAG,OAAIC,IAAIC,UAAYF,EAAMpB,IAAa,SACjD,CAAEF,EAASJ,EAAWd,EAAQoB,IAElCuB,SAAUtB,sBAAY,kBAAMb,EAAY,KAAOO,EAAQ,CACrD6B,MAAM,EACNC,WAAY,kBAAM7B,EAAS,CACzB8B,OAAQ,SACRC,OAAQ/C,EAAOa,UACfmC,KAAM,SAACd,GAAD,OAAcnB,EAAQ,CAC1B6B,MAAM,EACNC,WAAY,kBAAM3B,EAAQ,CAAEmB,KAAM,SAAUC,QAASJ,EAAEe,cAEzDC,QAAS,kBAAMnC,EAAQ,CACrB6B,MAAM,EACNC,WAAY,WACVzC,OAAOmB,QAAQC,OACfN,EAAQ,CAAEmB,KAAM,OAAQC,QAAS,+BAIrC,CAAEpB,EAASH,EAASP,EAAWR,EAAQgB,IAE3CmC,SAAU9B,sBAAY,kBAAMb,EAAY,KAAOO,EAAQ,CACrD6B,MAAM,EACNC,WAAY,kBAAM7B,EAAS,CACzB8B,OAAQ,SACRC,OAAQ/C,EAAOa,UACfmC,KAAM,SAACd,GAAD,OAAcnB,EAAQ,CAC1B6B,MAAM,EACNC,WAAY,kBAAM3B,EAAQ,CAAEmB,KAAM,SAAUC,QAASJ,EAAEe,cAEzDC,QAAS,kBAAMnC,EAAQ,CACrB6B,MAAM,EACNC,WAAY,WACVzC,OAAOmB,QAAQC,OACfN,EAAQ,CAAEmB,KAAM,OAAQC,QAAS,+BAIrC,CAAEpB,EAASH,EAASP,EAAWR,EAAQgB,KAmBzCoC,CAAU,CAAE9C,OAAMC,OAAMP,SAAQE,cANlC2B,EARwF,EAQxFA,YACAC,EATwF,EASxFA,YACAG,EAVwF,EAUxFA,aACAb,EAXwF,EAWxFA,SACAuB,EAZwF,EAYxFA,SACAQ,EAbwF,EAaxFA,SAGF,OACE,6BACKjD,EAAU,GACX,kBAAC,IAAD,CAAa0C,KAAO1C,EAAY8B,MAAQhC,EAAOgC,MAAQqB,SAAWvB,IADlD,KAIlB,0BAAMwB,SAAWrB,GACf,wBAAIsB,UAAU,cACZ,uBAAGA,UAAS,qBAAkB1D,EAAa,OAAS,YACpD,kBAAC,IAAD,CAAM2D,QAAQ,SAASC,GAAK5D,EAAa,gBAAkB,mBAG7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6D,MAAM,UACX,kBAAC,IAAD,CAAOH,UAAU,aAAaI,MAAO,CAAEC,GAAI,IACzC,+BACI9D,EAAK+D,SAASC,YAEhB,4BAAQzB,KAAK,SAASkB,UAAU,4BAA4BQ,QAAUlC,GACpE,uBAAG0B,UAAU,2BAIjB,2BAAOlB,KAAK,OAAOkB,UAAU,eAAexB,MAAQ/B,EAAOgE,KAAOX,SAChE,gBAAGY,EAAH,EAAGA,OAAH,OAAgBjE,EAAOgE,KAAOC,EAAOlC,WAK3C,kBAAC,IAAD,CAAO2B,MAAM,UACX,kBAAC,IAAD,CAAOH,UAAU,aAAaI,MAAO,CAAEO,IAAK,EAAGN,GAAI,IACjD,kBAAC,IAAD,CAAMJ,QAAQ,QAAQC,GAAG,iBAEzB,kBAAC,IAAD,CAAe1B,MAAQ/B,EAAOmE,MAAQC,YAAc,YAAcpE,EAAOqC,KAAOgB,SAC9E,SAAAtB,GAAK,OAAI/B,EAAOmE,MAAQpC,MAI5B,kBAAC,IAAD,CAAOwB,UAAU,aAAaI,MAAO,CAAEO,IAAK,EAAGN,GAAI,IACjD,kBAAC,IAAD,CAAMJ,QAAQ,QAAQC,GAAG,gBAEzB,kBAAC,IAAD,CAAc1B,MAAQ/B,EAAOqC,KAAOgC,eAAiB,SAAWrE,EAAOmE,MAAQd,SAC7E,SAAAtB,GAAK,OAAI/B,EAAOqC,KAAON,OAgB7B,kBAAC,IAAD,CAAO2B,MAAM,UACX,kBAAC,IAAD,CAAOH,UAAU,aAAaI,MAAO,CAAEC,GAAI,IACzC,kBAAC,IAAD,CAAMJ,QAAQ,QAAQC,GAAG,WAEzB,2BAAOpB,KAAK,SAASkB,UAAU,0BAA0BxB,MAAQ/B,EAAOsE,OAASjB,SAC/E,gBAAGY,EAAH,EAAGA,OAAH,OAAgBjE,EAAOuE,UAAYN,EAAOlC,WAKhD,kBAAC,IAAD,CAAOyC,OAAQ,CAAEC,EAAG,IAClB,kBAAC,IAAD,CAAOlB,UAAU,cACf,4BAAQlB,KAAK,SAASkB,UAAU,yBAAyBQ,QAAU3C,GACjE,uBAAGmC,UAAU,mBACb,kBAAC,IAAD,CAAME,GAAG,YAGX,4BAAQpB,KAAK,SAASkB,UAAU,kBAAkBmB,SAAWlE,EAAYuD,QAAUlE,EAAa8C,EAAWQ,GACzG,uBAAGI,UAAS,gBAAa1D,EAAa,OAAS,WAAnC,WACZ,kBAAC,IAAD,CAAM4D,GAAK5D,EAAa,MAAQ,iBAsBjC8E,UAZ6C,SAAC,GAAwC,IAAD,IAArCC,MAAS7B,OAAU8B,WAAkB,MAAZ,GAAY,IAC5D5D,cAArBrB,EADiF,EAC1FkF,MAASlF,KAAQoB,EADyE,EACzEA,SAMzB,OAJAS,oBAAU,WACJoD,GAAK7D,EAAS,CAAE8B,OAAQ,OAAQC,OAAQ,CAAE8B,UAC7C,CAAEA,EAAK7D,KAEFpB,GAAQiF,EAAM,KACpB,kBAAClF,EAAD,CAAUE,YAAcgF,EAAMjF,KAAOA,GAAQ","file":"static/js/0.aff7f056.chunk.js","sourcesContent":["import React, { FC, Dispatch, SetStateAction, FormEvent, useState, useEffect, useCallback } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport { match } from 'react-router-dom';\r\n\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { useLoading } from '../services/loading';\r\nimport { RecordModel, IRecordData, useRecord } from '../services/store/record';\r\nimport { BsContainer, BsRow, BsCol } from './grid';\r\n\r\nimport CycleDropdown from './editor/CycleDropdown';\r\nimport TypeDropdown from './editor/TypeDropdown';\r\nimport RecordGroup, { ShowModal } from './editor/RecordGroup';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  isXs: boolean;\r\n  asXs: Dispatch<SetStateAction<boolean>>;\r\n  record: RecordModel;\r\n  showGroup: ShowModal;\r\n}\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = ({ isXs, asXs, record, showGroup }: IEventInput) => {\r\n  const isSizeChanged = isXs === (window.innerWidth < 576);\r\n  const [ initValue ] = useState(JSON.stringify(record.getJSON(false)));\r\n  const { isLoading, Loading } = useLoading();\r\n  const { dispatch } = useRecord();\r\n  const { Message } = useMessage();\r\n\r\n  const doCancel = useCallback(() => {\r\n    record.reset();\r\n    window.history.back();\r\n  }, [ record ]);\r\n\r\n  useEffect(() => {\r\n    $(window).on('resize', () => asXs(window.innerWidth < 576));\r\n\r\n    return () => { $(window).off('resize') };\r\n  }, [ isSizeChanged, asXs ]);\r\n\r\n  return {\r\n    onOpenGroup: useCallback(() => showGroup[1](true), [ showGroup ]),\r\n\r\n    onEditGroup: useCallback((value: string) => record.group = value, [ record ]),\r\n\r\n    doStopSubmit: useCallback((e: FormEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }, []),\r\n\r\n    doCancel: useCallback(() => initValue === JSON.stringify(record.getJSON(false)) ? doCancel() : Message({\r\n      type: 'CONFIRM',\r\n      content: 'MSG_MODIFIED_CHECK',\r\n      handler: btn => BTN.CONFIRM === btn ? doCancel() : null\r\n    }), [ Message, initValue, record, doCancel ]),\r\n\r\n    doCreate: useCallback(() => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'CREATE',\r\n        params: record.getJSON(),\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => {\r\n            window.history.back();\r\n            Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' });\r\n          }\r\n        })\r\n      })\r\n    }), [ Message, Loading, isLoading, record, dispatch ]),\r\n\r\n    doUpdate: useCallback(() => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'UPDATE',\r\n        params: record.getJSON(),\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => {\r\n            window.history.back();\r\n            Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' });\r\n          }\r\n        })\r\n      })\r\n    }), [ Message, Loading, isLoading, record, dispatch ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst EditForm: FC<{ data: IRecordData; isAppended: boolean; }> = ({ data, isAppended }) => {\r\n  const intl = useIntl();\r\n  const record = new RecordModel(data);\r\n  const showGroup = useState<boolean>(false);\r\n  const [ isXs, asXs ] = useState(window.innerWidth < 576);\r\n  const { isLoading } = useLoading();\r\n\r\n  const {\r\n    onOpenGroup,\r\n    onEditGroup,\r\n    doStopSubmit,\r\n    doCancel,\r\n    doCreate,\r\n    doUpdate\r\n  } = useEvents({ isXs, asXs, record, showGroup });\r\n\r\n  return (\r\n    <div>\r\n      { !showGroup[0] ? null : (\r\n        <RecordGroup show={ showGroup } group={ record.group } onChange={ onEditGroup } />\r\n      )}\r\n\r\n      <form onSubmit={ doStopSubmit }>\r\n        <h4 className=\"page-title\">\r\n          <i className={ `mr-2 fa fa-${ isAppended ? 'plus' : 'pencil' }` } />\r\n          <Fmsg tagName=\"strong\" id={ isAppended ? 'APPEND_RECORD' : 'UPDATE_RECORD' } />\r\n        </h4>\r\n\r\n        <BsContainer>\r\n          <BsRow align=\"center\">\r\n            <BsCol className=\"form-group\" width={{ md: 8 }}>\r\n              <label>\r\n                { intl.messages.RECORD_DESC }\r\n\r\n                <button type=\"button\" className=\"btn btn-link text-warning\" onClick={ onOpenGroup }>\r\n                  <i className=\"fa fa-object-ungroup\" />\r\n                </button>\r\n              </label>\r\n\r\n              <input type=\"text\" className=\"form-control\" value={ record.desc } onChange={\r\n                ({ target }) => record.desc = target.value\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow align=\"center\">\r\n            <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n              <Fmsg tagName=\"label\" id=\"AMOUNT_CYCLE\" />\r\n\r\n              <CycleDropdown value={ record.cycle } disableOnce={ 'deposit' === record.type } onChange={\r\n                value => record.cycle = value\r\n              } />\r\n            </BsCol>\r\n\r\n            <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n              <Fmsg tagName=\"label\" id=\"RECORD_TYPE\" />\r\n\r\n              <TypeDropdown value={ record.type } disableDeposit={ 'once' === record.cycle } onChange={\r\n                value => record.type = value\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n            \r\n          {/* <BsRow align=\"center\">\r\n            <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n              { 'once' !== record.cycle ? null : [\r\n                <Fmsg key=\"label\" tagName=\"label\" id=\"VALID_YM\" />,\r\n\r\n                <DatePicker key=\"dpicker\" showMonthYearPicker withPortal={ isXs } className=\"form-control\" dateFormat=\"yyyy/MM\"\r\n                  selected={ record.vdateFm } onChange={(val) => record.vdateFm = val} />\r\n              ] }\r\n            </BsCol>\r\n          </BsRow> */}\r\n            \r\n          <BsRow align=\"center\">\r\n            <BsCol className=\"form-group\" width={{ md: 8 }}>\r\n              <Fmsg tagName=\"label\" id=\"AMOUNT\" />\r\n\r\n              <input type=\"number\" className=\"form-control text-right\" value={ record.amount } onChange={\r\n                ({ target }) => record.amountStr = target.value\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow margin={{ t: 5 }}>\r\n            <BsCol className=\"text-right\">\r\n              <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={ doCancel }>\r\n                <i className=\"fa fa-ban mr-2\" />\r\n                <Fmsg id=\"CANCEL\" />\r\n              </button>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={ isLoading } onClick={ isAppended ? doCreate : doUpdate }>\r\n                <i className={ `fa fa-${ isAppended ? 'plus' : 'download' } mr-2` } />\r\n                <Fmsg id={ isAppended ? 'ADD' : 'SAVE' } />\r\n              </button>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditRecord: FC<{ match: match<{ uid: string; }>; }> = ({ match: { params: { uid = '' } }}) => {\r\n  const { store: { data }, dispatch } = useRecord();\r\n\r\n  useEffect(() => {\r\n    if (uid) dispatch({ action: 'FIND', params: { uid }});\r\n  }, [ uid, dispatch ]);\r\n\r\n  return !data && uid ? null : (\r\n    <EditForm isAppended={ !uid } data={ data || {} } />\r\n  );\r\n};\r\n\r\nexport default EditRecord;\r\n"],"sourceRoot":""}