{"version":3,"sources":["components/EditRecord.tsx"],"names":["EditForm","data","isAppended","record","RecordModel","useState","window","innerWidth","isXs","asXs","isLoading","useLoading","isSizeChanged","JSON","stringify","getJSON","initValue","Loading","dispatch","useRecord","Message","useMessage","doCancel","useCallback","reset","history","back","useEffect","$","on","off","doStopSubmit","e","preventDefault","stopPropagation","type","content","handler","btn","BTN","CONFIRM","doCreate","show","callbackFn","action","params","fail","message","success","doUpdate","useEvents","onSubmit","className","tagName","id","align","width","md","value","desc","onChange","target","def","cycle","disableOnce","disableDeposit","amount","amountStr","margin","t","onClick","disabled","EditRecord","match","uid","store"],"mappings":"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","file":"static/js/0.646ecad0.chunk.js","sourcesContent":["import React, { FC, Dispatch, SetStateAction, FormEvent, useState, useEffect, useCallback } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport { match } from 'react-router-dom';\r\n\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { useLoading } from '../services/loading';\r\nimport { RecordModel, IRecordData, useRecord } from '../services/store/record';\r\nimport { BsContainer, BsRow, BsCol } from './grid';\r\n\r\nimport CycleDropdown from './editor/CycleDropdown';\r\nimport TypeDropdown from './editor/TypeDropdown';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  isXs: boolean;\r\n  asXs: Dispatch<SetStateAction<boolean>>;\r\n  record: RecordModel;\r\n}\r\n\r\ninterface IEventOutput {\r\n  doStopSubmit: (e: FormEvent) => void;\r\n  doCancel: () => void;\r\n  doCreate: () => void;\r\n  doUpdate: () => void;\r\n}\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = ({ isXs, asXs, record }: IEventInput): IEventOutput => {\r\n  const isSizeChanged = isXs === (window.innerWidth < 576);\r\n  const [ initValue ] = useState(JSON.stringify(record.getJSON()));\r\n  const { isLoading, Loading } = useLoading();\r\n  const { dispatch } = useRecord();\r\n  const { Message } = useMessage();\r\n\r\n  const doCancel = useCallback(() => {\r\n    record.reset();\r\n    window.history.back();\r\n  }, [ record ]);\r\n\r\n  useEffect(() => {\r\n    $(window).on('resize', () => asXs(window.innerWidth < 576));\r\n\r\n    return () => { $(window).off('resize') };\r\n  }, [ isSizeChanged, asXs ]);\r\n\r\n  return {\r\n    doStopSubmit: useCallback((e: FormEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }, []),\r\n\r\n    doCancel: useCallback(() => initValue === JSON.stringify(record.getJSON()) ? doCancel() : Message({\r\n      type: 'CONFIRM',\r\n      content: 'MSG_MODIFIED_CHECK',\r\n      handler: btn => BTN.CONFIRM === btn ? doCancel() : null\r\n    }), [ Message, initValue, record, doCancel ]),\r\n\r\n    doCreate: useCallback(() => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'CREATE',\r\n        params: record.getJSON(),\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => {\r\n            window.history.back();\r\n            Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' });\r\n          }\r\n        })\r\n      })\r\n    }), [ Message, Loading, isLoading, record, dispatch ]),\r\n\r\n    doUpdate: useCallback(() => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'UPDATE',\r\n        params: record.getJSON(),\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({\r\n            type: 'DANGER',\r\n            content: e.message\r\n          })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => {\r\n            window.history.back();\r\n            Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' });\r\n          }\r\n        })\r\n      })\r\n    }), [ Message, Loading, isLoading, record, dispatch ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst EditForm: FC<{ data: IRecordData; isAppended: boolean; }> = ({ data, isAppended }) => {\r\n  const record = new RecordModel(data);\r\n  const [ isXs, asXs ] = useState(window.innerWidth < 576);\r\n  const { isLoading } = useLoading();\r\n  const { doStopSubmit, doCancel, doCreate, doUpdate } = useEvents({ isXs, asXs, record });\r\n\r\n  return (\r\n    <form onSubmit={ doStopSubmit }>\r\n      <h4 className=\"page-title\">\r\n        <i className={ `mr-2 fa fa-${ isAppended ? 'plus' : 'pencil' }` } />\r\n        <Fmsg tagName=\"strong\" id={ isAppended ? 'APPEND_RECORD' : 'UPDATE_RECORD' } />\r\n      </h4>\r\n\r\n      <BsContainer>\r\n        <BsRow align=\"center\">\r\n          <BsCol className=\"form-group\" width={{ md: 8 }}>\r\n            <Fmsg tagName=\"label\" id=\"RECORD_DESC\" />\r\n\r\n            <input type=\"text\" className=\"form-control\" value={ record.desc } onChange={\r\n              ({ target }) => record.desc = target.value\r\n            } />\r\n          </BsCol>\r\n        </BsRow>\r\n\r\n        <BsRow align=\"center\">\r\n          <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n            <Fmsg tagName=\"label\" id=\"AMOUNT_CYCLE\" />\r\n\r\n            <CycleDropdown value={ record.cycle } disableOnce={ 'deposit' === record.type } onChange={\r\n              value => record.cycle = value\r\n            } />\r\n          </BsCol>\r\n\r\n          <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n            <Fmsg tagName=\"label\" id=\"RECORD_TYPE\" />\r\n\r\n            <TypeDropdown value={ record.type } disableDeposit={ 'once' === record.cycle } onChange={\r\n              value => record.type = value\r\n            } />\r\n          </BsCol>\r\n        </BsRow>\r\n          \r\n        {/* <BsRow align=\"center\">\r\n          <BsCol className=\"form-group\" width={{ def: 6, md: 4 }}>\r\n            { 'once' !== record.cycle ? null : [\r\n              <Fmsg key=\"label\" tagName=\"label\" id=\"VALID_YM\" />,\r\n\r\n              <DatePicker key=\"dpicker\" showMonthYearPicker withPortal={ isXs } className=\"form-control\" dateFormat=\"yyyy/MM\"\r\n                selected={ record.vdateFm } onChange={(val) => record.vdateFm = val} />\r\n            ] }\r\n          </BsCol>\r\n        </BsRow> */}\r\n          \r\n        <BsRow align=\"center\">\r\n          <BsCol className=\"form-group\" width={{ md: 8 }}>\r\n            <Fmsg tagName=\"label\" id=\"AMOUNT\" />\r\n\r\n            <input type=\"number\" className=\"form-control text-right\" value={ record.amount } onChange={\r\n              ({ target }) => record.amountStr = target.value\r\n            } />\r\n          </BsCol>\r\n        </BsRow>\r\n\r\n        <BsRow margin={{ t: 5 }}>\r\n          <BsCol className=\"text-right\">\r\n            <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={ doCancel }>\r\n              <i className=\"fa fa-ban mr-2\" />\r\n              <Fmsg id=\"CANCEL\" />\r\n            </button>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={ isLoading } onClick={ isAppended ? doCreate : doUpdate }>\r\n              <i className={ `fa fa-${ isAppended ? 'plus' : 'download' } mr-2` } />\r\n              <Fmsg id={ isAppended ? 'ADD' : 'SAVE' } />\r\n            </button>\r\n          </BsCol>\r\n        </BsRow>\r\n      </BsContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst EditRecord: FC<{ match: match<{ uid: string; }>; }> = ({ match: { params: { uid = '' } }}) => {\r\n  const { store: { target: { data } }, dispatch } = useRecord();\r\n\r\n  useEffect(() => {\r\n    if (uid) dispatch({ action: 'FIND', params: { uid }});\r\n  }, [ uid, dispatch ]);\r\n\r\n  return !data && uid ? null : (\r\n    <EditForm isAppended={ !uid } data={ data || {} } />\r\n  );\r\n};\r\n\r\nexport default EditRecord;\r\n"],"sourceRoot":""}