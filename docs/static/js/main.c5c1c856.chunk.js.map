{"version":3,"sources":["services/store/record/request.ts","services/store/record/index.tsx","services/loading.tsx","services/message.tsx","components/grid/grid.types.ts","components/grid/index.tsx","components/modal/index.tsx","components/editor/BsDropdown.tsx","@types/bs.types.ts","components/editor/RecordGroup.tsx","components/editor/CycleDropdown.tsx","components/editor/TypeDropdown.tsx","assets/imgs/404.svg","assets/imgs/cash-logo.svg","assets/i18n lazy /^/.*/.json$/ groupOptions: {} namespace object","services/i18n.tsx","components/form/index.tsx","components/toolbar/SumDashboard.tsx","components/toolbar/AmountSlidebar.tsx","components/toolbar/GroupCollapse.tsx","components/App.tsx","services/router.tsx","components/toolbar/MainHeader.tsx","serviceWorker.ts","index.tsx"],"names":["getRecords","JSON","parse","localStorage","getItem","setRecords","records","setItem","stringify","getList","status","type","Promise","resolve","content","filter","data","getGroups","Object","keys","reduce","groups","group","DATE_FROMAT","REFRESH_DISPATCH","Symbol","DEFAULT_STATE","list","summary","cycle","income","expenses","deposit","applicable","RecordModel","uid","uuidv4","desc","validFm","Moment","Date","format","validTo","amount","$uid","$desc","$type","$status","$cycle","$group","$validFm","$validTo","$amount","this","useState","showID","value","toDate","toString","amt","parseFloat","isNaN","useRecord","useContext","Context","getSummary","record","sumcycle","daysInMonth","daysInYear","getFullYear","dayOfYear","Math","floor","getAvgAmount","recordStore","state","$list","groupName","sort","g1","g2","map","doReducer","id","action","params","success","fail","searchParams","summaryCycle","storeDispatch","doReload","then","all","indexOf","Error","catch","e","reject","splice","findIndex","updateRecord","findByID","createContext","store","dispatch","RecordStore","children","useReducer","$do","Provider","useLoading","isLoading","Loading","LoadingMask","show","callbackFn","useEffect","Function","className","BTN","STORE_DISPATCH","useMessage","messageStore","options","btns","text","code","CONFIRM","icon","CANCEL","clearTimeout","timeout","handler","setMessage","undefined","window","setTimeout","Message","MessageBox","onClickMask","$","modal","remove","useCallback","target","parents","length","preventDefault","stopPropagation","useEvents","onClick","toLowerCase","title","tagName","btn","key","autoFocus","COLUMN","getColumnOptions","fn","opts","def","forEach","size","getSpacingClass","kind","cls","bssize","push","getBootstrapClass","start","end","on","$value","join","toClassString","i","arr","getColClass","width","offset","order","option","WIDTH","OFFSET","ORDER","getBsClasses","display","margin","padding","border","rounded","colors","hidden","isMgSpacing","prop","isPdSpacing","getBorderClass","getRoundedClass","getColorClass","hiddenOn","Array","isArray","breakpoint","getDisplayClass","BsContainer","props","createElement","BsRow","gutters","alignable","align","BsCol","modalReducer","onShowBsModal","setShow","BsModal","closeByBtn","isShow","doCallback","setModal","is","$el","DISMISS","onClickFbar","data-backdrop","data-keyboard","data-dismiss","aria-label","aria-hidden","color","description","BsOption","disabled","onSelect","intl","useIntl","onSelectOption","onPressEnter","useOptionEvents","onKeyPress","messages","BsDropdown","bgColor","Toggle","useDropdownEvents","data-toggle","opt","SAVE_SYMBOL","RecordGroupToggle","onOpenGroup","RecordGroup","alloweds","onChange","setValue","onFilterChange","onSelectGroup","onModalCallback","doLoadGroupsOnOpen","doStopSubmit","onSubmit","CycleDropdown","disableOnce","CYCLE_ONCE","CYCLE_DAY","CYCLE_MONTH","CYCLE_YEAR","TypeDropdown","disableDeposit","INCOME","EXPENSES","DEPOSIT","module","exports","webpackAsyncContext","req","__webpack_require__","o","ids","t","LANG","defintl","locale","default","reducer","EN","res","ZH","navigator","language","substring","setLang","I18n","setMessages","promise","hasMessages","msg","useMemo","DEFAULT","BsInlineGroup","label","labelWidth","style","SumDashboard","onCycleChange","expanded","setExpanded","doCollapse","SUMMARY","toUpperCase","sm","Numeral","APPLICABLE","AmountSlidebar","showGroup","onSlide","turnon","doUpdateGroup","message","doRemove","to","min","max","GroupCollapse","count","y","UNGROUP","lg","b","App","setFilter","loaded","setLoaded","doClear","APPEND_RECORD","ALL_OPTION","CLEAR","Loadable","loader","loading","Route","component","setState","Component","router","path","exact","goBack","history","back","md","src","error404","alt","asEnglish","asChinese","MainHeader","dropdown","useRef","Logo","ref","Boolean","location","hostname","match","ReactDOM","render","routers","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5c1c856.chunk.js","sourcesContent":["const getRecords = <T extends { uid?: string; }>(): T[] => JSON.parse(localStorage.getItem('CM_RECORDS') || '[]');\r\nconst setRecords = <T extends { uid?: string; }>(records: T[]): void => localStorage.setItem('CM_RECORDS', JSON.stringify(records));\r\n\r\ninterface IResponse<T> {\r\n  status: number;\r\n  content: T;\r\n  message?: string;\r\n}\r\n\r\nexport const findByID = <T extends { uid?: string; }>(id?: string) => new Promise<IResponse<T>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna get the specify record, must input index.')\r\n  );\r\n\r\n  resolve({\r\n    status: 200,\r\n    content: getRecords<T>().filter(({ uid }) => uid === id)[0]\r\n  });\r\n});\r\n\r\nexport const getList = <T extends { uid?: string; }>({ status, type }: { status?: string; type?: string; } = {}) => new Promise<IResponse<T[]>>(resolve => resolve({\r\n  status: 200,\r\n  content: getRecords<T>().filter(data =>\r\n    (!status || ((data as any).status === status)) && (!type || ((data as any).type === type))\r\n  )\r\n}));\r\n\r\nexport const getGroups = <T extends { uid?: string; group?: string; }>() => new Promise<IResponse<string[]>>(resolve => resolve({\r\n  status  : 200,\r\n  content : Object.keys(getRecords<T>().reduce(\r\n    (groups: { [group: string]: true; }, data: T) => data.group ? { ...groups, [ data.group ]: true } : groups,\r\n    {}\r\n  ))\r\n}));\r\n\r\nexport const createRecord = <T extends { uid?: string; }>(data: T) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!data.uid) reject(\r\n    new Error('Must have to specify a uid when create.')\r\n  );\r\n  const list = getRecords<T>();\r\n\r\n  setRecords<T>([ ...list, { ...data } ]);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const updateRecord = <T extends { uid?: string; }>(data: T, id?: string) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna update the specify record, must input index.')\r\n  );  \r\n  const list = getRecords<T>();\r\n\r\n  list.splice(list.findIndex(({ uid }) => uid === id), 1, data);\r\n  setRecords<T>(list);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const removeRecord = <T extends { uid?: string; }>(id?: string) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna remove the specify record, must input index.')\r\n  );  \r\n  const list = getRecords<T>();\r\n\r\n  list.splice(list.findIndex(({ uid }) => uid === id), 1);\r\n  setRecords<T>(list);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const clearRecord = <T extends { uid?: string; }>() => new Promise<IResponse<boolean>>(resolve => {\r\n  setRecords<T>([]);\r\n  resolve({ status: 200, content: true });\r\n});\r\n","import React, { FC, Reducer, Dispatch, SetStateAction, ReactNode, createContext, useState, useContext, useReducer } from 'react';\r\nimport Moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport { findByID, getList, getGroups, createRecord, updateRecord, removeRecord, clearRecord } from './request';\r\n\r\n\r\n// TODO: Types\r\nconst DATE_FROMAT: string = 'YYYY/MM';\r\nconst REFRESH_DISPATCH = Symbol('DISPATCH');\r\n\r\nconst DEFAULT_STATE: IStoreState = {\r\n  list    : {},\r\n  group   : [],\r\n  summary : {\r\n    cycle      : 'month',\r\n    income     : 0,\r\n    expenses   : 0,\r\n    deposit    : 0,\r\n    applicable : 0\r\n  }\r\n};\r\n\r\ninterface IStoreState { data?: IRecordData; summary: ISummary; group: string[]; list: {[ groupName: string ]: IRecordData[]; }; }\r\ninterface IStoreAction { data?: IRecordData | true; summary?: ISummary; group?: string[]; list?: IRecordData[]; }\r\n\r\ninterface IRequestState {\r\n  searchParams: IRecordData;\r\n  summaryCycle: 'day' | 'month' | 'year';\r\n  storeDispatch: Dispatch<IStoreAction>;\r\n}\r\n\r\nexport interface IRequestAction {\r\n  action   : 'LIST' | 'FIND' | 'GROUP' | 'CREATE' | 'UPDATE' | 'REMOVE' | 'CLEAR' | 'SUMMARY';\r\n  params  ?: IRecordData;\r\n  success ?: (params: IRecordData) => void;\r\n  fail    ?: (e: Error, params?: IRecordData) => void;\r\n}\r\n\r\nexport interface ISummary {\r\n  cycle: 'day' | 'month' | 'year';\r\n  income: number;\r\n  expenses: number; \r\n  deposit: number;\r\n  applicable: number;\r\n}\r\n\r\nexport interface IRecordData {\r\n  uid     ?: string;     desc    ?: string;\r\n  type    ?: string;     status  ?: string;\r\n  cycle   ?: string;     validFm ?: string;\r\n  validTo ?: string;     amount  ?: number;\r\n  group   ?: string;\r\n}\r\n\r\nexport class RecordModel {\r\n  private $uid     !: string;\r\n  private $desc    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $type    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $status  !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $cycle   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $group   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validFm !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validTo !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $amount  !: [ number, Dispatch<SetStateAction<number>> ];\r\n\r\n  constructor({\r\n    uid     = uuidv4() , desc    = '' , \r\n    type    = 'income' , status  = 'expected',\r\n    cycle   = 'month'  , validFm = Moment(new Date()).format(DATE_FROMAT),\r\n    validTo = ''       , group   = '',\r\n    amount  = 0\r\n  }: IRecordData = {}) {\r\n    this.$uid     = uid;                  this.$desc    = useState(desc);\r\n    this.$type    = useState(type);       this.$status  = useState(status);\r\n    this.$cycle   = useState(cycle);      this.$validFm = useState(validFm);\r\n    this.$validTo = useState(validTo);    this.$amount  = useState(amount);\r\n    this.$group   = useState(group);\r\n  }\r\n\r\n  get uid(): string { return this.$uid; }\r\n  \r\n  get desc(): string { return this.$desc[0]; }\r\n  set desc(value: string) { this.$desc[1](value); }\r\n\r\n  get type(): string { return this.$type[0]; }               get status(): string { return this.$status[0]; }\r\n  set type(value: string) { this.$type[1](value); }          set status(value: string) { this.$status[1](value); }\r\n\r\n  get cycle(): string { return this.$cycle[0]; }             get validFm(): string { return this.$validFm[0]; }\r\n  set cycle(value: string) { this.$cycle[1](value); }        set validFm(value: string) { this.$validFm[1](value); }\r\n\r\n  get validTo(): string { return this.$validTo[0]; }         get amount(): number { return this.$amount[0]; }\r\n  set validTo(value: string) { this.$validTo[1](value); }    set amount(value: number) { this.$amount[1](value); }\r\n\r\n  get group(): string { return this.$group[0]; }\r\n  set group(value: string) { this.$group[1](value); }\r\n\r\n  get vdateFm(): Date | null { return this.validFm ? Moment(this.validFm + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateFm(value: Date | null) { this.validFm = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get vdateTo(): Date | null { return this.validTo ? Moment(this.validTo + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateTo(value: Date | null) { this.validTo = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get amountStr(): string { return this.amount ? this.amount.toString() : ''; }\r\n  set amountStr(value: string) {\r\n    const amt = parseFloat(value);\r\n\r\n    this.amount = !isNaN(amt) ? amt : 0;\r\n  }\r\n\r\n  getJSON(showID: boolean = true): IRecordData {\r\n    return {\r\n      desc   : this.desc   , status  : this.status  ,\r\n      type   : this.type   , validFm : this.validFm ,\r\n      cycle  : this.cycle  , validTo : this.validTo ,\r\n      group  : this.group  ,\r\n      amount : this.amount , ...( showID ? { uid: this.uid } : {})\r\n    };\r\n  }\r\n\r\n  reset(): void {\r\n    this.$uid   = uuidv4();    this.desc    = '';\r\n    this.type   = 'income';    this.status  = 'actual';\r\n    this.cycle  = 'month';     this.validFm = Moment(new Date()).format(DATE_FROMAT);\r\n    this.amount = 0;           this.validTo = '';\r\n    this.group  = '';\r\n  }\r\n}\r\n\r\n// TODO: Hooks & Functions\r\nconst useRecord = () => useContext(Context);\r\n\r\nconst getAvgAmount = (sumcycle: 'day' | 'month' | 'year', { cycle = 'month', amount = 0 }: IRecordData): number => {\r\n  const daysInMonth = Moment(new Date()).daysInMonth();\r\n  const daysInYear  = Moment(`${ new Date().getFullYear() }/12/31`, 'YYYY/MM/DD').dayOfYear();\r\n\r\n  switch (sumcycle) {\r\n    case 'day': switch (cycle) {\r\n      case 'month' : return Math.floor(amount / daysInMonth);\r\n      case 'year'  : return Math.floor(amount / daysInYear);\r\n    }\r\n    break;\r\n    case 'month': switch (cycle) {\r\n      case 'day'  : return amount * daysInMonth;\r\n      case 'year' : return Math.floor(amount / 12);\r\n    }\r\n    break;\r\n    case 'year': switch (cycle) {\r\n      case 'day'   : return amount * daysInYear;\r\n      case 'month' : return amount * 12;\r\n    }\r\n    break;\r\n  }\r\n  return amount;\r\n};\r\n\r\nconst getSummary = (\r\n  cycle: 'day' | 'month' | 'year',\r\n  list: IRecordData[]\r\n): ISummary => list.filter(record => 'actual' === record.status).reduce((summary: ISummary, record) => {\r\n  const amount = getAvgAmount(summary.cycle, record);\r\n\r\n  if ('once' === record.cycle)\r\n    summary.deposit += amount * ('expenses' === record.type ? -1 : 1);\r\n  else switch (record.type) {\r\n    case 'income'   : summary.income   += amount; break;\r\n    case 'expenses' : summary.expenses += amount; break;\r\n    case 'deposit'  :\r\n      summary.deposit += amount;\r\n      summary.income  -= amount;\r\n      break;\r\n  }\r\n  return { ...summary, applicable: summary.income - summary.expenses };\r\n}, {\r\n  cycle,\r\n  income  : 0, expenses   : 0,\r\n  deposit : 0, applicable : 0\r\n});\r\n\r\n// TODO: Reducers\r\nconst recordStore: Reducer<IStoreState, IStoreAction> = (state = DEFAULT_STATE, {\r\n  data,\r\n  group   = state.group,\r\n  summary = state.summary,\r\n  list    = Object.keys(state.list).reduce(\r\n    ($list: IRecordData[], groupName: string) => [ ...$list, ...state.list[ groupName ]],\r\n    []\r\n  )\r\n}) => ({\r\n  group, summary,\r\n  data: data === true ? state.data : data,\r\n  list: list.sort(({ group: g1 = '' }, { group: g2 = '' }) =>\r\n    !g1 ? 1 : !g2 ? -1 : g1 > g2 ? 1 : g1 < g2 ? -1 : 0\r\n  ).reduce((map: {[ groupName: string ]: IRecordData[]; }, record) => ({\r\n    ...map,\r\n    [ record.group || 'UNGROUP' ]: [ ...map[ record.group || 'UNGROUP' ] || [], record ]\r\n  }), {})\r\n});\r\n\r\nconst doReducer: Reducer<IRequestState, IRequestAction> = (state, {\r\n  action,\r\n  params = {},\r\n  success = () => {},\r\n  fail = () => {}\r\n}) => {\r\n  const { searchParams, summaryCycle, storeDispatch } = state;\r\n\r\n  const doReload = () => getList<IRecordData>(searchParams).then(({ content: list }) =>\r\n    getList<IRecordData>().then(({ content: all }) => \r\n      getGroups<IRecordData>().then(({ content: group }) =>\r\n        storeDispatch({ list, group, summary: getSummary(summaryCycle, all) })\r\n      )\r\n    )\r\n  );\r\n\r\n  switch (action) {\r\n    case 'SUMMARY':\r\n      if (!params.cycle || ['day', 'month', 'year'].indexOf(params.cycle) < 0) throw new Error(\r\n        'If wanna re-calculate the summary, must specify cycle.'\r\n      );\r\n\r\n      getList<IRecordData>().then(({ content }) => storeDispatch({\r\n        summary: getSummary(params.cycle as 'day' | 'month' | 'year', content)\r\n      }))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n      return {\r\n        searchParams,\r\n        storeDispatch,\r\n        summaryCycle: params.cycle as 'day' | 'month' | 'year'\r\n      };\r\n    case 'CREATE' : createRecord<IRecordData>(params)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n    break;\r\n    case 'UPDATE' : updateRecord<IRecordData>(params, params.uid)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n    break;\r\n    case 'REMOVE' : removeRecord<IRecordData>(params.uid)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n    break;\r\n    case 'CLEAR'  : clearRecord<IRecordData>()\r\n      .then(() => getList<IRecordData>()\r\n        .then(() => storeDispatch({\r\n          list: [],\r\n          summary: { cycle: summaryCycle, income: 0, expenses: 0, deposit: 0, applicable: 0 }\r\n        }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e))\r\n      )\r\n      .catch(e => fail(e));\r\n\r\n    break;\r\n    case 'FIND': findByID<IRecordData>(params.uid)\r\n      .then(({ content }) => storeDispatch({ data: content }))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n    break;\r\n    case 'LIST': getList<IRecordData>(params)\r\n      .then(({ content }) => storeDispatch({ list: content }))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n    break;\r\n    case 'GROUP': getGroups<IRecordData>()\r\n      .then(({ content }) => storeDispatch({ data: true, group: content }))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n    break;\r\n  }\r\n  return state;\r\n}\r\n\r\n// TODO: Components\r\nconst Context = createContext<{\r\n  store: IStoreState;\r\n  dispatch: Dispatch<IRequestAction>;\r\n  [ REFRESH_DISPATCH ]: Dispatch<IStoreAction>;\r\n}>({\r\n  store: DEFAULT_STATE,\r\n  dispatch: () => {},\r\n  [ REFRESH_DISPATCH ]: () => {}\r\n});\r\n\r\nconst RecordStore: FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [ store, storeDispatch ] = useReducer(recordStore, DEFAULT_STATE);\r\n\r\n  const $do = useReducer(doReducer, {\r\n    searchParams: {},\r\n    summaryCycle: 'month',\r\n    storeDispatch\r\n  });\r\n\r\n  return (\r\n    <Context.Provider value={{ store, dispatch: $do[1], [ REFRESH_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\n// TODO: Export\r\nexport default RecordStore;\r\nexport { useRecord };\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  Dispatch,\r\n  SetStateAction,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\ninterface IState { show: boolean; callbackFn?: () => void; }\r\ninterface IContext { isLoading: boolean; Loading: Dispatch<SetStateAction<IState>> }\r\n\r\n// TODO: Variables\r\nconst useLoading = () => useContext(Context);\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ isLoading: false, Loading: () => {} });\r\n\r\nconst LoadingMask: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ show: isLoading, callbackFn }, Loading ] = useState<IState>({ show: false });\r\n\r\n  useEffect(() => {\r\n    if (callbackFn instanceof Function)\r\n      callbackFn();\r\n  }, [ callbackFn ]);\r\n\r\n  return (\r\n    <Context.Provider value={{ isLoading, Loading }}>\r\n      { !isLoading ? null : (\r\n        <div className=\"loading-mask\" />\r\n      )}\r\n\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadingMask;\r\nexport { useLoading };\r\n","import { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport React, {\r\n  FC,\r\n  Dispatch,\r\n  Reducer,\r\n  ReactNode,\r\n  MouseEvent,\r\n  createContext,\r\n  useEffect,\r\n  useContext,\r\n  useReducer,\r\n  useCallback\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\nconst STORE_DISPATCH = Symbol('DISPATCH');\r\n\r\nexport enum BTN { CONFIRM, CANCEL }\r\n\r\ninterface IStoreState { options?: IMessageState; }\r\n\r\ninterface IContext {\r\n  options?: IMessageOptions;\r\n  Message: Dispatch<IMessageOptions | BTN>;\r\n  [ STORE_DISPATCH ]: Dispatch<IMessageOptions | BTN>;\r\n}\r\n\r\ninterface IMessageOptions {\r\n  type: 'INFO' | 'WARNING' | 'DANGER' | 'CONFIRM';\r\n  uid?: string;\r\n  title?: string;\r\n  icon?: string;\r\n  content: string;\r\n  timeout?: number;\r\n  handler?: (btn: BTN) => any;\r\n}\r\n\r\ninterface IMessageState extends IMessageOptions {\r\n  btns: {\r\n    text?: string;\r\n    code: BTN;\r\n    icon?: string;\r\n  }[];\r\n}\r\n\r\n// TODO: Hooks\r\nconst useMessage = () => useContext(Context);\r\n\r\nconst useEvents = (options?: IMessageState) => {\r\n  useEffect(() => {\r\n    if (options)\r\n      $(`#${ options.uid }`).modal('show');\r\n    else\r\n      $('div.modal-backdrop').remove();\r\n  }, [ options ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      if ($(e.target).parents('div.alert').length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    }, [])\r\n  };\r\n};\r\n\r\n// TODO: Reducer\r\nconst messageStore: Reducer<IStoreState, IMessageOptions | BTN> = (state, options) => {\r\n  switch (typeof options) {\r\n    case 'object': return {\r\n      options: {\r\n        ...options,\r\n        btns: 'CONFIRM' !== options.type ? [\r\n          { text: 'CHECK_IT', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ] : [\r\n          { text: 'CANCEL', code: BTN.CANCEL, icon: 'fa fa-ban' },\r\n          { text: 'CONFIRM', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ]\r\n      }\r\n    };\r\n    case 'number':\r\n      if (state.options) {\r\n        clearTimeout(state.options.timeout);\r\n\r\n        if (state.options.handler instanceof Function) state.options.handler(\r\n          options\r\n        );\r\n      }\r\n      return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nconst setMessage: Reducer<Dispatch<IMessageOptions | BTN>, IMessageOptions | BTN> = (dispatch, options) => {\r\n  switch (typeof options) {\r\n    case 'number':\r\n      dispatch(options);\r\n      break;\r\n\r\n    case 'object':\r\n      const { type, timeout = null } = options;\r\n\r\n      dispatch({\r\n        ...options,\r\n        uid     : uuidv4(),\r\n        timeout : 'CONFIRM' === type ? undefined : window.setTimeout(\r\n          () => dispatch(BTN.CANCEL),\r\n          !timeout ? 2000 : timeout\r\n        )\r\n      });\r\n      break;\r\n  }\r\n  return dispatch;\r\n};\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({\r\n  Message: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst MessageBox: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ options }, storeDispatch ] = useReducer(messageStore, {});\r\n  const $do = useReducer(setMessage, storeDispatch);\r\n  const { onClickMask } = useEvents(options);\r\n\r\n  return (\r\n    <Context.Provider value={{ options, Message: $do[1], [ STORE_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n\r\n      { !options ? null : (\r\n        <div className=\"modal message-modal\" id={ options.uid } onClick={ onClickMask }>\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className={ `alert alert-${ 'CONFIRM' === options.type ? 'primary' : options.type.toLowerCase() }` }>\r\n                <div className=\"media\">\r\n                  { !options.icon ? null : <i className={ `mr-3 ${options.icon}` } /> }\r\n\r\n                  <div className=\"media-body\">\r\n                    { !options.title ? null : (\r\n                      <h5 className=\"mt-0\">\r\n                        <Fmsg tagName=\"strong\" id={ options.title } />\r\n                      </h5>\r\n                    ) }\r\n\r\n                    <Fmsg tagName=\"p\" id={ options.content } />\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      { options.btns.map(btn => (\r\n                        <button key={ `btn-${ btn.code }` } type=\"button\" autoFocus={ BTN.CANCEL === btn.code }\r\n                          onClick={ () => $do[1](btn.code) } className={ `ml-1 btn btn-${ BTN.CANCEL === btn.code ? 'secondary'\r\n                              : 'CONFIRM' === options.type ? 'primary'\r\n                                : options.type.toLowerCase()\r\n                          }`}>\r\n\r\n                          { !btn.icon ? null : <i className={ `mr-2 ${btn.icon}` } /> }\r\n                          { !btn.text ? null : <Fmsg id={ btn.text } /> }\r\n                        </button>\r\n                      )) }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageBox;\r\nexport { useMessage };\r\n","import { ReactNode } from 'react';\r\nimport { BsColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Basic Types\r\ntype Breakpoint = 'sm' | 'md' | 'lg' | 'xl';\r\n\r\ntype BsSize = '' | Breakpoint;\r\ntype BsBreakpoint = 'def' | Breakpoint;\r\ntype BsSpacing5 = 1 | 2 | 3 | 4 | 5;\r\n\r\ntype BsDisplay = 'inline' | 'inline-block' | 'inline-flex'\r\n  | 'block' | 'flex' | 'table' | 'table-row' | 'table-cell';\r\n\r\n\r\n// TODO: Configures Types\r\nenum COLUMN { WIDTH, OFFSET, ORDER }\r\n\r\ntype BsCol12 = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\ntype Width = 'auto' | BsCol12;\r\ntype Order = 'first' | 'last' | BsCol12;\r\n\r\ntype BsColors = false | { border?: BsColor; text?: BsColor; bg?: BsColor; };\r\ntype BsHidden = false | BsBreakpoint | BsBreakpoint[];\r\ntype BsBorder = boolean | { t?: true;  l?: true; b?: true;  r?: true; };\r\ntype BsRounded = boolean | { size?: 'sm' | 'lg'; type?: 'top' | 'bottom' | 'left' | 'right' | 'circle' | 'pill'; };\r\n\r\ntype BsMargin = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5 | 'auto';\r\n  b?: BsSpacing5;  r?: BsSpacing5 | 'auto';\r\n  y?: BsSpacing5;  x?: BsSpacing5 | 'auto';\r\n};\r\n\r\ntype BsPadding = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5;\r\n  b?: BsSpacing5;  r?: BsSpacing5;\r\n  y?: BsSpacing5;  x?: BsSpacing5;\r\n};\r\n\r\ninterface IBreakpoint<T> { def?: T; sm?: false | T; md?: false | T; lg?: false | T; xl?: false | T; }\r\n\r\nexport interface IRowProps extends IBsgridProps {\r\n  align?: false | 'start' | 'center' | 'end' | 'around' | 'between';\r\n  alignable?: BsSize;\r\n  gutters?: boolean;\r\n}\r\n\r\nexport interface IColProps extends IBsgridProps {\r\n  width?: Width | IBreakpoint<Width>;\r\n  offset?: false | BsCol12 | IBreakpoint<BsCol12>;\r\n  order?: false | Order | IBreakpoint<Order>;\r\n}\r\n\r\n\r\n// TODO: Generate Class Function\r\nfunction getColumnOptions<T>(options: T | false, fn: (bssize: BsSize, opts: T) => void): void {\r\n  const opts: IBreakpoint<T> = (options instanceof Object ? options : { def: options }) as IBreakpoint<T>;\r\n\r\n  Object.keys(opts).forEach((size: string) => (opts as any)[size] === false ? null : fn(\r\n    ('def' === size ? '' : size) as BsSize,\r\n    (opts as any)[size]\r\n  ));\r\n}\r\n\r\nfunction getSpacingClass(kind: 'm' | 'p', options: any): string[] {\r\n  const cls: string[] = [];\r\n\r\n  Object.keys(options).forEach((size: string) => {\r\n    const bssize = 'def' === size ? '' : size;\r\n    const value = options[size];\r\n\r\n    if (value !== false) {\r\n      if ('number' === typeof value)\r\n        cls.push(getBootstrapClass(bssize as BsSize, { start: kind, end: value }));\r\n      else Object.keys(value).forEach((on: string) => {\r\n        const $value = value[on] || '';\r\n\r\n        if ($value)\r\n          cls.push(getBootstrapClass(bssize as BsSize, { start: `${kind}${on}`, end: $value }));\r\n      });\r\n    }\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getBorderClass(options: BsBorder): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('border');\r\n    else Object.keys(options).forEach((on: string) => {\r\n      switch (on) {\r\n        case 't': cls.push('border-top'); break;\r\n        case 'b': cls.push('border-bottom'); break;\r\n        case 'l': cls.push('border-left'); break;\r\n        case 'r': cls.push('border-right'); break;\r\n      }\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getRoundedClass(options: BsRounded): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('rounded');\r\n    else Object.keys(options).forEach((prop: string) => {\r\n      const { [prop]: value } = options as any;\r\n\r\n      if (value)\r\n        cls.push(`rounded-${value}`);\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getColorClass(options: BsColors): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) Object.keys(options).forEach((target: string) => {\r\n    const { [target]: value } = options as any;\r\n\r\n    if (value)\r\n      cls.push('border' === target ? `border-${value}` : `${target}-${value}`);\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getDisplayClass(display: BsDisplay, options: BsHidden): string[] {\r\n  const cls: string[] = [`d-${display}`];\r\n\r\n  if (options !== false) {\r\n    const hiddenOn: BsBreakpoint[] = Array.isArray(options) ? options : [options];\r\n\r\n    ['def', 'sm', 'md', 'lg', 'xl'].filter((breakpoint: string) =>\r\n      hiddenOn.indexOf(breakpoint as BsBreakpoint) >= 0\r\n    ).forEach((breakpoint: string) => {\r\n      const size: BsSize = 'def' === breakpoint ? '' : (breakpoint as BsSize);\r\n\r\n      cls.splice(cls.indexOf(getBootstrapClass(size, { start: 'd', end: display })), 1);\r\n      cls.push(getBootstrapClass(size, { start: 'd', end: 'none' }));\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nexport function getBootstrapClass(\r\n  size: BsSize,\r\n  { start = '', end = '' }: { start?: string | number, end?: string | number } = {}\r\n): string {\r\n  return [start, size, end].filter((value: string | number) => !(!value)).join('-');\r\n};\r\n\r\nexport function toClassString(cls: string[]): string {\r\n  return cls.filter((value: string, i: number, arr: string[]) =>\r\n    !(!value) && arr.indexOf(value) === i\r\n  ).join(' ');\r\n}\r\n\r\nexport function getColClass({ width = 'auto', offset = false, order = false }: IColProps): string[] {\r\n  return [ width, offset, order ].reduce((cls: string[], option: any, i: number): string[] => {\r\n    switch (i) {\r\n      case COLUMN.WIDTH: getColumnOptions<Width>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'col', end: 'auto' === opts ? '' : opts }))\r\n      ); break;\r\n      case COLUMN.OFFSET: getColumnOptions<BsCol12>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'offset', end: opts }))\r\n      ); break;\r\n      case COLUMN.ORDER: getColumnOptions<Order>(option, (size, opts) =>\r\n      cls.push(getBootstrapClass(size, { start: 'order', end: opts }))\r\n    ); break;\r\n    }\r\n    return [ ...cls ];\r\n  }, []);\r\n}\r\n\r\nexport function getBsClasses(display: BsDisplay, {\r\n  className = '',\r\n  margin = false,\r\n  padding = false,\r\n  border = false,\r\n  rounded = false,\r\n  colors = false,\r\n  hidden = false\r\n}: IBsgridProps): string[] {\r\n  const isMgSpacing = Object.keys(margin).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n  const isPdSpacing = Object.keys(padding).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n\r\n  return [\r\n    className,\r\n    ...getSpacingClass('m', !isMgSpacing ? { def: margin } : margin),\r\n    ...getSpacingClass('p', !isPdSpacing ? { def: padding } : padding),\r\n    ...getBorderClass(border),\r\n    ...getRoundedClass(rounded),\r\n    ...getColorClass(colors),\r\n    ...getDisplayClass(display, hidden)\r\n  ];\r\n};\r\n\r\nexport default interface IBsgridProps {\r\n  tagName?: string;\r\n  className?: string;\r\n\r\n  margin?: BsMargin | IBreakpoint<BsMargin>;\r\n  padding?: BsPadding | IBreakpoint<BsPadding>;\r\n  border?: BsBorder;\r\n  rounded?: BsRounded;\r\n  colors?: BsColors;\r\n  hidden?: BsHidden;\r\n\r\n  children?: ReactNode;\r\n}","import { FC, createElement } from 'react';\r\n\r\nimport IBsgridProps, {\r\n  IRowProps,\r\n  IColProps,\r\n  toClassString,\r\n  getBsClasses,\r\n  getColClass,\r\n  getBootstrapClass\r\n} from './grid.types';\r\n\r\n\r\n// TODO: Components\r\nexport const BsContainer: FC<IBsgridProps> = (props: IBsgridProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([ 'container', ...getBsClasses('block', props) ])\r\n  }, children);\r\n};\r\n\r\nexport const BsRow: FC<IRowProps> = (props: IRowProps) => {\r\n  const { tagName = 'div', children, gutters = true, alignable = '', align = false } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'row',\r\n      gutters ? '' : 'no-gutters',\r\n      align === false ? '' : `justify-content-${getBootstrapClass(alignable, { end: align })}`,\r\n      ...getBsClasses('flex', props)\r\n    ])\r\n  }, children);\r\n};\r\n\r\nexport const BsCol: FC<IColProps> = (props: IColProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'col',\r\n      ...getColClass(props),\r\n      ...getBsClasses('block', props)\r\n    ])\r\n  }, children);\r\n}\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  Reducer,\r\n  Dispatch,\r\n  SetStateAction,\r\n  MouseEvent,\r\n  useCallback,\r\n  useReducer,\r\n  useEffect\r\n} from 'react';\r\n\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\n// TODO: Types\r\nexport enum BTN { DISMISS, CALLBACK }\r\n\r\ninterface IModalAction { show: boolean; onShowBsModal?: () => void; }\r\ninterface IModalState { id: string; setShow: Dispatch<SetStateAction<boolean>>; }\r\n\r\ninterface IEventInput {\r\n  id: string;\r\n  isShow: boolean;\r\n  closeByBtn: boolean;\r\n  setModal: Dispatch<IModalAction>;\r\n  onShowBsModal?: () => void;\r\n  doCallback: (btn: BTN | symbol) => void | 'close';\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  closeByBtn?: boolean;\r\n  title?: string | { icon: string; text: string; };\r\n  children: ReactNode;\r\n  show: [ boolean, Dispatch<SetStateAction<boolean>> ],\r\n  doCallback?: (btn: BTN | symbol) => void | 'close';\r\n  onShowBsModal?: () => void;\r\n  btns?: {\r\n    text?: string;\r\n    code: BTN | symbol;\r\n    icon?: string;\r\n    color?: 'primary' | 'info' | 'success' | 'warning' | 'danger' | 'white' | 'light' | 'secondary' | 'dark';\r\n  }[];\r\n}\r\n\r\n// TODO: Events & Reducer\r\nconst useEvents = ({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback }: IEventInput) => {\r\n  useEffect(() => {\r\n    if (!$(`#${ id }`).is(':hidden') !== isShow)\r\n      setModal({ show: isShow, onShowBsModal });\r\n  }, [ id, isShow, setModal, onShowBsModal ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      const $el = $(e.target);\r\n\r\n      if ((!closeByBtn && $el.parents('div.modal-content').length === 0)\r\n      || $el.is('button.modal-btn') || $el.parents('button.modal-btn').length > 0) {\r\n        setModal({ show: false });\r\n        doCallback(BTN.DISMISS);\r\n      }\r\n    }, [ setModal, closeByBtn, doCallback ]),\r\n\r\n    onClickFbar: useCallback((btn: BTN | symbol) => {\r\n      if ('close' === doCallback(btn) || BTN.DISMISS === btn)\r\n        setModal({ show: false });\r\n    }, [ setModal, doCallback ])\r\n  };\r\n};\r\n\r\nconst modalReducer: Reducer<IModalState, IModalAction> = (state, { show, onShowBsModal }) => {\r\n  const { id, setShow } = state;\r\n\r\n  $(`#${ id }`).modal(show ? 'show' : 'hide');\r\n  setShow(show);\r\n\r\n  if (show && onShowBsModal instanceof Function)\r\n    onShowBsModal();\r\n\r\n  return state;\r\n};\r\n\r\n// TODO: Components\r\nconst BsModal: FC<IProps> = ({\r\n  className = '',\r\n  closeByBtn = false,\r\n  title = '',\r\n  btns = [],\r\n  show: [ isShow, setShow ],\r\n  children,\r\n  onShowBsModal = () => {},\r\n  doCallback = () => { return 'close'; }\r\n}) => {\r\n  const [{ id }, setModal ] = useReducer(modalReducer, { id: uuidv4(), setShow });\r\n  const { onClickMask, onClickFbar } = useEvents({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback });\r\n\r\n  return !isShow ? null : (\r\n    <div className=\"modal\" id={ id } onClick={ onClickMask } data-backdrop={ closeByBtn ? 'static' : true } data-keyboard={ !closeByBtn }>\r\n      <div className=\"modal-dialog\">\r\n        <div className={ `modal-content ${ className } px-2` }>\r\n          { !title ? null : (({ text, icon = '' }: { text: string; icon?: string; }) =>\r\n            <div className=\"modal-header py-3\">\r\n              <h5 className=\"modal-title\">\r\n                { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n\r\n                <Fmsg tagName=\"strong\" id={ text } />\r\n              </h5>\r\n\r\n              <button type=\"button\" className=\"close text-white modal-btn\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          )('string' === typeof title ? { text: title } : title)}\r\n\r\n          <div className=\"modal-body py-2\">{ children }</div>\r\n\r\n          { btns.length === 0 ? null : (\r\n            <div className=\"modal-footer pt-2\">\r\n              { btns.map(({ text = '', icon = '', color = '', code }) => (\r\n                <button type=\"button\" key={ 'symbol' === typeof code ? code.description : code } onClick={\r\n                  () => onClickFbar(code)\r\n                } className={\r\n                  `modal-btn btn btn-${ color ? color : BTN.DISMISS === code ? 'secondary' : 'primary' }`\r\n                }>\r\n                  { !icon ? null : <i className={ `${icon} mr-2` } /> }\r\n                  { !text ? null : <Fmsg id={ text } /> }\r\n                </button>\r\n              )) }\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BsModal;\r\n","import React, { FC, KeyboardEvent, ReactElement, useCallback } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { BsColor, getTextColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Types\r\ninterface IDropdownEventInput {\r\n  onSelect: (value: any) => void;\r\n}\r\n\r\ninterface IOptionEventInput extends IDropdownEventInput {\r\n  value: any;\r\n}\r\n\r\ninterface IOptionProps {\r\n  className?: string;\r\n  value: any;\r\n  icon?: string;\r\n  desc?: string;\r\n  disabled?: boolean;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\ninterface IDropdownProps {\r\n  Toggle: ReactElement | string;\r\n  children?: ReactElement | ReactElement[];\r\n  color?: BsColor;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useOptionEvents = ({ value, onSelect }: IOptionEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback(() => onSelect(value), [ value, onSelect ]),\r\n\r\n    onPressEnter: useCallback(({ key }: KeyboardEvent) => 'Enter' !== key ? null : onSelect(value), [ value, onSelect ])\r\n  };\r\n};\r\n\r\nconst useDropdownEvents = ({ onSelect }: IDropdownEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback((value: any) => onSelect(value), [ onSelect ])\r\n  }\r\n};\r\n\r\n// TODO: Components\r\nexport const BsOption: FC<IOptionProps> = ({\r\n  className = '',\r\n  value,\r\n  icon,\r\n  desc = value,\r\n  disabled = false,\r\n  onSelect = () => {}\r\n}) => {\r\n  const intl = useIntl();\r\n  const { onSelectOption, onPressEnter } = useOptionEvents({ value, onSelect });\r\n\r\n  return (\r\n    <button type=\"button\" disabled={ disabled } className={ `dropdown-item ${ className }` }\r\n      onClick={ onSelectOption } onKeyPress={ onPressEnter }>\r\n\r\n      { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n      { desc in intl.messages ? intl.messages[ desc ] : desc }\r\n    </button>\r\n  );\r\n};\r\n\r\nconst BsDropdown: FC<IDropdownProps> = ({ Toggle, children = [], color = 'white', onSelect = () => {}}) => {\r\n  const options = Array.isArray(children) ? children : [ children ];\r\n  const { onSelectOption } = useDropdownEvents({ onSelect });\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      { 'string' !== typeof Toggle ? (\r\n        <Toggle.type {...{ ...Toggle.props, className: `${ Toggle.props.className || '' } dropdown-toggle` }} data-toggle=\"dropdown\" />\r\n      ) : (\r\n        <button type=\"button\" className={ `btn btn-${ color } dropdown-toggle` } data-toggle=\"dropdown\">\r\n          { Toggle }\r\n        </button>\r\n      )}\r\n\r\n      <div className={ `dropdown-menu w-100 bg-${ color } text-${ getTextColor(color) }` }>\r\n        { options.length === 0 ? <BsOption disabled value=\"OPTION_NOT_FOUND\" /> : options.map(opt =>\r\n          <BsOption key={ opt.key } {...{\r\n            ...opt.props,\r\n            onSelect: onSelectOption\r\n          }}  />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BsDropdown;\r\n","\r\nexport type BsColor = 'primary' | 'secondary' | 'success' | 'danger'\r\n| 'warning' | 'info' | 'light' | 'dark' | 'white';\r\n\r\nexport const getTextColor = (bgColor: BsColor): BsColor =>\r\n  [ 'warning', 'light', 'white' ].indexOf(bgColor) >= 0 ? 'dark' : 'white';\r\n","import React, {\r\n  FC,\r\n  Dispatch,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  SetStateAction,\r\n  useState,\r\n  useCallback\r\n} from 'react';\r\n\r\nimport { useRecord } from '../../services/store/record';\r\n\r\nimport BsModal, { BTN } from '../modal';\r\nimport BsDropdown, { BsOption } from './BsDropdown';\r\n\r\n\r\n// TODO: Types\r\nconst SAVE_SYMBOL = Symbol('SAVE');\r\n\r\nexport type ShowModal = [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n\r\ninterface IEventInput {\r\n  group: string;\r\n  setValue: (value: string) => void;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\ninterface IToggleProps {\r\n  show: ShowModal;\r\n  className?: string;\r\n  icon?: string;\r\n}\r\n\r\ninterface IModalProps {\r\n  show: ShowModal;\r\n  group: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ group, setValue, onChange }: IEventInput) => {\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onFilterChange: useCallback(({ target: { value }}: ChangeEvent<HTMLInputElement>) => {\r\n      setValue(value);\r\n    }, [ setValue ]),\r\n\r\n    onSelectGroup: useCallback((value: any) => setValue(value as string), [ setValue ]),\r\n\r\n    onModalCallback: useCallback((btn: BTN | symbol) => {\r\n      if (SAVE_SYMBOL === btn)\r\n        onChange(group);\r\n    }, [ group, onChange ]),\r\n\r\n    doLoadGroupsOnOpen: useCallback(() => dispatch({ action: 'GROUP' }), [ dispatch ]),\r\n    \r\n    doStopSubmit: useCallback((e: FormEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      onChange(group);\r\n    }, [ group, onChange ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nexport const RecordGroupToggle: FC<IToggleProps> = ({ show, className = '', icon = 'fa fa-object-ungroup' }) => {\r\n  const onOpenGroup = useCallback(() => show[1](true), [ show ]);\r\n\r\n  return (\r\n    <button type=\"button\" className={ className } onClick={ onOpenGroup }>\r\n      <i className={ icon } />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst RecordGroup: FC<IModalProps> = ({ show, group, onChange }) => {\r\n  const [ value, setValue ] = useState(group);\r\n  const { store: { group: groups }} = useRecord();\r\n\r\n  const {\r\n    onFilterChange,\r\n    onSelectGroup,\r\n    onModalCallback,\r\n    doLoadGroupsOnOpen,\r\n    doStopSubmit\r\n  } = useEvents({ group: value, setValue, onChange });\r\n\r\n  return (\r\n    <BsModal className=\"bg-secondary\" show={ show } closeByBtn title={{\r\n      icon: 'fa fa-object-ungroup',\r\n      text: 'TITLE_SET_GROUP'\r\n    }} btns={[\r\n      { code: BTN.DISMISS, icon: 'fa fa-ban', text: 'CANCEL' },\r\n      { code: SAVE_SYMBOL, icon: 'fa fa-download', text: 'CONFIRM' }\r\n    ]} onShowBsModal={ doLoadGroupsOnOpen } doCallback={ onModalCallback }>\r\n      <form onSubmit={ doStopSubmit }>\r\n        <BsDropdown onSelect={ onSelectGroup } Toggle={\r\n          <input type=\"text\" className=\"form-control\" value={ value } onChange={ onFilterChange } />\r\n        }>\r\n          {(alloweds => alloweds.length === 0 ?\r\n            <BsOption value={ value } /> : alloweds.map($group =>\r\n              <BsOption key={ $group } value={ $group } />\r\n            )\r\n          )(groups.filter($group => $group.indexOf(value) >= 0))}\r\n        </BsDropdown>\r\n      </form>\r\n    </BsModal>\r\n  );\r\n}\r\n\r\nexport default RecordGroup;\r\n","import React, { FC } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  className?: string;\r\n  disableOnce?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst CycleDropdown: FC<IProps> = ({ value, onChange, className = '', disableOnce = false }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { disableOnce ? null : (\r\n        <option value=\"once\">{ intl.messages.CYCLE_ONCE }</option>\r\n      )}\r\n      <option value=\"day\">{ intl.messages.CYCLE_DAY }</option>\r\n      <option value=\"month\">{ intl.messages.CYCLE_MONTH }</option>\r\n      <option value=\"year\">{ intl.messages.CYCLE_YEAR }</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default CycleDropdown;","import React, { FC, ReactNode } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  children?: ReactNode;\r\n  className?: string;\r\n  disableDeposit?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst TypeDropdown: FC<IProps> = ({\r\n  className = '',\r\n  disableDeposit = false,\r\n  children,\r\n  value,\r\n  onChange\r\n}) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { children }\r\n      <option value=\"income\">{ intl.messages.INCOME }</option>\r\n      <option value=\"expenses\">{ intl.messages.EXPENSES }</option>\r\n\r\n      { disableDeposit ? null : (\r\n        <option value=\"deposit\">{ intl.messages.DEPOSIT }</option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default TypeDropdown;\r\n","module.exports = __webpack_public_path__ + \"static/media/404.bd332713.svg\";","module.exports = __webpack_public_path__ + \"static/media/cash-logo.cb5cc733.svg\";","var map = {\n\t\"./en.json\": [\n\t\t59,\n\t\t1\n\t],\n\t\"./zh.json\": [\n\t\t60,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 52;\nmodule.exports = webpackAsyncContext;","import React, {\r\n  FC,\r\n  Reducer,\r\n  Dispatch,\r\n  ReactNode,\r\n  createContext,\r\n  useState,\r\n  useReducer,\r\n  useMemo,\r\n  useContext\r\n} from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\nexport enum LANG { DEFAULT, EN, ZH }\r\n\r\ninterface IMessages { [message: string]: string; }\r\n\r\ninterface IMsgOptions { locale: string; messages: IMessages; }\r\n\r\ninterface IImportJSON { default: IMessages; }\r\n\r\ninterface IContext { locale: string; setLang: Dispatch<LANG> }\r\n\r\n\r\n// TODO: Variables & Reducer\r\nconst defintl = import('../assets/i18n/en.json').then(({ default: messages }: IImportJSON): IMsgOptions => ({\r\n  locale: 'en',\r\n  messages\r\n}));\r\n\r\nconst useI18n = () => useContext(Context);\r\n\r\nconst reducer: Reducer<Promise<IMsgOptions>, LANG> = (state, action: LANG) => {\r\n  switch (action) {\r\n    case LANG.EN: return defintl.then(res => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'en');\r\n\r\n      return res;\r\n    });\r\n    case LANG.ZH: return import('../assets/i18n/zh.json').then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'zh');\r\n\r\n      return { locale: 'zh', messages };\r\n    });\r\n    default: return ((locale: string) => {\r\n      locale = locale.substring(0, locale.indexOf('-') > 0 ? locale.indexOf('-') : undefined);\r\n\r\n      return import(`../assets/i18n/${locale}.json`).then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n        localStorage.setItem('CASH_MAP_LANG', locale);\r\n\r\n        return { locale, messages };\r\n      }).catch(() => defintl);\r\n    })(localStorage.getItem('CASH_MAP_LANG') || navigator.language.toLowerCase());\r\n  }\r\n};\r\n\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ locale: 'en', setLang: () => {} });\r\n\r\nconst I18n: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [{ locale, messages }, setMessages ] = useState<IMsgOptions>({ locale: 'en', messages: {} });\r\n  const [ promise, setLang ] = useReducer(reducer, defintl);\r\n  const hasMessages = Object.keys(messages).length > 0;\r\n\r\n  promise.then(msg => JSON.stringify(msg) === JSON.stringify(messages) ? null : setMessages(msg));\r\n\r\n  useMemo(() => hasMessages ? null : setLang(LANG.DEFAULT), [ hasMessages ]);\r\n\r\n  return !hasMessages ? null : (\r\n    <IntlProvider {...{ locale, messages }}>\r\n      <Context.Provider value={{ locale, setLang }}>\r\n        { children }\r\n      </Context.Provider>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport {\r\n  useI18n\r\n}\r\n","import React, { FC, ReactNode } from 'react';\r\nimport { MessageFormatElement } from 'intl-messageformat-parser';\r\n\r\ninterface IInlineGroupProps {\r\n  label?: string | MessageFormatElement[];\r\n  labelWidth?: number | string;\r\n  className?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const BsInlineGroup: FC<IInlineGroupProps> = ({ label = '', labelWidth = 'auto', className = '', children }) => {\r\n  return (\r\n    <div className={[ 'input-group', className ].join(' ')}>\r\n      { !label ? null : (\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text justify-content-end\" style={{ width: labelWidth }}>{ label }</div>\r\n        </div>\r\n      )}\r\n\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useState, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { ISummary } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../grid';\r\nimport { BsInlineGroup } from '../form';\r\n\r\nimport CycleDropdown from '../editor/CycleDropdown';\r\n\r\n\r\n// TODO: Component\r\nconst SumDashboard: FC<{\r\n  summary: ISummary;\r\n  cycle: 'day' | 'month' | 'year';\r\n  onCycleChange: (value: 'day' | 'month' | 'year') => void\r\n}> = ({ summary, cycle, onCycleChange }) => {\r\n  const intl = useIntl();\r\n  const labelWidth = 'zh' === intl.locale ? 60 : 110;\r\n  const [ expanded, setExpanded ] = useState<boolean>(false);\r\n  const doCollapse = useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]);\r\n\r\n  return (\r\n    <fieldset className={ `summary-dashboard shadow ${ expanded ? 'sd-expand' : 'sd-collapse' }` }>\r\n      <legend>\r\n        <button type=\"button\" className=\"btn btn-link\" onClick={ doCollapse }>\r\n          <i className={ `mr-2 fa fa-${ expanded ? 'minus' : 'plus' }-square-o` } />\r\n          { intl.messages.SUMMARY } ({ intl.messages[ `CYCLE_${ cycle.toUpperCase() }` ] })\r\n        </button>\r\n      </legend>\r\n\r\n      { !expanded ? (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow className=\"text-right\">\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"APPLICABLE\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n            </BsCol>\r\n\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"DEPOSIT\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      ) : (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow>\r\n            <BsCol className=\"form-group\" width={{ sm: 6 }}>\r\n              <Fmsg tagName=\"label\" id=\"VIEW_CYCLE\" />\r\n\r\n              <CycleDropdown value={ cycle } disableOnce onChange={\r\n                value => onCycleChange(value as 'day' | 'month' | 'year')\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow>\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.INCOME } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.income).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.EXPENSES } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.expenses).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.DEPOSIT } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.APPLICABLE } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      )}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default SumDashboard;\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { BTN, useMessage } from '../../services/message';\r\nimport { IRecordData, useRecord } from '../../services/store/record';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  record: IRecordData;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ record }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onSlide: useCallback((turnon: boolean) => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    }), [ record, dispatch ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'UPDATE',\r\n        params: { ...record, group: value || '' },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, isLoading, record ]),\r\n\r\n    doRemove: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_REMOVE_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'REMOVE',\r\n          params: record,\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, record ])\r\n  };\r\n}\r\n\r\n// TODO: Components\r\nconst AmountSlidebar: FC<{ record: IRecordData; }> = ({ record }) => {\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const { onSlide, doUpdateGroup, doRemove } = useEvents({ record });\r\n\r\n  return (\r\n    <div className=\"form-group amount-slidebar\">\r\n      <RecordGroup show={ showGroup } group={ record.group || '' } onChange={ doUpdateGroup } />\r\n\r\n      <div className=\"media\">\r\n        <div className=\"btn-group-vertical\">\r\n          <Link className=\"mr-3 btn btn-link text-info\" to={ `/update/${ record.uid }` }>\r\n            <i className=\"fa fa-pencil-square-o\" />\r\n          </Link>\r\n\r\n          <RecordGroupToggle show={ showGroup } className=\"btn btn-link text-warning\" />\r\n        </div>\r\n        \r\n        <span className=\"media-body py-2\">\r\n          <h4>{ record.desc }</h4>\r\n          $ { Numeral(record.amount).format('0,0') } / { intl.messages[`CYCLE_${ (record.cycle || '').toUpperCase() }`] }\r\n        </span>\r\n\r\n        <button type=\"button\" className=\"btn btn-link text-white mt-2\" onClick={ doRemove }>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n\r\n      <input type=\"range\" className={ `custom-range ${ record.type  }` } min=\"0\" max=\"1\"\r\n        value={ 'actual' === record.status ? 1 : 0 } onChange={({ target: { value }}) => onSlide(value === '1')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountSlidebar;\r\n","import React, { FC, useState, useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { useMessage } from '../../services/message';\r\nimport { useRecord, IRecordData } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../grid';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\nimport AmountSlidebar from './AmountSlidebar';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  list: IRecordData[];\r\n  expanded: [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ list, expanded: [ expanded, setExpanded ] }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    doCollapse: useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => {\r\n        let count = 0;\r\n\r\n        list.forEach(record => dispatch({\r\n          action: 'UPDATE',\r\n          params: { ...record, group: value },\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => {\r\n              count++;\r\n\r\n              if (count === list.length) Message({\r\n                type: 'INFO',\r\n                content: 'MSG_SAVE_SUCCESS'\r\n              });\r\n            }\r\n          })\r\n        }));\r\n      }\r\n    }), [ Message, Loading, isLoading, dispatch, list ])\r\n  };\r\n};\r\n\r\n// TODO: Component\r\nconst GroupCollapse: FC<{ groupName?: string; list: IRecordData[]; }> = ({ groupName = 'UNGROUP', list }) => {\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const expanded = useState<boolean>(true);\r\n  const { doCollapse, doUpdateGroup } = useEvents({ list, expanded });\r\n\r\n  return (\r\n    <BsContainer margin={{ y: 3 }}>\r\n      <RecordGroup show={ showGroup } group={ 'UNGROUP' === groupName ? '' : groupName } onChange={ doUpdateGroup } />\r\n\r\n      <fieldset className=\"group-title border-top border-warning col-12 col-sm-8 col-md-6\">\r\n        <legend>\r\n          <button type=\"button\" className=\"btn btn-link text-warning\" onClick={ doCollapse }>\r\n            <i className={ `mr-2 fa fa-${ expanded ? 'minus' : 'plus' }-square-o` } />\r\n            { 'UNGROUP' === groupName ? intl.messages.UNGROUP : groupName }\r\n          </button>\r\n\r\n          <RecordGroupToggle show={ showGroup } icon=\"fa fa-pencil-square\" className=\"btn btn-link text-info\" />\r\n        </legend>\r\n      </fieldset>\r\n\r\n      { !expanded[0] ? null : list.map((record, i) =>\r\n        <BsRow key={`record-${ record.uid }`} align=\"center\">\r\n          <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }} border={\r\n            i === (list.length - 1) ? false : { b: true }\r\n          }>\r\n            <AmountSlidebar record={ record } />\r\n          </BsCol>\r\n        </BsRow>\r\n      )}\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\nexport default GroupCollapse;\r\n","import React, { Dispatch, SetStateAction, FC, useState, useCallback, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\n\r\nimport { useLoading } from '../services/loading';\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { useRecord } from '../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from './grid';\r\nimport { BsInlineGroup } from './form';\r\n\r\nimport SumDashboard from './toolbar/SumDashboard';\r\nimport GroupCollapse from './toolbar/GroupCollapse';\r\n\r\nimport TypeDropdown from './editor/TypeDropdown';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  summaryCycle: 'day' | 'month' | 'year';\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ summaryCycle, setFilter }: IEventInput) => {\r\n  const [ loaded, setLoaded ] = useState<boolean>(false);\r\n  const { Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  useEffect(() => {\r\n    if (!loaded) Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'SUMMARY',\r\n        params: { cycle: summaryCycle },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => dispatch({\r\n          action: 'LIST',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => setLoaded(true)\r\n          })\r\n        })\r\n      })\r\n    });\r\n  }, [ Loading, Message, summaryCycle, loaded, setLoaded, dispatch ]);\r\n\r\n  return {\r\n    onCycleChange: useCallback((value: 'day' | 'month' | 'year') => dispatch({\r\n      action: 'SUMMARY',\r\n      params: { cycle: value }\r\n    }), [ dispatch ]),\r\n    \r\n    onFilterChange: useCallback((value: string) => {\r\n      setFilter(value);\r\n      dispatch({ action: 'LIST', params: { type: 'all' === value ? '' : value }})\r\n    }, [ dispatch, setFilter ]),\r\n\r\n    doClear: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_CLEAR_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'CLEAR',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch ])\r\n  }\r\n};\r\n\r\n// TODO: Component - APP\r\nconst App: FC = () => {\r\n  const intl = useIntl();\r\n  const [ filter, setFilter ] = useState('all');\r\n  const { store: { summary, list } } = useRecord();\r\n  const { onCycleChange, onFilterChange, doClear } = useEvents({ summaryCycle: summary.cycle, setFilter });\r\n\r\n  return (\r\n    <div>\r\n      <SumDashboard summary={ summary } cycle={ summary.cycle } onCycleChange={ onCycleChange } />\r\n\r\n      { Object.keys(list).map(group =>\r\n        <GroupCollapse key={ group } groupName={ group } list={ list[group] } />\r\n      )}\r\n\r\n      <BsContainer className=\"list-fbar\">\r\n        <BsRow padding={{ t: 3 }}>\r\n          <BsCol className=\"form-group\">\r\n            <Fmsg tagName=\"label\" id=\"FILTER_MAINTAIN\" />\r\n\r\n            <BsInlineGroup>\r\n              <Link className=\"btn btn-primary\" to=\"/append\">\r\n                <i className=\"fa fa-plus mr-2\" /> { intl.messages.APPEND_RECORD }\r\n              </Link>\r\n\r\n              <TypeDropdown className=\"rounded mx-2\" value={ filter } onChange={ onFilterChange }>\r\n                <option value=\"all\">{ intl.messages.ALL_OPTION }</option>\r\n              </TypeDropdown>\r\n\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={ doClear }>\r\n                <i className=\"fa fa-remove mr-2\" /> { intl.messages.CLEAR }\r\n              </button>\r\n            </BsInlineGroup>\r\n          </BsCol>\r\n        </BsRow>\r\n      </BsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component, FC, useEffect, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport { RouteProps, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useLoading } from './loading';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../components/grid';\r\nimport App from '../components/App';\r\n\r\nimport error404 from '../assets/imgs/404.svg';\r\n\r\n\r\n// TODO: Types\r\ninterface ILoadable {\r\n  loading?: FC;\r\n  loader: () => Promise<{\r\n    default: FC<RouteComponentProps<any>>;\r\n  }>;\r\n}\r\n\r\ninterface IRouter extends RouteProps {\r\n  text?: string;\r\n  icon?: string;\r\n}\r\n\r\n// TODO: 404 Page Not Found\r\nconst PageNotFound: FC = () => {\r\n  const goBack = useCallback(() => window.history.back(), []);\r\n\r\n  return (\r\n    <BsContainer className=\"not-found-404\">\r\n      <BsRow align=\"center\">\r\n        <BsCol width={{ def: 12, sm: 6, md: 4 }}>\r\n          <img className=\"img-fluid\" src={error404} alt=\"404\" />\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      <BsRow align=\"center\">\r\n        <BsCol className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-lg btn-link\" onClick={goBack}>\r\n            <Fmsg id=\"BACK_TO_PREV_PAGE\" />\r\n          </button>\r\n        </BsCol>\r\n      </BsRow>\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\n// TODO: Loading Mask\r\nconst LoadingMask: FC = () => {\r\n  const { Loading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    Loading({ show: true });\r\n\r\n    return () => Loading({ show: false })\r\n  }, [ Loading ]);\r\n  return null;\r\n};\r\n\r\n// TODO: Loadable\r\nconst Loadable = ({ loader, loading = LoadingMask }: ILoadable) => class LoadableComponent extends Component<\r\n  RouteComponentProps<any>,\r\n  { Route: FC<RouteComponentProps<any>>; }\r\n> {\r\n  state = { Route: loading };\r\n\r\n  constructor(props: RouteComponentProps<any>) {\r\n    super(props);\r\n    loader().then(({ default: component }) => this.setState({ Route: component }));\r\n  }\r\n\r\n  render() {\r\n    const { Route } = this.state;\r\n\r\n    return (\r\n      <Route { ...this.props } />\r\n    );\r\n  }\r\n};\r\n  \r\n\r\n// TODO: Router Options\r\nconst router: IRouter[] = [{\r\n  path: '/',\r\n  exact: true,\r\n  component: App\r\n}, {\r\n  path: '/append',\r\n  text: 'APPEND_RECORD',\r\n  icon: 'fa fa-plus',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/update/:uid',\r\n  text: 'UPDATE_RECORD',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  component: PageNotFound\r\n}];\r\n\r\nexport default router;\r\n","import React, { FC, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useI18n, LANG } from '../../services/i18n';\r\n\r\nimport Logo from '../../assets/imgs/cash-logo.svg';\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = () => {\r\n  const { setLang } = useI18n();\r\n\r\n  return {\r\n    asEnglish: useCallback(() => setLang(LANG.EN), [ setLang ]),\r\n    asChinese: useCallback(() => setLang(LANG.ZH), [ setLang ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst MainHeader: FC = () => {\r\n  const dropdown = useRef(null);\r\n  const { asEnglish, asChinese } = useEvents();\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-dark bg-dark text-secondary border-bottom border-white\">\r\n      <Link className=\"navbar-brand text-white\" to=\"/\">\r\n        <img className=\"rounded-circle\" src={ Logo } alt=\"Logo\" />\r\n      </Link>\r\n      \r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"lang-dropdown navbar-nav ml-auto\">\r\n          <li ref={ dropdown } className=\"nav-item dropdown\">\r\n            <button type=\"button\" className=\"btn btn-link nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n              <i className=\"fa fa-language mr-2\" />\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asEnglish }>English</button>\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asChinese }>繁體中文</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuidv4 from 'uuid/v4';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport $ from 'jquery';\nimport 'hammerjs';\nimport 'popper.js';\n\nimport I18n from './services/i18n';\nimport LoadingMask from './services/loading';\nimport MessageBox from './services/message';\nimport RecordStore from './services/store/record';\nimport routers from './services/router';\n\nimport MainHeader from './components/toolbar/MainHeader';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/main.scss';\n\n\n(window as any).$ = $;\n\nimport('bootstrap').then(() => {\n  ReactDOM.render((\n    <I18n>\n      <LoadingMask>\n        <MessageBox>\n          <HashRouter>\n            <MainHeader />\n\n            <div className=\"cash-map-app\">\n              <RecordStore>\n                <Switch>\n                  { routers.map(options => <Route key={uuidv4()} {...options} />) }\n                </Switch>\n              </RecordStore>\n            </div>\n          </HashRouter>\n        </MessageBox>\n      </LoadingMask>\n    </I18n>\n  ), document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}