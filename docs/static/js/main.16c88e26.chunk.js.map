{"version":3,"sources":["services/loading.tsx","services/message.tsx","components/bs/BsForm.tsx","components/bs/BsModal.tsx","components/editor/RecordGroup.tsx","services/store/source/storage.ts","services/store/source/reducer.ts","services/store/source/index.tsx","components/bs/BsDropdown.tsx","@types/bs.types.ts","components/bs/type.grid.ts","components/bs/BsGrid.tsx","components/editor/CycleDropdown.tsx","components/editor/TypeDropdown.tsx","assets/imgs/404.svg","assets/imgs/cash-logo.svg","assets/i18n lazy /^/.*/.json$/ groupOptions: {} namespace object","services/i18n.tsx","components/toolbar/SumDashboard.tsx","components/toolbar/AmountSlidebar.tsx","components/toolbar/GroupCollapse.tsx","components/App.tsx","services/router.tsx","components/toolbar/MainHeader.tsx","serviceWorker.ts","index.tsx","services/store/record/firebase.ts","services/store/record/reducer.ts","services/store/record/type.ts","services/store/record/index.tsx"],"names":["useLoading","useContext","Context","createContext","isLoading","Loading","LoadingMask","children","useState","show","callbackFn","useEffect","Function","Provider","value","className","BTN","STORE_DISPATCH","Symbol","useMessage","messageStore","state","options","btns","type","text","code","CONFIRM","icon","CANCEL","clearTimeout","timeout","handler","setMessage","dispatch","uid","uuidv4","undefined","window","setTimeout","Message","MessageBox","useReducer","storeDispatch","$do","onClickMask","$","modal","remove","useCallback","e","target","parents","length","preventDefault","stopPropagation","useEvents","id","onClick","toLowerCase","title","tagName","content","map","btn","key","autoFocus","BsInlineGroup","label","labelWidth","join","style","width","modalReducer","onShowBsModal","setShow","BsModal","closeByBtn","isShow","doCallback","setModal","is","$el","DISMISS","onClickFbar","data-backdrop","data-keyboard","data-dismiss","aria-label","aria-hidden","color","description","SAVE_SYMBOL","RecordGroupToggle","onOpenGroup","RecordGroup","alloweds","group","onChange","setValue","groups","useRecord","onFilterChange","onSelectGroup","onModalCallback","doLoadGroupsOnOpen","action","doStopSubmit","onSubmit","BsDropdown","onSelect","Toggle","filter","$group","indexOf","setSources","list","localStorage","setItem","JSON","stringify","get","getItem","getKey","desc","parse","create","source","update","data","setKey","SourceReducer","switchTo","current","Error","useSource","SourceContext","sourceKey","sources","SourceStore","setSourceKey","BsOption","disabled","intl","useIntl","onSelectOption","onPressEnter","useOptionEvents","onKeyPress","messages","bgColor","Array","isArray","useDropdownEvents","props","data-toggle","opt","COLUMN","getColumnOptions","fn","opts","Object","def","keys","forEach","size","getSpacingClass","kind","cls","bssize","push","getBootstrapClass","start","end","on","$value","toClassString","i","arr","getColClass","offset","order","reduce","option","WIDTH","OFFSET","ORDER","getBsClasses","display","margin","padding","border","rounded","colors","hidden","isMgSpacing","prop","isPdSpacing","getBorderClass","getRoundedClass","getColorClass","hiddenOn","breakpoint","splice","getDisplayClass","BsContainer","createElement","BsRow","gutters","alignable","align","BsCol","CycleDropdown","disableOnce","CYCLE_ONCE","CYCLE_DAY","CYCLE_MONTH","CYCLE_YEAR","TypeDropdown","disableDeposit","INCOME","EXPENSES","DEPOSIT","module","exports","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","ids","t","LANG","defintl","locale","default","reducer","EN","res","ZH","navigator","language","substring","catch","setLang","I18n","setMessages","promise","hasMessages","msg","useMemo","DEFAULT","SumDashboard","summary","cycle","onCycleChange","expanded","setExpanded","doCollapse","SUMMARY","toUpperCase","sm","Numeral","income","format","expenses","deposit","APPLICABLE","applicable","AmountSlidebar","record","showGroup","onSlide","turnon","params","status","doUpdateGroup","fail","message","success","doRemove","to","amount","min","max","GroupCollapse","groupName","actualCount","sum","getSummary","ignore","doSlideAll","count","y","md","UNGROUP","lg","b","step","App","setFilter","summaryCycle","loaded","setLoaded","doClear","APPEND_RECORD","ALL_OPTION","CLEAR","Loadable","loader","loading","Route","component","setState","this","Component","router","path","exact","goBack","history","back","src","error404","alt","asEnglish","asChinese","MainHeader","dropdown","useRef","Logo","ref","Boolean","location","hostname","match","ReactDOM","render","routers","document","getElementById","serviceWorker","ready","registration","unregister","Database","Firebase","FIREBASE_OPTIONS","database","getRef","getSpecificSum","sumcycle","daysInMonth","Moment","Date","daysInYear","getFullYear","dayOfYear","Math","floor","getAvgAmount","snapshot","exists","reject","child","val","param","emptyFn","toGroup","sort","g1","g2","doReload","FirebaseRecord","StateStore","$list","toList","DispatchStore","$params","DATE_FROMAT","RecordModel","validFm","validTo","$uid","$desc","$type","$status","$cycle","$validFm","$validTo","$amount","showID","toDate","toString","amt","parseFloat","isNaN","DEFAULT_STATE","isKeyValid","RecordContext","RecordStore","store","$dispatch"],"mappings":"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","file":"static/js/main.16c88e26.chunk.js","sourcesContent":["import React, {\r\n  FC,\r\n  ReactNode,\r\n  Dispatch,\r\n  SetStateAction,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\ninterface IState { show: boolean; callbackFn?: () => void; }\r\ninterface IContext { isLoading: boolean; Loading: Dispatch<SetStateAction<IState>> }\r\n\r\n// TODO: Variables\r\nconst useLoading = () => useContext(Context);\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ isLoading: false, Loading: () => {} });\r\n\r\nconst LoadingMask: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ show: isLoading, callbackFn }, Loading ] = useState<IState>({ show: false });\r\n\r\n  useEffect(() => {\r\n    if (callbackFn instanceof Function)\r\n      callbackFn();\r\n  }, [ callbackFn ]);\r\n\r\n  return (\r\n    <Context.Provider value={{ isLoading, Loading }}>\r\n      { !isLoading ? null : (\r\n        <div className=\"loading-mask\" />\r\n      )}\r\n\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadingMask;\r\nexport { useLoading };\r\n","import { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport React, {\r\n  FC,\r\n  Dispatch,\r\n  Reducer,\r\n  ReactNode,\r\n  MouseEvent,\r\n  createContext,\r\n  useEffect,\r\n  useContext,\r\n  useReducer,\r\n  useCallback\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\nconst STORE_DISPATCH = Symbol('DISPATCH');\r\n\r\nexport enum BTN { CONFIRM, CANCEL }\r\n\r\ninterface IStoreState { options?: IMessageState; }\r\n\r\ninterface IContext {\r\n  options?: IMessageOptions;\r\n  Message: Dispatch<IMessageOptions | BTN>;\r\n  [ STORE_DISPATCH ]: Dispatch<IMessageOptions | BTN>;\r\n}\r\n\r\ninterface IMessageOptions {\r\n  type: 'INFO' | 'WARNING' | 'DANGER' | 'CONFIRM';\r\n  uid?: string;\r\n  title?: string;\r\n  icon?: string;\r\n  content: string;\r\n  timeout?: number;\r\n  handler?: (btn: BTN) => any;\r\n}\r\n\r\ninterface IMessageState extends IMessageOptions {\r\n  btns: {\r\n    text?: string;\r\n    code: BTN;\r\n    icon?: string;\r\n  }[];\r\n}\r\n\r\n// TODO: Hooks\r\nconst useMessage = () => useContext(Context);\r\n\r\nconst useEvents = (options?: IMessageState) => {\r\n  useEffect(() => {\r\n    if (options)\r\n      $(`#${ options.uid }`).modal('show');\r\n    else\r\n      $('div.modal-backdrop').remove();\r\n  }, [ options ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      if ($(e.target).parents('div.alert').length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    }, [])\r\n  };\r\n};\r\n\r\n// TODO: Reducer\r\nconst messageStore: Reducer<IStoreState, IMessageOptions | BTN> = (state, options) => {\r\n  switch (typeof options) {\r\n    case 'object': return {\r\n      options: {\r\n        ...options,\r\n        btns: 'CONFIRM' !== options.type ? [\r\n          { text: 'CHECK_IT', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ] : [\r\n          { text: 'CANCEL', code: BTN.CANCEL, icon: 'fa fa-ban' },\r\n          { text: 'CONFIRM', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ]\r\n      }\r\n    };\r\n    case 'number':\r\n      if (state.options) {\r\n        clearTimeout(state.options.timeout);\r\n\r\n        if (state.options.handler instanceof Function) state.options.handler(\r\n          options\r\n        );\r\n      }\r\n      return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nconst setMessage: Reducer<Dispatch<IMessageOptions | BTN>, IMessageOptions | BTN> = (dispatch, options) => {\r\n  switch (typeof options) {\r\n    case 'number':\r\n      dispatch(options);\r\n      break;\r\n\r\n    case 'object':\r\n      const { type, timeout = null } = options;\r\n\r\n      dispatch({\r\n        ...options,\r\n        uid     : uuidv4(),\r\n        timeout : 'CONFIRM' === type ? undefined : window.setTimeout(\r\n          () => dispatch(BTN.CANCEL),\r\n          !timeout ? 2000 : timeout\r\n        )\r\n      });\r\n      break;\r\n  }\r\n  return dispatch;\r\n};\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({\r\n  Message: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst MessageBox: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ options }, storeDispatch ] = useReducer(messageStore, {});\r\n  const $do = useReducer(setMessage, storeDispatch);\r\n  const { onClickMask } = useEvents(options);\r\n\r\n  return (\r\n    <Context.Provider value={{ options, Message: $do[1], [ STORE_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n\r\n      { !options ? null : (\r\n        <div className=\"modal message-modal\" id={ options.uid } onClick={ onClickMask }>\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className={ `alert alert-${ 'CONFIRM' === options.type ? 'primary' : options.type.toLowerCase() }` }>\r\n                <div className=\"media\">\r\n                  { !options.icon ? null : <i className={ `mr-3 ${options.icon}` } /> }\r\n\r\n                  <div className=\"media-body\">\r\n                    { !options.title ? null : (\r\n                      <h5 className=\"mt-0\">\r\n                        <Fmsg tagName=\"strong\" id={ options.title } />\r\n                      </h5>\r\n                    ) }\r\n\r\n                    <Fmsg tagName=\"p\" id={ options.content } />\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      { options.btns.map(btn => (\r\n                        <button key={ `btn-${ btn.code }` } type=\"button\" autoFocus={ BTN.CANCEL === btn.code }\r\n                          onClick={ () => $do[1](btn.code) } className={ `ml-1 btn btn-${ BTN.CANCEL === btn.code ? 'secondary'\r\n                              : 'CONFIRM' === options.type ? 'primary'\r\n                                : options.type.toLowerCase()\r\n                          }`}>\r\n\r\n                          { !btn.icon ? null : <i className={ `mr-2 ${btn.icon}` } /> }\r\n                          { !btn.text ? null : <Fmsg id={ btn.text } /> }\r\n                        </button>\r\n                      )) }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageBox;\r\nexport { useMessage };\r\n","import React, { FC, ReactNode } from 'react';\r\nimport { MessageFormatElement } from 'intl-messageformat-parser';\r\n\r\ninterface IInlineGroupProps {\r\n  label?: string | MessageFormatElement[];\r\n  labelWidth?: number | string;\r\n  className?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const BsInlineGroup: FC<IInlineGroupProps> = ({ label = '', labelWidth = 'auto', className = '', children }) => {\r\n  return (\r\n    <div className={[ 'input-group', className ].join(' ')}>\r\n      { !label ? null : (\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text justify-content-end\" style={{ width: labelWidth }}>{ label }</div>\r\n        </div>\r\n      )}\r\n\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  Reducer,\r\n  Dispatch,\r\n  SetStateAction,\r\n  MouseEvent,\r\n  useCallback,\r\n  useReducer,\r\n  useEffect\r\n} from 'react';\r\n\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\n// TODO: Types\r\nexport enum BTN { DISMISS, CALLBACK }\r\n\r\ninterface IModalAction { show: boolean; onShowBsModal?: () => void; }\r\ninterface IModalState { id: string; setShow: Dispatch<SetStateAction<boolean>>; }\r\n\r\ninterface IEventInput {\r\n  id: string;\r\n  isShow: boolean;\r\n  closeByBtn: boolean;\r\n  setModal: Dispatch<IModalAction>;\r\n  onShowBsModal?: () => void;\r\n  doCallback: (btn: BTN | symbol) => void | 'close';\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  closeByBtn?: boolean;\r\n  title?: string | { icon: string; text: string; };\r\n  children: ReactNode;\r\n  show: [ boolean, Dispatch<SetStateAction<boolean>> ],\r\n  doCallback?: (btn: BTN | symbol) => void | 'close';\r\n  onShowBsModal?: () => void;\r\n  btns?: {\r\n    text?: string;\r\n    code: BTN | symbol;\r\n    icon?: string;\r\n    color?: 'primary' | 'info' | 'success' | 'warning' | 'danger' | 'white' | 'light' | 'secondary' | 'dark';\r\n  }[];\r\n}\r\n\r\n// TODO: Events & Reducer\r\nconst useEvents = ({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback }: IEventInput) => {\r\n  useEffect(() => {\r\n    if (!$(`#${ id }`).is(':hidden') !== isShow)\r\n      setModal({ show: isShow, onShowBsModal });\r\n  }, [ id, isShow, setModal, onShowBsModal ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      const $el = $(e.target);\r\n\r\n      if ((!closeByBtn && $el.parents('div.modal-content').length === 0)\r\n      || $el.is('button.modal-btn') || $el.parents('button.modal-btn').length > 0) {\r\n        setModal({ show: false });\r\n        doCallback(BTN.DISMISS);\r\n      }\r\n    }, [ setModal, closeByBtn, doCallback ]),\r\n\r\n    onClickFbar: useCallback((btn: BTN | symbol) => {\r\n      if ('close' === doCallback(btn) || BTN.DISMISS === btn)\r\n        setModal({ show: false });\r\n    }, [ setModal, doCallback ])\r\n  };\r\n};\r\n\r\nconst modalReducer: Reducer<IModalState, IModalAction> = (state, { show, onShowBsModal }) => {\r\n  const { id, setShow } = state;\r\n\r\n  $(`#${ id }`).modal(show ? 'show' : 'hide');\r\n  setShow(show);\r\n\r\n  if (show && onShowBsModal instanceof Function)\r\n    onShowBsModal();\r\n\r\n  return state;\r\n};\r\n\r\n// TODO: Components\r\nconst BsModal: FC<IProps> = ({\r\n  className = '',\r\n  closeByBtn = false,\r\n  title = '',\r\n  btns = [],\r\n  show: [ isShow, setShow ],\r\n  children,\r\n  onShowBsModal = () => {},\r\n  doCallback = () => { return 'close'; }\r\n}) => {\r\n  const [{ id }, setModal ] = useReducer(modalReducer, { id: uuidv4(), setShow });\r\n  const { onClickMask, onClickFbar } = useEvents({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback });\r\n\r\n  return !isShow ? null : (\r\n    <div className=\"modal\" id={ id } onClick={ onClickMask } data-backdrop={ closeByBtn ? 'static' : true } data-keyboard={ !closeByBtn }>\r\n      <div className=\"modal-dialog\">\r\n        <div className={ `modal-content ${ className } px-2` }>\r\n          { !title ? null : (({ text, icon = '' }: { text: string; icon?: string; }) =>\r\n            <div className=\"modal-header py-3\">\r\n              <h5 className=\"modal-title\">\r\n                { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n\r\n                <Fmsg tagName=\"strong\" id={ text } />\r\n              </h5>\r\n\r\n              <button type=\"button\" className=\"close text-white modal-btn\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          )('string' === typeof title ? { text: title } : title)}\r\n\r\n          <div className=\"modal-body py-2\">{ children }</div>\r\n\r\n          { btns.length === 0 ? null : (\r\n            <div className=\"modal-footer pt-2\">\r\n              { btns.map(({ text = '', icon = '', color = '', code }) => (\r\n                <button type=\"button\" key={ 'symbol' === typeof code ? code.description : code } onClick={\r\n                  () => onClickFbar(code)\r\n                } className={\r\n                  `modal-btn btn btn-${ color ? color : BTN.DISMISS === code ? 'secondary' : 'primary' }`\r\n                }>\r\n                  { !icon ? null : <i className={ `${icon} mr-2` } /> }\r\n                  { !text ? null : <Fmsg id={ text } /> }\r\n                </button>\r\n              )) }\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BsModal;\r\n","import React, {\r\n  FC,\r\n  Dispatch,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  SetStateAction,\r\n  useState,\r\n  useCallback\r\n} from 'react';\r\n\r\nimport { useRecord } from '../../services/store/record';\r\n\r\nimport BsModal, { BTN } from '../bs/BsModal';\r\nimport BsDropdown, { BsOption } from '../bs/BsDropdown';\r\n\r\n\r\n// TODO: Types\r\nconst SAVE_SYMBOL = Symbol('SAVE');\r\n\r\nexport type ShowModal = [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n\r\ninterface IEventInput {\r\n  group: string;\r\n  setValue: (value: string) => void;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\ninterface IToggleProps {\r\n  show: ShowModal;\r\n  className?: string;\r\n  icon?: string;\r\n}\r\n\r\ninterface IModalProps {\r\n  show: ShowModal;\r\n  group: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ group, setValue, onChange }: IEventInput) => {\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onFilterChange: useCallback(({ target: { value }}: ChangeEvent<HTMLInputElement>) => {\r\n      setValue(value);\r\n    }, [ setValue ]),\r\n\r\n    onSelectGroup: useCallback((value: any) => setValue(value as string), [ setValue ]),\r\n\r\n    onModalCallback: useCallback((btn: BTN | symbol) => {\r\n      if (SAVE_SYMBOL === btn)\r\n        onChange(group);\r\n    }, [ group, onChange ]),\r\n\r\n    doLoadGroupsOnOpen: useCallback(() => dispatch({ action: 'GROUP' }), [ dispatch ]),\r\n    \r\n    doStopSubmit: useCallback((e: FormEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      onChange(group);\r\n    }, [ group, onChange ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nexport const RecordGroupToggle: FC<IToggleProps> = ({ show, className = '', icon = 'fa fa-object-ungroup' }) => {\r\n  const onOpenGroup = useCallback(() => show[1](true), [ show ]);\r\n\r\n  return (\r\n    <button type=\"button\" className={ className } onClick={ onOpenGroup }>\r\n      <i className={ icon } />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst RecordGroup: FC<IModalProps> = ({ show, group, onChange }) => {\r\n  const [ value, setValue ] = useState(group);\r\n  const { group: groups } = useRecord();\r\n\r\n  const {\r\n    onFilterChange,\r\n    onSelectGroup,\r\n    onModalCallback,\r\n    doLoadGroupsOnOpen,\r\n    doStopSubmit\r\n  } = useEvents({ group: value, setValue, onChange });\r\n\r\n  return (\r\n    <BsModal className=\"bg-secondary\" show={ show } closeByBtn title={{\r\n      icon: 'fa fa-object-ungroup',\r\n      text: 'TITLE_SET_GROUP'\r\n    }} btns={[\r\n      { code: BTN.DISMISS, icon: 'fa fa-ban', text: 'CANCEL' },\r\n      { code: SAVE_SYMBOL, icon: 'fa fa-download', text: 'CONFIRM' }\r\n    ]} onShowBsModal={ doLoadGroupsOnOpen } doCallback={ onModalCallback }>\r\n      <form onSubmit={ doStopSubmit }>\r\n        <BsDropdown onSelect={ onSelectGroup } Toggle={\r\n          <input type=\"text\" className=\"form-control\" value={ value } onChange={ onFilterChange } />\r\n        }>\r\n          {(alloweds => alloweds.length === 0 ?\r\n            <BsOption value={ value } /> : alloweds.map($group =>\r\n              <BsOption key={ $group } value={ $group } />\r\n            )\r\n          )(groups.filter($group => $group.indexOf(value) >= 0))}\r\n        </BsDropdown>\r\n      </form>\r\n    </BsModal>\r\n  );\r\n}\r\n\r\nexport default RecordGroup;\r\n","import uuidv4 from 'uuid/v4';\r\nimport { ISource } from './type';\r\n\r\n\r\nconst STORAGE_KEY = 'CASH_MAP_KEY';\r\n\r\nconst setSources = (list: ISource[]) => {\r\n  localStorage.setItem('FIREBASE_KEY', JSON.stringify(list));\r\n\r\n  return get();\r\n};\r\n\r\n// TODO: Export Functions\r\nexport const get = (): ISource[] => {\r\n  if (!localStorage.getItem('FIREBASE_KEY')) setSources([{\r\n    uid  : getKey(),\r\n    desc : 'MY_RECORD'\r\n  }]);\r\n\r\n  return JSON.parse(localStorage.getItem('FIREBASE_KEY') || '[]');\r\n};\r\n\r\nexport const create = (source: ISource) => setSources([ ...get(), source ]);\r\n\r\nexport const update = (source: ISource) => setSources(get().map(data => data.uid === source.uid ? source : data));\r\n\r\nexport const remove = (source: ISource) => setSources(get().filter(data => data.uid !== source.uid));\r\n\r\nexport const setKey = (key: string) => {\r\n  localStorage.setItem(STORAGE_KEY, key);\r\n\r\n  return key;\r\n};\r\n\r\nexport const getKey = () => {\r\n  if (!localStorage.getItem(STORAGE_KEY))\r\n    localStorage.setItem(STORAGE_KEY, uuidv4());\r\n\r\n  return localStorage.getItem(STORAGE_KEY) || '';\r\n};\r\n","import { Reducer } from 'react';\r\nimport { get, create, update, remove, setKey } from './storage';\r\n\r\nimport { IState, IAction } from './type';\r\n\r\nexport const SourceReducer: Reducer<IState, IAction> = (state, { action, source, switchTo }) => {\r\n  const { current, list } = state;\r\n\r\n  switch (action) {\r\n    case 'LIST'   : return { current, list: get()};\r\n    case 'SWITCH' :\r\n      if (!switchTo) throw new Error(\r\n        'If you wanna switch the data source, please input the key at \"switchTo\".'\r\n      );\r\n      return { current: setKey(switchTo || '') || '', list };\r\n\r\n    default:\r\n      if (!source) throw new Error(\r\n        'If you wanna override data, the source can\\'t be empty.'\r\n      );\r\n      \r\n      switch (action) {\r\n        case 'CREATE' : return { list: create(source), current: setKey(source.uid) };\r\n        case 'UPDATE' : return { current, list: update(source) };\r\n        case 'REMOVE' : return { current, list: remove(source) };\r\n      }\r\n  }\r\n  return state;\r\n}","import React, { ReactNode, FC, createContext, useState, useReducer, useContext, useEffect } from 'react';\r\n\r\nimport { getKey, get } from './storage';\r\nimport { SourceReducer } from './reducer';\r\nimport { IAction, ISourceContext } from './type';\r\n\r\n\r\nexport const useSource = () => useContext(SourceContext);\r\nexport type IAction = IAction;\r\n\r\nconst SourceContext = createContext<ISourceContext>({\r\n  sourceKey : getKey(),\r\n  sources   : [],\r\n  dispatch  : () => {}\r\n});\r\n\r\nconst SourceStore: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [ sourceKey, setSourceKey ] = useState(getKey());\r\n  const [{ current, list }, dispatch ] = useReducer(SourceReducer, { current: getKey(), list: get()});\r\n\r\n  useEffect(() => {\r\n    if (sourceKey !== current)\r\n      setSourceKey(current);\r\n  }, [ sourceKey, current, setSourceKey ]);\r\n\r\n  return sourceKey !== current ? null : (\r\n    <SourceContext.Provider value={{ sourceKey: current, sources: list, dispatch }}>\r\n      { children }\r\n    </SourceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SourceStore;\r\n","import React, { FC, KeyboardEvent, ReactElement, useCallback } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { BsColor, getTextColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Types\r\ninterface IDropdownEventInput {\r\n  onSelect: (value: any) => void;\r\n}\r\n\r\ninterface IOptionEventInput extends IDropdownEventInput {\r\n  value: any;\r\n}\r\n\r\ninterface IOptionProps {\r\n  className?: string;\r\n  value: any;\r\n  icon?: string;\r\n  desc?: string;\r\n  disabled?: boolean;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\ninterface IDropdownProps {\r\n  Toggle: ReactElement | string;\r\n  children?: ReactElement | ReactElement[];\r\n  color?: BsColor;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useOptionEvents = ({ value, onSelect }: IOptionEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback(() => onSelect(value), [ value, onSelect ]),\r\n\r\n    onPressEnter: useCallback(({ key }: KeyboardEvent) => 'Enter' !== key ? null : onSelect(value), [ value, onSelect ])\r\n  };\r\n};\r\n\r\nconst useDropdownEvents = ({ onSelect }: IDropdownEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback((value: any) => onSelect(value), [ onSelect ])\r\n  }\r\n};\r\n\r\n// TODO: Components\r\nexport const BsOption: FC<IOptionProps> = ({\r\n  className = '',\r\n  value,\r\n  icon,\r\n  desc = value,\r\n  disabled = false,\r\n  onSelect = () => {}\r\n}) => {\r\n  const intl = useIntl();\r\n  const { onSelectOption, onPressEnter } = useOptionEvents({ value, onSelect });\r\n\r\n  return (\r\n    <button type=\"button\" disabled={ disabled } className={ `dropdown-item ${ className }` }\r\n      onClick={ onSelectOption } onKeyPress={ onPressEnter }>\r\n\r\n      { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n      { desc in intl.messages ? intl.messages[ desc ] : desc }\r\n    </button>\r\n  );\r\n};\r\n\r\nconst BsDropdown: FC<IDropdownProps> = ({ Toggle, children = [], color = 'light', onSelect = () => {}}) => {\r\n  const intl = useIntl();\r\n  const options = Array.isArray(children) ? children : [ children ];\r\n  const { onSelectOption } = useDropdownEvents({ onSelect });\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      { 'string' !== typeof Toggle ? (\r\n        <Toggle.type {...{ ...Toggle.props, className: `${ Toggle.props.className || '' } dropdown-toggle` }} data-toggle=\"dropdown\" />\r\n      ) : (\r\n        <button type=\"button\" className={ `btn btn-${ color } dropdown-toggle w-100 text-left` } data-toggle=\"dropdown\">\r\n          { Toggle in intl.messages ? intl.messages[ Toggle ] : Toggle }\r\n        </button>\r\n      )}\r\n\r\n      <div className={ `dropdown-menu w-100 bg-${ color } text-${ getTextColor(color) }` }>\r\n        { options.length === 0 ? <BsOption disabled value=\"OPTION_NOT_FOUND\" /> : options.map(opt =>\r\n          <BsOption key={ opt.key } {...{\r\n            ...opt.props,\r\n            onSelect: onSelectOption\r\n          }}  />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BsDropdown;\r\n","\r\nexport type BsColor = 'primary' | 'secondary' | 'success' | 'danger'\r\n| 'warning' | 'info' | 'light' | 'dark' | 'white';\r\n\r\nexport const getTextColor = (bgColor: BsColor): BsColor =>\r\n  [ 'warning', 'light', 'white' ].indexOf(bgColor) >= 0 ? 'dark' : 'white';\r\n","import { ReactNode } from 'react';\r\nimport { BsColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Basic Types\r\ntype Breakpoint = 'sm' | 'md' | 'lg' | 'xl';\r\n\r\ntype BsSize = '' | Breakpoint;\r\ntype BsBreakpoint = 'def' | Breakpoint;\r\ntype BsSpacing5 = 1 | 2 | 3 | 4 | 5;\r\n\r\ntype BsDisplay = 'inline' | 'inline-block' | 'inline-flex'\r\n  | 'block' | 'flex' | 'table' | 'table-row' | 'table-cell';\r\n\r\n\r\n// TODO: Configures Types\r\nenum COLUMN { WIDTH, OFFSET, ORDER }\r\n\r\ntype BsCol12 = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\ntype Width = 'auto' | BsCol12;\r\ntype Order = 'first' | 'last' | BsCol12;\r\n\r\ntype BsColors = false | { border?: BsColor; text?: BsColor; bg?: BsColor; };\r\ntype BsHidden = false | BsBreakpoint | BsBreakpoint[];\r\ntype BsBorder = boolean | { t?: true;  l?: true; b?: true;  r?: true; };\r\ntype BsRounded = boolean | { size?: 'sm' | 'lg'; type?: 'top' | 'bottom' | 'left' | 'right' | 'circle' | 'pill'; };\r\n\r\ntype BsMargin = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5 | 'auto';\r\n  b?: BsSpacing5;  r?: BsSpacing5 | 'auto';\r\n  y?: BsSpacing5;  x?: BsSpacing5 | 'auto';\r\n};\r\n\r\ntype BsPadding = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5;\r\n  b?: BsSpacing5;  r?: BsSpacing5;\r\n  y?: BsSpacing5;  x?: BsSpacing5;\r\n};\r\n\r\ninterface IBreakpoint<T> { def?: T; sm?: false | T; md?: false | T; lg?: false | T; xl?: false | T; }\r\n\r\nexport interface IRowProps extends IBsgridProps {\r\n  align?: false | 'start' | 'center' | 'end' | 'around' | 'between';\r\n  alignable?: BsSize;\r\n  gutters?: boolean;\r\n}\r\n\r\nexport interface IColProps extends IBsgridProps {\r\n  width?: Width | IBreakpoint<Width>;\r\n  offset?: false | BsCol12 | IBreakpoint<BsCol12>;\r\n  order?: false | Order | IBreakpoint<Order>;\r\n}\r\n\r\n\r\n// TODO: Generate Class Function\r\nfunction getColumnOptions<T>(options: T | false, fn: (bssize: BsSize, opts: T) => void): void {\r\n  const opts: IBreakpoint<T> = (options instanceof Object ? options : { def: options }) as IBreakpoint<T>;\r\n\r\n  Object.keys(opts).forEach((size: string) => (opts as any)[size] === false ? null : fn(\r\n    ('def' === size ? '' : size) as BsSize,\r\n    (opts as any)[size]\r\n  ));\r\n}\r\n\r\nfunction getSpacingClass(kind: 'm' | 'p', options: any): string[] {\r\n  const cls: string[] = [];\r\n\r\n  Object.keys(options).forEach((size: string) => {\r\n    const bssize = 'def' === size ? '' : size;\r\n    const value = options[size];\r\n\r\n    if (value !== false) {\r\n      if ('number' === typeof value)\r\n        cls.push(getBootstrapClass(bssize as BsSize, { start: kind, end: value }));\r\n      else Object.keys(value).forEach((on: string) => {\r\n        const $value = value[on] || '';\r\n\r\n        if ($value)\r\n          cls.push(getBootstrapClass(bssize as BsSize, { start: `${kind}${on}`, end: $value }));\r\n      });\r\n    }\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getBorderClass(options: BsBorder): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('border');\r\n    else Object.keys(options).forEach((on: string) => {\r\n      switch (on) {\r\n        case 't': cls.push('border-top'); break;\r\n        case 'b': cls.push('border-bottom'); break;\r\n        case 'l': cls.push('border-left'); break;\r\n        case 'r': cls.push('border-right'); break;\r\n      }\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getRoundedClass(options: BsRounded): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('rounded');\r\n    else Object.keys(options).forEach((prop: string) => {\r\n      const { [prop]: value } = options as any;\r\n\r\n      if (value)\r\n        cls.push(`rounded-${value}`);\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getColorClass(options: BsColors): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) Object.keys(options).forEach((target: string) => {\r\n    const { [target]: value } = options as any;\r\n\r\n    if (value)\r\n      cls.push('border' === target ? `border-${value}` : `${target}-${value}`);\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getDisplayClass(display: BsDisplay, options: BsHidden): string[] {\r\n  const cls: string[] = [`d-${display}`];\r\n\r\n  if (options !== false) {\r\n    const hiddenOn: BsBreakpoint[] = Array.isArray(options) ? options : [options];\r\n\r\n    ['def', 'sm', 'md', 'lg', 'xl'].filter((breakpoint: string) =>\r\n      hiddenOn.indexOf(breakpoint as BsBreakpoint) >= 0\r\n    ).forEach((breakpoint: string) => {\r\n      const size: BsSize = 'def' === breakpoint ? '' : (breakpoint as BsSize);\r\n\r\n      cls.splice(cls.indexOf(getBootstrapClass(size, { start: 'd', end: display })), 1);\r\n      cls.push(getBootstrapClass(size, { start: 'd', end: 'none' }));\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nexport function getBootstrapClass(\r\n  size: BsSize,\r\n  { start = '', end = '' }: { start?: string | number, end?: string | number } = {}\r\n): string {\r\n  return [start, size, end].filter((value: string | number) => !(!value)).join('-');\r\n};\r\n\r\nexport function toClassString(cls: string[]): string {\r\n  return cls.filter((value: string, i: number, arr: string[]) =>\r\n    !(!value) && arr.indexOf(value) === i\r\n  ).join(' ');\r\n}\r\n\r\nexport function getColClass({ width = 'auto', offset = false, order = false }: IColProps): string[] {\r\n  return [ width, offset, order ].reduce((cls: string[], option: any, i: number): string[] => {\r\n    switch (i) {\r\n      case COLUMN.WIDTH: getColumnOptions<Width>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'col', end: 'auto' === opts ? '' : opts }))\r\n      ); break;\r\n      case COLUMN.OFFSET: getColumnOptions<BsCol12>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'offset', end: opts }))\r\n      ); break;\r\n      case COLUMN.ORDER: getColumnOptions<Order>(option, (size, opts) =>\r\n      cls.push(getBootstrapClass(size, { start: 'order', end: opts }))\r\n    ); break;\r\n    }\r\n    return [ ...cls ];\r\n  }, []);\r\n}\r\n\r\nexport function getBsClasses(display: BsDisplay, {\r\n  className = '',\r\n  margin = false,\r\n  padding = false,\r\n  border = false,\r\n  rounded = false,\r\n  colors = false,\r\n  hidden = false\r\n}: IBsgridProps): string[] {\r\n  const isMgSpacing = Object.keys(margin).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n  const isPdSpacing = Object.keys(padding).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n\r\n  return [\r\n    className,\r\n    ...getSpacingClass('m', !isMgSpacing ? { def: margin } : margin),\r\n    ...getSpacingClass('p', !isPdSpacing ? { def: padding } : padding),\r\n    ...getBorderClass(border),\r\n    ...getRoundedClass(rounded),\r\n    ...getColorClass(colors),\r\n    ...getDisplayClass(display, hidden)\r\n  ];\r\n};\r\n\r\nexport default interface IBsgridProps {\r\n  tagName?: string;\r\n  className?: string;\r\n\r\n  margin?: BsMargin | IBreakpoint<BsMargin>;\r\n  padding?: BsPadding | IBreakpoint<BsPadding>;\r\n  border?: BsBorder;\r\n  rounded?: BsRounded;\r\n  colors?: BsColors;\r\n  hidden?: BsHidden;\r\n\r\n  children?: ReactNode;\r\n}","import { FC, createElement } from 'react';\r\n\r\nimport IBsgridProps, {\r\n  IRowProps,\r\n  IColProps,\r\n  toClassString,\r\n  getBsClasses,\r\n  getColClass,\r\n  getBootstrapClass\r\n} from './type.grid';\r\n\r\n\r\n// TODO: Components\r\nexport const BsContainer: FC<IBsgridProps> = (props: IBsgridProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([ 'container', ...getBsClasses('block', props) ])\r\n  }, children);\r\n};\r\n\r\nexport const BsRow: FC<IRowProps> = (props: IRowProps) => {\r\n  const { tagName = 'div', children, gutters = true, alignable = '', align = false } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'row',\r\n      gutters ? '' : 'no-gutters',\r\n      align === false ? '' : `justify-content-${getBootstrapClass(alignable, { end: align })}`,\r\n      ...getBsClasses('flex', props)\r\n    ])\r\n  }, children);\r\n};\r\n\r\nexport const BsCol: FC<IColProps> = (props: IColProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'col',\r\n      ...getColClass(props),\r\n      ...getBsClasses('block', props)\r\n    ])\r\n  }, children);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  className?: string;\r\n  disableOnce?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst CycleDropdown: FC<IProps> = ({ value, onChange, className = '', disableOnce = false }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { disableOnce ? null : (\r\n        <option value=\"once\">{ intl.messages.CYCLE_ONCE }</option>\r\n      )}\r\n      <option value=\"day\">{ intl.messages.CYCLE_DAY }</option>\r\n      <option value=\"month\">{ intl.messages.CYCLE_MONTH }</option>\r\n      <option value=\"year\">{ intl.messages.CYCLE_YEAR }</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default CycleDropdown;","import React, { FC, ReactNode } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  children?: ReactNode;\r\n  className?: string;\r\n  disableDeposit?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst TypeDropdown: FC<IProps> = ({\r\n  className = '',\r\n  disableDeposit = false,\r\n  children,\r\n  value,\r\n  onChange\r\n}) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { children }\r\n      <option value=\"income\">{ intl.messages.INCOME }</option>\r\n      <option value=\"expenses\">{ intl.messages.EXPENSES }</option>\r\n\r\n      { disableDeposit ? null : (\r\n        <option value=\"deposit\">{ intl.messages.DEPOSIT }</option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default TypeDropdown;\r\n","module.exports = __webpack_public_path__ + \"static/media/404.bd332713.svg\";","module.exports = __webpack_public_path__ + \"static/media/cash-logo.cb5cc733.svg\";","var map = {\n\t\"./en.json\": [\n\t\t80,\n\t\t2\n\t],\n\t\"./zh.json\": [\n\t\t81,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 62;\nmodule.exports = webpackAsyncContext;","import React, {\r\n  FC,\r\n  Reducer,\r\n  Dispatch,\r\n  ReactNode,\r\n  createContext,\r\n  useState,\r\n  useReducer,\r\n  useMemo,\r\n  useContext\r\n} from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\nexport enum LANG { DEFAULT, EN, ZH }\r\n\r\ninterface IMessages { [message: string]: string; }\r\n\r\ninterface IMsgOptions { locale: string; messages: IMessages; }\r\n\r\ninterface IImportJSON { default: IMessages; }\r\n\r\ninterface IContext { locale: string; setLang: Dispatch<LANG> }\r\n\r\n\r\n// TODO: Variables & Reducer\r\nconst defintl = import('../assets/i18n/en.json').then(({ default: messages }: IImportJSON): IMsgOptions => ({\r\n  locale: 'en',\r\n  messages\r\n}));\r\n\r\nconst useI18n = () => useContext(Context);\r\n\r\nconst reducer: Reducer<Promise<IMsgOptions>, LANG> = (state, action: LANG) => {\r\n  switch (action) {\r\n    case LANG.EN: return defintl.then(res => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'en');\r\n\r\n      return res;\r\n    });\r\n    case LANG.ZH: return import('../assets/i18n/zh.json').then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'zh');\r\n\r\n      return { locale: 'zh', messages };\r\n    });\r\n    default: return ((locale: string) => {\r\n      locale = locale.substring(0, locale.indexOf('-') > 0 ? locale.indexOf('-') : undefined);\r\n\r\n      return import(`../assets/i18n/${locale}.json`).then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n        localStorage.setItem('CASH_MAP_LANG', locale);\r\n\r\n        return { locale, messages };\r\n      }).catch(() => defintl);\r\n    })(localStorage.getItem('CASH_MAP_LANG') || navigator.language.toLowerCase());\r\n  }\r\n};\r\n\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ locale: 'en', setLang: () => {} });\r\n\r\nconst I18n: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [{ locale, messages }, setMessages ] = useState<IMsgOptions>({ locale: 'en', messages: {} });\r\n  const [ promise, setLang ] = useReducer(reducer, defintl);\r\n  const hasMessages = Object.keys(messages).length > 0;\r\n\r\n  promise.then(msg => JSON.stringify(msg) === JSON.stringify(messages) ? null : setMessages(msg));\r\n\r\n  useMemo(() => hasMessages ? null : setLang(LANG.DEFAULT), [ hasMessages ]);\r\n\r\n  return !hasMessages ? null : (\r\n    <IntlProvider {...{ locale, messages }}>\r\n      <Context.Provider value={{ locale, setLang }}>\r\n        { children }\r\n      </Context.Provider>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport {\r\n  useI18n\r\n}\r\n","import React, { FC, useState, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { Cycle, ISummary } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../bs/BsGrid';\r\nimport { BsInlineGroup } from '../bs/BsForm';\r\n\r\nimport CycleDropdown from '../editor/CycleDropdown';\r\n\r\n\r\n// TODO: Component\r\nconst SumDashboard: FC<{\r\n  summary: ISummary;\r\n  cycle: Cycle;\r\n  onCycleChange: (value: Cycle) => void\r\n}> = ({ summary, cycle, onCycleChange }) => {\r\n  const intl = useIntl();\r\n  const labelWidth = 'zh' === intl.locale ? 60 : 110;\r\n  const [ expanded, setExpanded ] = useState<boolean>(false);\r\n  const doCollapse = useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]);\r\n\r\n  return (\r\n    <fieldset className={ `summary-dashboard shadow ${ expanded ? 'sd-expand' : 'sd-collapse' }` }>\r\n      <legend>\r\n        <button type=\"button\" className=\"btn btn-link\" onClick={ doCollapse }>\r\n          <i className={ `mr-2 fa fa-${ expanded ? 'minus' : 'plus' }-square-o` } />\r\n          { intl.messages.SUMMARY } ({ intl.messages[ `CYCLE_${ cycle.toUpperCase() }` ] })\r\n        </button>\r\n      </legend>\r\n\r\n      { !expanded ? (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow className=\"text-right\">\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"APPLICABLE\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n            </BsCol>\r\n\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"DEPOSIT\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      ) : (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow>\r\n            <BsCol className=\"form-group\" width={{ sm: 6 }}>\r\n              <Fmsg tagName=\"label\" id=\"VIEW_CYCLE\" />\r\n\r\n              <CycleDropdown value={ cycle } disableOnce onChange={\r\n                value => onCycleChange(value as 'day' | 'month' | 'year')\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow>\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.INCOME } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.income).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.EXPENSES } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.expenses).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.DEPOSIT } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.APPLICABLE } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      )}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default SumDashboard;\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { BTN, useMessage } from '../../services/message';\r\nimport { IRecordData, useRecord } from '../../services/store/record';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  record: IRecordData;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ record }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onSlide: useCallback((turnon: boolean) => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    }), [ record, dispatch ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'UPDATE',\r\n        params: { ...record, group: value || '' },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, isLoading, record ]),\r\n\r\n    doRemove: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_REMOVE_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'REMOVE',\r\n          params: record,\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, record ])\r\n  };\r\n}\r\n\r\n// TODO: Components\r\nconst AmountSlidebar: FC<{ record: IRecordData; }> = ({ record }) => {\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const { onSlide, doUpdateGroup, doRemove } = useEvents({ record });\r\n\r\n  return (\r\n    <div className=\"form-group amount-slidebar\">\r\n      <RecordGroup show={ showGroup } group={ record.group || '' } onChange={ doUpdateGroup } />\r\n\r\n      <div className=\"media\">\r\n        <div className=\"btn-group-vertical\">\r\n          <Link className=\"mr-3 btn btn-link text-info\" to={ `/update/${ record.uid }` }>\r\n            <i className=\"fa fa-pencil-square-o\" />\r\n          </Link>\r\n\r\n          <RecordGroupToggle show={ showGroup } className=\"btn btn-link text-warning\" />\r\n        </div>\r\n        \r\n        <span className=\"media-body py-2\">\r\n          <h4>{ record.desc }</h4>\r\n          $ { Numeral(record.amount).format('0,0') } / { intl.messages[`CYCLE_${ (record.cycle || '').toUpperCase() }`] }\r\n        </span>\r\n\r\n        <button type=\"button\" className=\"btn btn-link text-white mt-2\" onClick={ doRemove }>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n\r\n      <input type=\"range\" className={ `custom-range ${ record.type  }` } min=\"0\" max=\"1\"\r\n        value={ 'actual' === record.status ? 1 : 0 } onChange={({ target: { value }}) => onSlide(value === '1')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountSlidebar;\r\n","import React, { FC, useState, useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { useMessage } from '../../services/message';\r\nimport { useRecord, IRecordData, ISummary, getSummary } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../bs/BsGrid';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\nimport AmountSlidebar from './AmountSlidebar';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  list: IRecordData[];\r\n  expanded: [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n}\r\n\r\ninterface IGroupProps {\r\n  cycle: 'day' | 'month' | 'year';\r\n  groupName?: string;\r\n  list: IRecordData[];\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ list, expanded: [ expanded, setExpanded ] }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    doCollapse: useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]),\r\n\r\n    doSlideAll: useCallback((turnon: boolean) => list.forEach(record => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    })), [ list, dispatch ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => {\r\n        let count = 0;\r\n\r\n        list.forEach(record => dispatch({\r\n          action: 'UPDATE',\r\n          params: { ...record, group: value },\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => {\r\n              count++;\r\n\r\n              if (count === list.length) Message({\r\n                type: 'INFO',\r\n                content: 'MSG_SAVE_SUCCESS'\r\n              });\r\n            }\r\n          })\r\n        }));\r\n      }\r\n    }), [ Message, Loading, isLoading, dispatch, list ])\r\n  };\r\n};\r\n\r\n// TODO: Component\r\nconst GroupCollapse: FC<IGroupProps> = ({ cycle, groupName = 'UNGROUP', list }) => {\r\n  const actualCount = list.filter(({ status }) => 'actual' === status).length;\r\n  const status = actualCount === list.length ? 1 : actualCount === 0 ? 0 : .5;\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const expanded = useState<boolean>(true);\r\n  const sum = getSummary({ cycle, list, ignore: true }) as ISummary;\r\n  const { doCollapse, doSlideAll, doUpdateGroup } = useEvents({ list, expanded });\r\n\r\n  return (\r\n    <BsContainer margin={{ y: 3 }}>\r\n      <RecordGroup show={ showGroup } group={ 'UNGROUP' === groupName ? '' : groupName } onChange={ doUpdateGroup } />\r\n\r\n      <BsRow>\r\n        <BsCol tagName=\"fieldset\" className=\"group-title\" width={{ sm: 8, md: 6 }}\r\n          border={{ t: true }} colors={{ border: 'warning' }}>\r\n\r\n          <legend>\r\n            { 'UNGROUP' === groupName ? <span className=\"p-2 text-warning\">{ intl.messages.UNGROUP }</span> :\r\n              <button type=\"button\" className=\"btn btn-link text-warning\" onClick={ doCollapse }>\r\n                <i className={ `mr-2 fa fa-${ expanded[0] ? 'minus' : 'plus' }-square-o` } />\r\n                { groupName }\r\n              </button>\r\n            }\r\n\r\n            { 'UNGROUP' === groupName ? null : (\r\n              <RecordGroupToggle show={ showGroup } icon=\"fa fa-pencil-square\" className=\"btn btn-link text-info\" />\r\n            )}\r\n          </legend>\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      { !expanded[0] ?\r\n        (<BsRow align=\"center\">\r\n          <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }}>\r\n            <table className=\"table table-dark table-striped table-hover text-right\">\r\n              <thead>\r\n                <tr>\r\n                  <Fmsg tagName=\"th\" id=\"INCOME\" />\r\n                  <Fmsg tagName=\"th\" id=\"EXPENSES\" />\r\n                  <Fmsg tagName=\"th\" id=\"DEPOSIT\" />\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr>\r\n                  <td>{ Numeral(sum.income).format('0,0') }</td>\r\n                  <td>{ Numeral(sum.expenses).format('0,0') }</td>\r\n                  <td>{ Numeral(sum.deposit).format('0,0') }</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <input type=\"range\" className=\"custom-range group\" min=\"0\" max=\"1\"\r\n              step={ actualCount > 0 && actualCount < list.length ? .5 : 1 }\r\n              value={ status } onChange={({ target: { value }}) => doSlideAll(value === '1')} />\r\n          </BsCol>\r\n        </BsRow>) :\r\n        \r\n        list.map((record, i) => <BsRow key={`record-${ record.uid }`} align=\"center\">\r\n          <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }} border={\r\n            i === (list.length - 1) ? false : { b: true }\r\n          }>\r\n            <AmountSlidebar record={ record } />\r\n          </BsCol>\r\n        </BsRow>\r\n      )}\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\nexport default GroupCollapse;\r\n","import React, { Dispatch, SetStateAction, FC, useState, useCallback, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\n\r\nimport { useLoading } from '../services/loading';\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { useRecord } from '../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from './bs/BsGrid';\r\nimport { BsInlineGroup } from './bs/BsForm';\r\n\r\nimport SumDashboard from './toolbar/SumDashboard';\r\nimport GroupCollapse from './toolbar/GroupCollapse';\r\n\r\nimport TypeDropdown from './editor/TypeDropdown';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  summaryCycle: 'day' | 'month' | 'year';\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ summaryCycle, setFilter }: IEventInput) => {\r\n  const [ loaded, setLoaded ] = useState<boolean>(false);\r\n  const { Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  useEffect(() => {\r\n    if (!loaded) Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'SUMMARY',\r\n        params: { cycle: summaryCycle },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => dispatch({\r\n          action: 'LIST',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => setLoaded(true)\r\n          })\r\n        })\r\n      })\r\n    });\r\n  }, [ Loading, Message, summaryCycle, loaded, setLoaded, dispatch ]);\r\n\r\n  return {\r\n    onCycleChange: useCallback((value: 'day' | 'month' | 'year') => dispatch({\r\n      action: 'SUMMARY',\r\n      params: { cycle: value }\r\n    }), [ dispatch ]),\r\n    \r\n    onFilterChange: useCallback((value: string) => {\r\n      setFilter(value);\r\n      dispatch({ action: 'LIST', params: { type: 'all' === value ? '' : value }})\r\n    }, [ dispatch, setFilter ]),\r\n\r\n    doClear: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_CLEAR_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'CLEAR',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch ])\r\n  }\r\n};\r\n\r\n// TODO: Component - APP\r\nconst App: FC = () => {\r\n  const intl = useIntl();\r\n  const [ filter, setFilter ] = useState('all');\r\n  const { summary, list } = useRecord();\r\n  const { onCycleChange, onFilterChange, doClear } = useEvents({ summaryCycle: summary.cycle, setFilter });\r\n\r\n  return (\r\n    <div>\r\n      <SumDashboard summary={ summary } cycle={ summary.cycle } onCycleChange={ onCycleChange } />\r\n\r\n      { Object.keys(list).map(group =>\r\n        <GroupCollapse key={ group } cycle={ summary.cycle } groupName={ group } list={ list[group] } />\r\n      )}\r\n\r\n      <BsContainer className=\"list-fbar\">\r\n        <BsRow padding={{ t: 3 }}>\r\n          <BsCol className=\"form-group\">\r\n            <Fmsg tagName=\"label\" id=\"FILTER_MAINTAIN\" />\r\n\r\n            <BsInlineGroup>\r\n              <Link className=\"btn btn-primary\" to=\"/append\">\r\n                <i className=\"fa fa-plus mr-2\" /> { intl.messages.APPEND_RECORD }\r\n              </Link>\r\n\r\n              <TypeDropdown className=\"rounded mx-2\" value={ filter } onChange={ onFilterChange }>\r\n                <option value=\"all\">{ intl.messages.ALL_OPTION }</option>\r\n              </TypeDropdown>\r\n\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={ doClear }>\r\n                <i className=\"fa fa-remove mr-2\" /> { intl.messages.CLEAR }\r\n              </button>\r\n            </BsInlineGroup>\r\n          </BsCol>\r\n        </BsRow>\r\n      </BsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component, FC, useEffect, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport { RouteProps, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useLoading } from './loading';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../components/bs/BsGrid';\r\nimport App from '../components/App';\r\n\r\nimport error404 from '../assets/imgs/404.svg';\r\n\r\n\r\n// TODO: Types\r\ninterface ILoadable {\r\n  loading?: FC;\r\n  loader: () => Promise<{\r\n    default: FC<RouteComponentProps<any>>;\r\n  }>;\r\n}\r\n\r\ninterface IRouter extends RouteProps {\r\n  text?: string;\r\n  icon?: string;\r\n}\r\n\r\n// TODO: 404 Page Not Found\r\nconst PageNotFound: FC = () => {\r\n  const goBack = useCallback(() => window.history.back(), []);\r\n\r\n  return (\r\n    <BsContainer className=\"not-found-404\">\r\n      <BsRow align=\"center\">\r\n        <BsCol width={{ def: 12, sm: 6, md: 4 }}>\r\n          <img className=\"img-fluid\" src={error404} alt=\"404\" />\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      <BsRow align=\"center\">\r\n        <BsCol className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-lg btn-link\" onClick={goBack}>\r\n            <Fmsg id=\"BACK_TO_PREV_PAGE\" />\r\n          </button>\r\n        </BsCol>\r\n      </BsRow>\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\n// TODO: Loading Mask\r\nconst LoadingMask: FC = () => {\r\n  const { Loading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    Loading({ show: true });\r\n\r\n    return () => Loading({ show: false })\r\n  }, [ Loading ]);\r\n  return null;\r\n};\r\n\r\n// TODO: Loadable\r\nconst Loadable = ({ loader, loading = LoadingMask }: ILoadable) => class LoadableComponent extends Component<\r\n  RouteComponentProps<any>,\r\n  { Route: FC<RouteComponentProps<any>>; }\r\n> {\r\n  state = { Route: loading };\r\n\r\n  constructor(props: RouteComponentProps<any>) {\r\n    super(props);\r\n    loader().then(({ default: component }) => this.setState({ Route: component }));\r\n  }\r\n\r\n  render() {\r\n    const { Route } = this.state;\r\n\r\n    return (\r\n      <Route { ...this.props } />\r\n    );\r\n  }\r\n};\r\n  \r\n\r\n// TODO: Router Options\r\nconst router: IRouter[] = [{\r\n  path: '/',\r\n  exact: true,\r\n  component: App\r\n}, {\r\n  path: '/append',\r\n  text: 'APPEND_RECORD',\r\n  icon: 'fa fa-plus',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/update/:uid',\r\n  text: 'UPDATE_RECORD',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/cloud/:syncKey',\r\n  text: 'CLOUD_PROCESS',\r\n  component: Loadable({\r\n    loader: () => import('../components/CloudProcess'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/cloud',\r\n  text: 'CLOUD_PROCESS',\r\n  component: Loadable({\r\n    loader: () => import('../components/CloudProcess'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  component: PageNotFound\r\n}];\r\n\r\nexport default router;\r\n","import React, { FC, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useI18n, LANG } from '../../services/i18n';\r\n\r\nimport Logo from '../../assets/imgs/cash-logo.svg';\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = () => {\r\n  const { setLang } = useI18n();\r\n\r\n  return {\r\n    asEnglish: useCallback(() => setLang(LANG.EN), [ setLang ]),\r\n    asChinese: useCallback(() => setLang(LANG.ZH), [ setLang ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst MainHeader: FC = () => {\r\n  const dropdown = useRef(null);\r\n  const { asEnglish, asChinese } = useEvents();\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-dark bg-dark text-secondary border-bottom border-white\">\r\n      <Link className=\"navbar-brand text-white\" to=\"/\">\r\n        <img className=\"rounded-circle\" src={ Logo } alt=\"Logo\" />\r\n      </Link>\r\n      \r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"btn btn-link nav-link\" to=\"/cloud\">\r\n              <i className=\"fa fa-cloud\" />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"lang-dropdown navbar-nav\">\r\n          <li ref={ dropdown } className=\"nav-item dropdown\">\r\n            <button type=\"button\" className=\"btn btn-link nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n              <i className=\"fa fa-language mr-2\" />\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asEnglish }>English</button>\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asChinese }>繁體中文</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuidv4 from 'uuid/v4';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport $ from 'jquery';\nimport 'hammerjs';\nimport 'popper.js';\n\nimport I18n from './services/i18n';\nimport LoadingMask from './services/loading';\nimport MessageBox from './services/message';\nimport SourceStore from './services/store/source';\nimport RecordStore from './services/store/record';\nimport routers from './services/router';\n\nimport MainHeader from './components/toolbar/MainHeader';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/main.scss';\n\n\n(window as any).$ = $;\n\nimport('bootstrap').then(() => {\n  ReactDOM.render((\n    <I18n>\n      <LoadingMask>\n        <MessageBox>\n          <HashRouter>\n            <MainHeader />\n\n            <div className=\"cash-map-app\">\n              <SourceStore>\n                <RecordStore>\n                  <Switch>\n                    { routers.map(options => <Route key={uuidv4()} {...options} />) }\n                  </Switch>\n                </RecordStore>\n              </SourceStore>\n            </div>\n          </HashRouter>\n        </MessageBox>\n      </LoadingMask>\n    </I18n>\n  ), document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n","import * as Firebase from 'firebase';\r\nimport Moment from 'moment';\r\n\r\nimport { Cycle, ISummary, IRecordData, IResponse, ISummaryParams } from './type';\r\nimport { FIREBASE_OPTIONS } from '../../../assets/config/api-key.json';\r\n\r\n// TODO: Basic\r\nconst Database = Firebase.initializeApp(FIREBASE_OPTIONS).database();\r\n\r\nconst getRef = (key: string) => Database.ref(key);\r\n\r\nconst getAvgAmount = (sumcycle: Cycle, { cycle = 'month', amount = 0 }: IRecordData): number => {\r\n  const daysInMonth = Moment(new Date()).daysInMonth();\r\n  const daysInYear  = Moment(`${ new Date().getFullYear() }/12/31`, 'YYYY/MM/DD').dayOfYear();\r\n\r\n  switch (sumcycle) {\r\n    case 'day': switch (cycle) {\r\n      case 'month' : return Math.floor(amount / daysInMonth);\r\n      case 'year'  : return Math.floor(amount / daysInYear);\r\n    }\r\n    break;\r\n    case 'month': switch (cycle) {\r\n      case 'day'  : return amount * daysInMonth;\r\n      case 'year' : return Math.floor(amount / 12);\r\n    }\r\n    break;\r\n    case 'year': switch (cycle) {\r\n      case 'day'   : return amount * daysInYear;\r\n      case 'month' : return amount * 12;\r\n    }\r\n    break;\r\n  }\r\n  return amount;\r\n};\r\n\r\nconst getSpecificSum = ({ cycle, ignore = false, list = []}: ISummaryParams) =>\r\n  list.filter(record => ignore || 'actual' === record.status).reduce((summary: ISummary, record) => {\r\n    const amount = getAvgAmount(summary.cycle, record);\r\n\r\n    if ('once' === record.cycle)\r\n      summary.deposit += amount * ('expenses' === record.type ? -1 : 1);\r\n    else switch (record.type) {\r\n      case 'income'   : summary.income   += amount; break;\r\n      case 'expenses' : summary.expenses += amount; break;\r\n      case 'deposit'  :\r\n        summary.deposit += amount;\r\n        summary.income  -= amount;\r\n        break;\r\n    }\r\n    return { ...summary, applicable: summary.income - summary.expenses };\r\n  }, { cycle, income: 0, expenses: 0, deposit: 0, applicable: 0 });\r\n\r\n\r\n// TODO: Export Methods\r\nconst isValid = (key: string): Promise<IResponse<boolean>> => new Promise(resolve =>\r\n  getRef(key).on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : snapshot.exists()\r\n  }))\r\n);\r\n\r\nconst findByUID = (key: string, uid: string): Promise<IResponse<IRecordData>> => new Promise((resolve, reject) =>\r\n  getRef(key).child(uid).on('value', snapshot => snapshot.val() === null ? reject(\r\n    'DATA_NOT_FOUND'\r\n  ) : resolve({\r\n    status  : 200,\r\n    content : { ...snapshot.val(), uid }\r\n  })));\r\n\r\nconst getList = (key: string, params: any = {}): Promise<IResponse<IRecordData[]>> => new Promise(resolve => \r\n  getRef(key).on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : Object.keys(snapshot.val() || {}).map(uid => ({ ...snapshot.val()[uid], uid })).filter(record =>\r\n      Object.keys(params).length === Object.keys(params).filter(param =>\r\n        !params[param] || record[param] === params[param]  \r\n      ).length\r\n    )\r\n  }))\r\n);\r\n\r\nconst getGroups = (key: string): Promise<IResponse<string[]>> => new Promise(resolve =>\r\n  getRef(key).on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : Object.keys(snapshot.val() || {})\r\n      .map(uid => snapshot.val()[uid])\r\n      .filter(({ group }) => !!group)\r\n      .map(({ group }) => group)\r\n  }))\r\n);\r\n\r\nconst getSummary = (key: string, { cycle, ignore }: ISummaryParams): Promise<IResponse<ISummary>> => new Promise(resolve =>\r\n  getRef(key).on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : getSpecificSum({\r\n      cycle,\r\n      ignore,\r\n      list: Object.keys(snapshot.val() || {}).map(uid => snapshot.val()[uid])\r\n    })\r\n  }))\r\n);\r\n\r\nconst doAdd = (key: string, record: IRecordData): Promise<IResponse<boolean>> => {\r\n  delete record.uid;\r\n\r\n  return getRef(key).push(record).then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n};\r\n\r\nconst doUpdate = (key: string, record: IRecordData): Promise<IResponse<boolean>> => {\r\n  const uid = record.uid || '';\r\n\r\n  delete record.uid;\r\n\r\n  return getRef(key).child(uid).update(record).then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n};\r\n\r\nconst doRemove = (key: string, record: IRecordData): Promise<IResponse<boolean>> =>\r\n  getRef(key).child(record.uid || '').remove().then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n\r\nconst doClear = (key: string): Promise<IResponse<boolean>> =>\r\n  getRef(key).remove().then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n\r\nexport default {\r\n  getSpecificSum,\r\n\r\n  isValid,\r\n  findByUID,\r\n  getList,\r\n  getGroups,\r\n  getSummary,\r\n\r\n  doAdd,\r\n  doUpdate,\r\n  doRemove,\r\n  doClear\r\n};\r\n","import { Reducer } from 'react';\r\nimport FirebaseRecord from './firebase';\r\n\r\nimport {\r\n  ISummary,\r\n  IStoreState,\r\n  IStoreAction,\r\n  IDispatchState,\r\n  IDispatchAction,\r\n  IRecordData,\r\n  IResponse,\r\n  Cycle\r\n} from './type';\r\n\r\n\r\n// TODO: Functions\r\nconst emptyFn = () => {};\r\n\r\nconst toList = (list: {[ groupName: string ]: IRecordData[]; }): IRecordData[] =>\r\n  Object.keys(list).reduce(($list: IRecordData[], groupName: string) => [\r\n    ...$list,\r\n    ...list[ groupName ]\r\n  ], []);\r\n\r\nconst toGroup = (list: IRecordData[]): {[ groupName: string ]: IRecordData[]; } =>\r\n  list.sort(({ group: g1 = '' }, { group: g2 = '' }) =>\r\n    !g1 ? 1 : !g2 ? -1 : g1 > g2 ? 1 : g1 < g2 ? -1 : 0\r\n  ).reduce((map: {[ groupName: string ]: IRecordData[]; }, record) => ({\r\n    ...map,\r\n    [ record.group || 'UNGROUP' ]: [ ...map[ record.group || 'UNGROUP' ] || [], record ]\r\n  }), {});\r\n\r\nconst doReload = (sourceKey: string, cycle: Cycle, params: IRecordData, { status, content }: IResponse<boolean>) => new Promise<{\r\n  list    : IRecordData[];\r\n  group   : string[];\r\n  summary : ISummary;\r\n}>((resolve, reject) => {\r\n  if (status !== 200 || !content) reject(\r\n    'Error Request.'\r\n  );\r\n\r\n  FirebaseRecord.getList(sourceKey, params)\r\n    .then(({ content: list }) => FirebaseRecord.getGroups(sourceKey)\r\n      .then(({ content: group }) => (FirebaseRecord.getSummary(sourceKey, { cycle }) as Promise<IResponse<ISummary>>)\r\n        .then(({ content: summary }) => resolve({ list, group, summary }))\r\n      )\r\n    );\r\n});\r\n\r\n\r\n// TODO: Reducers\r\nexport const StateStore: Reducer<IStoreState, IStoreAction> = (state, {\r\n  data,\r\n  group   = state.group,\r\n  summary = state.summary,\r\n  list    = toList(state.list)\r\n}) => ({\r\n  group,\r\n  summary,\r\n  data : data === true ? state.data : data,\r\n  list : toGroup(list)\r\n});\r\n\r\nexport const DispatchStore: Reducer<IDispatchState, IDispatchAction> = (state, {\r\n  action,\r\n  params  : $params = {},\r\n  success = emptyFn,\r\n  fail    = emptyFn\r\n}) => {\r\n  const { dispatch, sourceKey, params, cycle } = state;\r\n\r\n  switch (action) {\r\n    case 'SUMMARY':\r\n      (FirebaseRecord.getSummary(sourceKey, { cycle: ($params.cycle || cycle) as Cycle }) as Promise<IResponse<ISummary>>)\r\n        .then(({ content }) => dispatch({ summary: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      return { dispatch, sourceKey, params, cycle: ($params.cycle || cycle) as Cycle };\r\n\r\n    case 'LIST':\r\n      FirebaseRecord.getList(sourceKey, $params)\r\n        .then(({ content }) => dispatch({ list: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      return { dispatch, sourceKey, cycle, params: $params };\r\n\r\n    case 'FIND':\r\n      FirebaseRecord.findByUID(sourceKey, $params.uid || '')\r\n        .then(({ content }) => dispatch({ data: !content ? true : content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'GROUP':\r\n      FirebaseRecord.getGroups(sourceKey)\r\n        .then(({ content }) => dispatch({ group: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'CREATE':\r\n      FirebaseRecord.doAdd(sourceKey, $params)\r\n        .then(res => doReload(sourceKey, cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'UPDATE':\r\n      FirebaseRecord.doUpdate(sourceKey, $params)\r\n        .then(res => doReload(sourceKey, cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n    break;\r\n\r\n    case 'REMOVE':\r\n      FirebaseRecord.doRemove(sourceKey, $params)\r\n        .then(res => doReload(sourceKey, cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'CLEAR':\r\n      FirebaseRecord.doClear(sourceKey)\r\n        .then(() => dispatch({\r\n          list    : [],\r\n          group   : [],\r\n          summary : { cycle, income: 0, expenses: 0, deposit: 0, applicable: 0 }\r\n        }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\nimport Moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\nconst DATE_FROMAT: string = 'YYYY/MM';\r\n\r\n// TODO: Basic Types\r\nexport type Cycle = 'day' | 'month' | 'year';\r\n\r\nexport interface ISummary { cycle: Cycle; income: number; expenses: number; deposit: number; applicable: number; }\r\n\r\nexport interface IRecordData {\r\n  uid    ?: string;    desc    ?: string;\r\n  type   ?: string;    status  ?: string;\r\n  cycle  ?: string;    validFm ?: string;\r\n  amount ?: number;    validTo ?: string;\r\n  group  ?: string;\r\n}\r\n\r\nexport interface IResponse<T> { status: number; content: T; message?: string; }\r\n\r\nexport interface ISummaryParams { cycle: Cycle; ignore?: boolean; list?: IRecordData[]; }\r\n\r\nexport class RecordModel {\r\n  private $uid     !: string;\r\n  private $desc    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $type    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $status  !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $cycle   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $group   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validFm !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validTo !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $amount  !: [ number, Dispatch<SetStateAction<number>> ];\r\n\r\n  constructor({\r\n    uid     = uuidv4() , desc    = '' , \r\n    type    = 'income' , status  = 'expected',\r\n    cycle   = 'month'  , validFm = Moment(new Date()).format(DATE_FROMAT),\r\n    validTo = ''       , group   = '',\r\n    amount  = 0\r\n  }: IRecordData = {}) {\r\n    this.$uid     = uid;                  this.$desc    = useState(desc);\r\n    this.$type    = useState(type);       this.$status  = useState(status);\r\n    this.$cycle   = useState(cycle);      this.$validFm = useState(validFm);\r\n    this.$validTo = useState(validTo);    this.$amount  = useState(amount);\r\n    this.$group   = useState(group);\r\n  }\r\n\r\n  get uid(): string { return this.$uid; }\r\n  \r\n  get desc(): string { return this.$desc[0]; }\r\n  set desc(value: string) { this.$desc[1](value); }\r\n\r\n  get type(): string { return this.$type[0]; }               get status(): string { return this.$status[0]; }\r\n  set type(value: string) { this.$type[1](value); }          set status(value: string) { this.$status[1](value); }\r\n\r\n  get cycle(): string { return this.$cycle[0]; }             get validFm(): string { return this.$validFm[0]; }\r\n  set cycle(value: string) { this.$cycle[1](value); }        set validFm(value: string) { this.$validFm[1](value); }\r\n\r\n  get validTo(): string { return this.$validTo[0]; }         get amount(): number { return this.$amount[0]; }\r\n  set validTo(value: string) { this.$validTo[1](value); }    set amount(value: number) { this.$amount[1](value); }\r\n\r\n  get group(): string { return this.$group[0]; }\r\n  set group(value: string) { this.$group[1](value); }\r\n\r\n  get vdateFm(): Date | null { return this.validFm ? Moment(this.validFm + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateFm(value: Date | null) { this.validFm = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get vdateTo(): Date | null { return this.validTo ? Moment(this.validTo + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateTo(value: Date | null) { this.validTo = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get amountStr(): string { return this.amount ? this.amount.toString() : ''; }\r\n  set amountStr(value: string) {\r\n    const amt = parseFloat(value);\r\n\r\n    this.amount = !isNaN(amt) ? amt : 0;\r\n  }\r\n\r\n  getJSON(showID: boolean = true): IRecordData {\r\n    return {\r\n      desc   : this.desc   , status  : this.status  ,\r\n      type   : this.type   , validFm : this.validFm ,\r\n      cycle  : this.cycle  , validTo : this.validTo ,\r\n      group  : this.group  ,\r\n      amount : this.amount , ...( showID ? { uid: this.uid } : {})\r\n    };\r\n  }\r\n\r\n  reset(): void {\r\n    this.$uid   = uuidv4();    this.desc    = '';\r\n    this.type   = 'income';    this.status  = 'actual';\r\n    this.cycle  = 'month';     this.validFm = Moment(new Date()).format(DATE_FROMAT);\r\n    this.amount = 0;           this.validTo = '';\r\n    this.group  = '';\r\n  }\r\n}\r\n\r\n\r\n// TODO: Reducer Types\r\nexport interface IDispatchState {\r\n  params    : IRecordData;\r\n  sourceKey : string;\r\n  cycle     : 'day' | 'month' | 'year';\r\n  dispatch  : Dispatch<IStoreAction>;\r\n}\r\n\r\nexport interface IDispatchAction {\r\n  action   : 'SWITCH' | 'LIST' | 'FIND' | 'GROUP' | 'CREATE' | 'UPDATE' | 'REMOVE' | 'CLEAR' | 'SUMMARY';\r\n  params  ?: IRecordData;\r\n  success ?: (params: IRecordData) => void;\r\n  fail    ?: (e: Error, params?: IRecordData) => void;\r\n}\r\n\r\nexport interface IStoreAction {\r\n  data    ?: IRecordData | true;\r\n  summary ?: ISummary;\r\n  group   ?: string[];\r\n  list    ?: IRecordData[];\r\n}\r\n\r\nexport interface IStoreState {\r\n  data    ?: IRecordData;\r\n  summary  : ISummary;\r\n  group    : string[];\r\n  list     : {[ groupName: string ]: IRecordData[]; };\r\n}\r\n","import React, { FC, ReactNode, Dispatch, createContext, useReducer, useContext } from 'react';\r\nimport { useSource } from '../source';\r\n\r\nimport { StateStore, DispatchStore } from './reducer';\r\nimport FirebaseRecord from './firebase';\r\n\r\nimport {\r\n  Cycle,\r\n  ISummary,\r\n  IDispatchAction,\r\n  IStoreState,\r\n  IStoreAction,\r\n  IRecordData,\r\n  RecordModel\r\n} from './type';\r\n\r\n\r\n// TODO: Variables\r\nconst STORE_DISPATCH = Symbol('STORE_DISPATCH');\r\nconst DEFAULT_STATE: IStoreState = {\r\n  list    : {},\r\n  group   : [],\r\n  summary : {\r\n    cycle      : 'month',\r\n    income     : 0,\r\n    expenses   : 0,\r\n    deposit    : 0,\r\n    applicable : 0\r\n  }\r\n};\r\n\r\n// TODO: Export Basic\r\nexport type Cycle = Cycle;\r\nexport type ISummary = ISummary;\r\nexport type IRecordData = IRecordData;\r\nexport { RecordModel };\r\n\r\ninterface IRecordContext extends IStoreState {\r\n  dispatch           : Dispatch<IDispatchAction>;\r\n  [ STORE_DISPATCH ] : Dispatch<IStoreAction>;\r\n}\r\n\r\n\r\n// TODO: Context Components\r\nexport const isKeyValid = FirebaseRecord.isValid;\r\nexport const getSummary = FirebaseRecord.getSpecificSum;\r\nexport const useRecord = () => useContext(RecordContext);\r\n\r\nconst RecordContext = createContext<IRecordContext>({\r\n  ...DEFAULT_STATE,\r\n  dispatch: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst RecordStore: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const { sourceKey } = useSource();\r\n  const [ store, $dispatch ] = useReducer(StateStore, DEFAULT_STATE);\r\n  const dispatch = useReducer(DispatchStore, { sourceKey, params: {}, cycle: 'month', dispatch: $dispatch });\r\n\r\n  return (\r\n    <RecordContext.Provider value={{ ...store, dispatch: dispatch[1], [ STORE_DISPATCH ]: $dispatch }}>\r\n      { children }\r\n    </RecordContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecordStore;\r\n"],"sourceRoot":""}