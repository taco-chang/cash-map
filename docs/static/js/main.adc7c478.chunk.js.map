{"version":3,"sources":["services/loading.tsx","services/message.tsx","components/modal/index.tsx","components/editor/BsDropdown.tsx","@types/bs.types.ts","components/editor/RecordGroup.tsx","components/grid/grid.types.ts","components/grid/index.tsx","components/editor/CycleDropdown.tsx","components/editor/TypeDropdown.tsx","assets/imgs/404.svg","assets/imgs/cash-logo.svg","assets/i18n lazy /^/.*/.json$/ groupOptions: {} namespace object","services/i18n.tsx","components/form/index.tsx","components/toolbar/SumDashboard.tsx","components/toolbar/AmountSlidebar.tsx","components/toolbar/GroupCollapse.tsx","components/toolbar/TransferButton.tsx","components/App.tsx","services/router.tsx","components/toolbar/MainHeader.tsx","serviceWorker.ts","index.tsx","services/store/record/firebase.ts","services/store/record/reducer.ts","services/store/record/type.ts","services/store/record/index.tsx"],"names":["useLoading","useContext","Context","createContext","isLoading","Loading","LoadingMask","children","useState","show","callbackFn","useEffect","Function","Provider","value","className","BTN","STORE_DISPATCH","Symbol","useMessage","messageStore","state","options","btns","type","text","code","CONFIRM","icon","CANCEL","clearTimeout","timeout","handler","setMessage","dispatch","uid","uuidv4","undefined","window","setTimeout","Message","MessageBox","useReducer","storeDispatch","$do","onClickMask","$","modal","remove","useCallback","e","target","parents","length","preventDefault","stopPropagation","useEvents","id","onClick","toLowerCase","title","tagName","content","map","btn","key","autoFocus","modalReducer","onShowBsModal","setShow","BsModal","closeByBtn","isShow","doCallback","setModal","is","$el","DISMISS","onClickFbar","data-backdrop","data-keyboard","data-dismiss","aria-label","aria-hidden","color","description","BsOption","desc","disabled","onSelect","intl","useIntl","onSelectOption","onPressEnter","useOptionEvents","onKeyPress","messages","BsDropdown","bgColor","Toggle","Array","isArray","useDropdownEvents","props","data-toggle","indexOf","opt","SAVE_SYMBOL","RecordGroupToggle","onOpenGroup","RecordGroup","alloweds","group","onChange","setValue","groups","useRecord","onFilterChange","onSelectGroup","onModalCallback","doLoadGroupsOnOpen","action","doStopSubmit","onSubmit","filter","$group","COLUMN","getColumnOptions","fn","opts","Object","def","keys","forEach","size","getSpacingClass","kind","cls","bssize","push","getBootstrapClass","start","end","on","$value","join","toClassString","i","arr","getColClass","width","offset","order","reduce","option","WIDTH","OFFSET","ORDER","getBsClasses","display","margin","padding","border","rounded","colors","hidden","isMgSpacing","prop","isPdSpacing","getBorderClass","getRoundedClass","getColorClass","hiddenOn","breakpoint","splice","getDisplayClass","BsContainer","createElement","BsRow","gutters","alignable","align","BsCol","CycleDropdown","disableOnce","CYCLE_ONCE","CYCLE_DAY","CYCLE_MONTH","CYCLE_YEAR","TypeDropdown","disableDeposit","INCOME","EXPENSES","DEPOSIT","module","exports","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","ids","t","LANG","defintl","locale","default","reducer","EN","res","localStorage","setItem","ZH","getItem","navigator","language","substring","catch","setLang","I18n","setMessages","promise","hasMessages","msg","JSON","stringify","useMemo","DEFAULT","BsInlineGroup","label","labelWidth","style","SumDashboard","summary","cycle","onCycleChange","expanded","setExpanded","doCollapse","SUMMARY","toUpperCase","sm","Numeral","income","format","expenses","deposit","APPLICABLE","applicable","AmountSlidebar","record","showGroup","onSlide","turnon","params","status","doUpdateGroup","fail","message","success","doRemove","to","amount","min","max","GroupCollapse","groupName","list","actualCount","sum","getSummary","ignore","doSlideAll","count","y","md","UNGROUP","lg","b","step","TransferButton","valid","parse","doDuplicate","App","setFilter","summaryCycle","loaded","setLoaded","doClear","APPEND_RECORD","ALL_OPTION","CLEAR","Loadable","loader","loading","Route","component","setState","this","Component","router","path","exact","goBack","history","back","src","error404","alt","asEnglish","asChinese","MainHeader","dropdown","useRef","Logo","ref","Boolean","location","hostname","match","ReactDOM","render","routers","document","getElementById","serviceWorker","ready","registration","unregister","RecordRef","Firebase","apiKey","authDomain","databaseURL","database","getSum","sumcycle","daysInMonth","Moment","Date","daysInYear","getFullYear","dayOfYear","Math","floor","getAvgAmount","reject","child","snapshot","val","param","update","records","emptyFn","toGroup","sort","g1","g2","doReload","FirebaseRecord","StateStore","data","$list","toList","DispatchStore","$params","removeItem","DATE_FROMAT","RecordModel","validFm","validTo","$uid","$desc","$type","$status","$cycle","$validFm","$validTo","$amount","showID","toDate","toString","amt","parseFloat","isNaN","DEFAULT_STATE","RecordContext","RecordStore","store","$dispatch"],"mappings":"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","file":"static/js/main.adc7c478.chunk.js","sourcesContent":["import React, {\r\n  FC,\r\n  ReactNode,\r\n  Dispatch,\r\n  SetStateAction,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\ninterface IState { show: boolean; callbackFn?: () => void; }\r\ninterface IContext { isLoading: boolean; Loading: Dispatch<SetStateAction<IState>> }\r\n\r\n// TODO: Variables\r\nconst useLoading = () => useContext(Context);\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ isLoading: false, Loading: () => {} });\r\n\r\nconst LoadingMask: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ show: isLoading, callbackFn }, Loading ] = useState<IState>({ show: false });\r\n\r\n  useEffect(() => {\r\n    if (callbackFn instanceof Function)\r\n      callbackFn();\r\n  }, [ callbackFn ]);\r\n\r\n  return (\r\n    <Context.Provider value={{ isLoading, Loading }}>\r\n      { !isLoading ? null : (\r\n        <div className=\"loading-mask\" />\r\n      )}\r\n\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadingMask;\r\nexport { useLoading };\r\n","import { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport React, {\r\n  FC,\r\n  Dispatch,\r\n  Reducer,\r\n  ReactNode,\r\n  MouseEvent,\r\n  createContext,\r\n  useEffect,\r\n  useContext,\r\n  useReducer,\r\n  useCallback\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\nconst STORE_DISPATCH = Symbol('DISPATCH');\r\n\r\nexport enum BTN { CONFIRM, CANCEL }\r\n\r\ninterface IStoreState { options?: IMessageState; }\r\n\r\ninterface IContext {\r\n  options?: IMessageOptions;\r\n  Message: Dispatch<IMessageOptions | BTN>;\r\n  [ STORE_DISPATCH ]: Dispatch<IMessageOptions | BTN>;\r\n}\r\n\r\ninterface IMessageOptions {\r\n  type: 'INFO' | 'WARNING' | 'DANGER' | 'CONFIRM';\r\n  uid?: string;\r\n  title?: string;\r\n  icon?: string;\r\n  content: string;\r\n  timeout?: number;\r\n  handler?: (btn: BTN) => any;\r\n}\r\n\r\ninterface IMessageState extends IMessageOptions {\r\n  btns: {\r\n    text?: string;\r\n    code: BTN;\r\n    icon?: string;\r\n  }[];\r\n}\r\n\r\n// TODO: Hooks\r\nconst useMessage = () => useContext(Context);\r\n\r\nconst useEvents = (options?: IMessageState) => {\r\n  useEffect(() => {\r\n    if (options)\r\n      $(`#${ options.uid }`).modal('show');\r\n    else\r\n      $('div.modal-backdrop').remove();\r\n  }, [ options ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      if ($(e.target).parents('div.alert').length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    }, [])\r\n  };\r\n};\r\n\r\n// TODO: Reducer\r\nconst messageStore: Reducer<IStoreState, IMessageOptions | BTN> = (state, options) => {\r\n  switch (typeof options) {\r\n    case 'object': return {\r\n      options: {\r\n        ...options,\r\n        btns: 'CONFIRM' !== options.type ? [\r\n          { text: 'CHECK_IT', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ] : [\r\n          { text: 'CANCEL', code: BTN.CANCEL, icon: 'fa fa-ban' },\r\n          { text: 'CONFIRM', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ]\r\n      }\r\n    };\r\n    case 'number':\r\n      if (state.options) {\r\n        clearTimeout(state.options.timeout);\r\n\r\n        if (state.options.handler instanceof Function) state.options.handler(\r\n          options\r\n        );\r\n      }\r\n      return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nconst setMessage: Reducer<Dispatch<IMessageOptions | BTN>, IMessageOptions | BTN> = (dispatch, options) => {\r\n  switch (typeof options) {\r\n    case 'number':\r\n      dispatch(options);\r\n      break;\r\n\r\n    case 'object':\r\n      const { type, timeout = null } = options;\r\n\r\n      dispatch({\r\n        ...options,\r\n        uid     : uuidv4(),\r\n        timeout : 'CONFIRM' === type ? undefined : window.setTimeout(\r\n          () => dispatch(BTN.CANCEL),\r\n          !timeout ? 2000 : timeout\r\n        )\r\n      });\r\n      break;\r\n  }\r\n  return dispatch;\r\n};\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({\r\n  Message: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst MessageBox: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ options }, storeDispatch ] = useReducer(messageStore, {});\r\n  const $do = useReducer(setMessage, storeDispatch);\r\n  const { onClickMask } = useEvents(options);\r\n\r\n  return (\r\n    <Context.Provider value={{ options, Message: $do[1], [ STORE_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n\r\n      { !options ? null : (\r\n        <div className=\"modal message-modal\" id={ options.uid } onClick={ onClickMask }>\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className={ `alert alert-${ 'CONFIRM' === options.type ? 'primary' : options.type.toLowerCase() }` }>\r\n                <div className=\"media\">\r\n                  { !options.icon ? null : <i className={ `mr-3 ${options.icon}` } /> }\r\n\r\n                  <div className=\"media-body\">\r\n                    { !options.title ? null : (\r\n                      <h5 className=\"mt-0\">\r\n                        <Fmsg tagName=\"strong\" id={ options.title } />\r\n                      </h5>\r\n                    ) }\r\n\r\n                    <Fmsg tagName=\"p\" id={ options.content } />\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      { options.btns.map(btn => (\r\n                        <button key={ `btn-${ btn.code }` } type=\"button\" autoFocus={ BTN.CANCEL === btn.code }\r\n                          onClick={ () => $do[1](btn.code) } className={ `ml-1 btn btn-${ BTN.CANCEL === btn.code ? 'secondary'\r\n                              : 'CONFIRM' === options.type ? 'primary'\r\n                                : options.type.toLowerCase()\r\n                          }`}>\r\n\r\n                          { !btn.icon ? null : <i className={ `mr-2 ${btn.icon}` } /> }\r\n                          { !btn.text ? null : <Fmsg id={ btn.text } /> }\r\n                        </button>\r\n                      )) }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageBox;\r\nexport { useMessage };\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  Reducer,\r\n  Dispatch,\r\n  SetStateAction,\r\n  MouseEvent,\r\n  useCallback,\r\n  useReducer,\r\n  useEffect\r\n} from 'react';\r\n\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\n// TODO: Types\r\nexport enum BTN { DISMISS, CALLBACK }\r\n\r\ninterface IModalAction { show: boolean; onShowBsModal?: () => void; }\r\ninterface IModalState { id: string; setShow: Dispatch<SetStateAction<boolean>>; }\r\n\r\ninterface IEventInput {\r\n  id: string;\r\n  isShow: boolean;\r\n  closeByBtn: boolean;\r\n  setModal: Dispatch<IModalAction>;\r\n  onShowBsModal?: () => void;\r\n  doCallback: (btn: BTN | symbol) => void | 'close';\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  closeByBtn?: boolean;\r\n  title?: string | { icon: string; text: string; };\r\n  children: ReactNode;\r\n  show: [ boolean, Dispatch<SetStateAction<boolean>> ],\r\n  doCallback?: (btn: BTN | symbol) => void | 'close';\r\n  onShowBsModal?: () => void;\r\n  btns?: {\r\n    text?: string;\r\n    code: BTN | symbol;\r\n    icon?: string;\r\n    color?: 'primary' | 'info' | 'success' | 'warning' | 'danger' | 'white' | 'light' | 'secondary' | 'dark';\r\n  }[];\r\n}\r\n\r\n// TODO: Events & Reducer\r\nconst useEvents = ({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback }: IEventInput) => {\r\n  useEffect(() => {\r\n    if (!$(`#${ id }`).is(':hidden') !== isShow)\r\n      setModal({ show: isShow, onShowBsModal });\r\n  }, [ id, isShow, setModal, onShowBsModal ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      const $el = $(e.target);\r\n\r\n      if ((!closeByBtn && $el.parents('div.modal-content').length === 0)\r\n      || $el.is('button.modal-btn') || $el.parents('button.modal-btn').length > 0) {\r\n        setModal({ show: false });\r\n        doCallback(BTN.DISMISS);\r\n      }\r\n    }, [ setModal, closeByBtn, doCallback ]),\r\n\r\n    onClickFbar: useCallback((btn: BTN | symbol) => {\r\n      if ('close' === doCallback(btn) || BTN.DISMISS === btn)\r\n        setModal({ show: false });\r\n    }, [ setModal, doCallback ])\r\n  };\r\n};\r\n\r\nconst modalReducer: Reducer<IModalState, IModalAction> = (state, { show, onShowBsModal }) => {\r\n  const { id, setShow } = state;\r\n\r\n  $(`#${ id }`).modal(show ? 'show' : 'hide');\r\n  setShow(show);\r\n\r\n  if (show && onShowBsModal instanceof Function)\r\n    onShowBsModal();\r\n\r\n  return state;\r\n};\r\n\r\n// TODO: Components\r\nconst BsModal: FC<IProps> = ({\r\n  className = '',\r\n  closeByBtn = false,\r\n  title = '',\r\n  btns = [],\r\n  show: [ isShow, setShow ],\r\n  children,\r\n  onShowBsModal = () => {},\r\n  doCallback = () => { return 'close'; }\r\n}) => {\r\n  const [{ id }, setModal ] = useReducer(modalReducer, { id: uuidv4(), setShow });\r\n  const { onClickMask, onClickFbar } = useEvents({ id, isShow, setModal, closeByBtn, onShowBsModal, doCallback });\r\n\r\n  return !isShow ? null : (\r\n    <div className=\"modal\" id={ id } onClick={ onClickMask } data-backdrop={ closeByBtn ? 'static' : true } data-keyboard={ !closeByBtn }>\r\n      <div className=\"modal-dialog\">\r\n        <div className={ `modal-content ${ className } px-2` }>\r\n          { !title ? null : (({ text, icon = '' }: { text: string; icon?: string; }) =>\r\n            <div className=\"modal-header py-3\">\r\n              <h5 className=\"modal-title\">\r\n                { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n\r\n                <Fmsg tagName=\"strong\" id={ text } />\r\n              </h5>\r\n\r\n              <button type=\"button\" className=\"close text-white modal-btn\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          )('string' === typeof title ? { text: title } : title)}\r\n\r\n          <div className=\"modal-body py-2\">{ children }</div>\r\n\r\n          { btns.length === 0 ? null : (\r\n            <div className=\"modal-footer pt-2\">\r\n              { btns.map(({ text = '', icon = '', color = '', code }) => (\r\n                <button type=\"button\" key={ 'symbol' === typeof code ? code.description : code } onClick={\r\n                  () => onClickFbar(code)\r\n                } className={\r\n                  `modal-btn btn btn-${ color ? color : BTN.DISMISS === code ? 'secondary' : 'primary' }`\r\n                }>\r\n                  { !icon ? null : <i className={ `${icon} mr-2` } /> }\r\n                  { !text ? null : <Fmsg id={ text } /> }\r\n                </button>\r\n              )) }\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BsModal;\r\n","import React, { FC, KeyboardEvent, ReactElement, useCallback } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { BsColor, getTextColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Types\r\ninterface IDropdownEventInput {\r\n  onSelect: (value: any) => void;\r\n}\r\n\r\ninterface IOptionEventInput extends IDropdownEventInput {\r\n  value: any;\r\n}\r\n\r\ninterface IOptionProps {\r\n  className?: string;\r\n  value: any;\r\n  icon?: string;\r\n  desc?: string;\r\n  disabled?: boolean;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\ninterface IDropdownProps {\r\n  Toggle: ReactElement | string;\r\n  children?: ReactElement | ReactElement[];\r\n  color?: BsColor;\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useOptionEvents = ({ value, onSelect }: IOptionEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback(() => onSelect(value), [ value, onSelect ]),\r\n\r\n    onPressEnter: useCallback(({ key }: KeyboardEvent) => 'Enter' !== key ? null : onSelect(value), [ value, onSelect ])\r\n  };\r\n};\r\n\r\nconst useDropdownEvents = ({ onSelect }: IDropdownEventInput) => {\r\n  return {\r\n    onSelectOption: useCallback((value: any) => onSelect(value), [ onSelect ])\r\n  }\r\n};\r\n\r\n// TODO: Components\r\nexport const BsOption: FC<IOptionProps> = ({\r\n  className = '',\r\n  value,\r\n  icon,\r\n  desc = value,\r\n  disabled = false,\r\n  onSelect = () => {}\r\n}) => {\r\n  const intl = useIntl();\r\n  const { onSelectOption, onPressEnter } = useOptionEvents({ value, onSelect });\r\n\r\n  return (\r\n    <button type=\"button\" disabled={ disabled } className={ `dropdown-item ${ className }` }\r\n      onClick={ onSelectOption } onKeyPress={ onPressEnter }>\r\n\r\n      { !icon ? null : (<i className={ `${ icon } mr-2` } />)}\r\n      { desc in intl.messages ? intl.messages[ desc ] : desc }\r\n    </button>\r\n  );\r\n};\r\n\r\nconst BsDropdown: FC<IDropdownProps> = ({ Toggle, children = [], color = 'white', onSelect = () => {}}) => {\r\n  const options = Array.isArray(children) ? children : [ children ];\r\n  const { onSelectOption } = useDropdownEvents({ onSelect });\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      { 'string' !== typeof Toggle ? (\r\n        <Toggle.type {...{ ...Toggle.props, className: `${ Toggle.props.className || '' } dropdown-toggle` }} data-toggle=\"dropdown\" />\r\n      ) : (\r\n        <button type=\"button\" className={ `btn btn-${ color } dropdown-toggle` } data-toggle=\"dropdown\">\r\n          { Toggle }\r\n        </button>\r\n      )}\r\n\r\n      <div className={ `dropdown-menu w-100 bg-${ color } text-${ getTextColor(color) }` }>\r\n        { options.length === 0 ? <BsOption disabled value=\"OPTION_NOT_FOUND\" /> : options.map(opt =>\r\n          <BsOption key={ opt.key } {...{\r\n            ...opt.props,\r\n            onSelect: onSelectOption\r\n          }}  />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BsDropdown;\r\n","\r\nexport type BsColor = 'primary' | 'secondary' | 'success' | 'danger'\r\n| 'warning' | 'info' | 'light' | 'dark' | 'white';\r\n\r\nexport const getTextColor = (bgColor: BsColor): BsColor =>\r\n  [ 'warning', 'light', 'white' ].indexOf(bgColor) >= 0 ? 'dark' : 'white';\r\n","import React, {\r\n  FC,\r\n  Dispatch,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  SetStateAction,\r\n  useState,\r\n  useCallback\r\n} from 'react';\r\n\r\nimport { useRecord } from '../../services/store/record';\r\n\r\nimport BsModal, { BTN } from '../modal';\r\nimport BsDropdown, { BsOption } from './BsDropdown';\r\n\r\n\r\n// TODO: Types\r\nconst SAVE_SYMBOL = Symbol('SAVE');\r\n\r\nexport type ShowModal = [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n\r\ninterface IEventInput {\r\n  group: string;\r\n  setValue: (value: string) => void;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\ninterface IToggleProps {\r\n  show: ShowModal;\r\n  className?: string;\r\n  icon?: string;\r\n}\r\n\r\ninterface IModalProps {\r\n  show: ShowModal;\r\n  group: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ group, setValue, onChange }: IEventInput) => {\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onFilterChange: useCallback(({ target: { value }}: ChangeEvent<HTMLInputElement>) => {\r\n      setValue(value);\r\n    }, [ setValue ]),\r\n\r\n    onSelectGroup: useCallback((value: any) => setValue(value as string), [ setValue ]),\r\n\r\n    onModalCallback: useCallback((btn: BTN | symbol) => {\r\n      if (SAVE_SYMBOL === btn)\r\n        onChange(group);\r\n    }, [ group, onChange ]),\r\n\r\n    doLoadGroupsOnOpen: useCallback(() => dispatch({ action: 'GROUP' }), [ dispatch ]),\r\n    \r\n    doStopSubmit: useCallback((e: FormEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      onChange(group);\r\n    }, [ group, onChange ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nexport const RecordGroupToggle: FC<IToggleProps> = ({ show, className = '', icon = 'fa fa-object-ungroup' }) => {\r\n  const onOpenGroup = useCallback(() => show[1](true), [ show ]);\r\n\r\n  return (\r\n    <button type=\"button\" className={ className } onClick={ onOpenGroup }>\r\n      <i className={ icon } />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst RecordGroup: FC<IModalProps> = ({ show, group, onChange }) => {\r\n  const [ value, setValue ] = useState(group);\r\n  const { group: groups } = useRecord();\r\n\r\n  const {\r\n    onFilterChange,\r\n    onSelectGroup,\r\n    onModalCallback,\r\n    doLoadGroupsOnOpen,\r\n    doStopSubmit\r\n  } = useEvents({ group: value, setValue, onChange });\r\n\r\n  return (\r\n    <BsModal className=\"bg-secondary\" show={ show } closeByBtn title={{\r\n      icon: 'fa fa-object-ungroup',\r\n      text: 'TITLE_SET_GROUP'\r\n    }} btns={[\r\n      { code: BTN.DISMISS, icon: 'fa fa-ban', text: 'CANCEL' },\r\n      { code: SAVE_SYMBOL, icon: 'fa fa-download', text: 'CONFIRM' }\r\n    ]} onShowBsModal={ doLoadGroupsOnOpen } doCallback={ onModalCallback }>\r\n      <form onSubmit={ doStopSubmit }>\r\n        <BsDropdown onSelect={ onSelectGroup } Toggle={\r\n          <input type=\"text\" className=\"form-control\" value={ value } onChange={ onFilterChange } />\r\n        }>\r\n          {(alloweds => alloweds.length === 0 ?\r\n            <BsOption value={ value } /> : alloweds.map($group =>\r\n              <BsOption key={ $group } value={ $group } />\r\n            )\r\n          )(groups.filter($group => $group.indexOf(value) >= 0))}\r\n        </BsDropdown>\r\n      </form>\r\n    </BsModal>\r\n  );\r\n}\r\n\r\nexport default RecordGroup;\r\n","import { ReactNode } from 'react';\r\nimport { BsColor } from '../../@types/bs.types';\r\n\r\n\r\n// TODO: Basic Types\r\ntype Breakpoint = 'sm' | 'md' | 'lg' | 'xl';\r\n\r\ntype BsSize = '' | Breakpoint;\r\ntype BsBreakpoint = 'def' | Breakpoint;\r\ntype BsSpacing5 = 1 | 2 | 3 | 4 | 5;\r\n\r\ntype BsDisplay = 'inline' | 'inline-block' | 'inline-flex'\r\n  | 'block' | 'flex' | 'table' | 'table-row' | 'table-cell';\r\n\r\n\r\n// TODO: Configures Types\r\nenum COLUMN { WIDTH, OFFSET, ORDER }\r\n\r\ntype BsCol12 = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\ntype Width = 'auto' | BsCol12;\r\ntype Order = 'first' | 'last' | BsCol12;\r\n\r\ntype BsColors = false | { border?: BsColor; text?: BsColor; bg?: BsColor; };\r\ntype BsHidden = false | BsBreakpoint | BsBreakpoint[];\r\ntype BsBorder = boolean | { t?: true;  l?: true; b?: true;  r?: true; };\r\ntype BsRounded = boolean | { size?: 'sm' | 'lg'; type?: 'top' | 'bottom' | 'left' | 'right' | 'circle' | 'pill'; };\r\n\r\ntype BsMargin = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5 | 'auto';\r\n  b?: BsSpacing5;  r?: BsSpacing5 | 'auto';\r\n  y?: BsSpacing5;  x?: BsSpacing5 | 'auto';\r\n};\r\n\r\ntype BsPadding = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5;\r\n  b?: BsSpacing5;  r?: BsSpacing5;\r\n  y?: BsSpacing5;  x?: BsSpacing5;\r\n};\r\n\r\ninterface IBreakpoint<T> { def?: T; sm?: false | T; md?: false | T; lg?: false | T; xl?: false | T; }\r\n\r\nexport interface IRowProps extends IBsgridProps {\r\n  align?: false | 'start' | 'center' | 'end' | 'around' | 'between';\r\n  alignable?: BsSize;\r\n  gutters?: boolean;\r\n}\r\n\r\nexport interface IColProps extends IBsgridProps {\r\n  width?: Width | IBreakpoint<Width>;\r\n  offset?: false | BsCol12 | IBreakpoint<BsCol12>;\r\n  order?: false | Order | IBreakpoint<Order>;\r\n}\r\n\r\n\r\n// TODO: Generate Class Function\r\nfunction getColumnOptions<T>(options: T | false, fn: (bssize: BsSize, opts: T) => void): void {\r\n  const opts: IBreakpoint<T> = (options instanceof Object ? options : { def: options }) as IBreakpoint<T>;\r\n\r\n  Object.keys(opts).forEach((size: string) => (opts as any)[size] === false ? null : fn(\r\n    ('def' === size ? '' : size) as BsSize,\r\n    (opts as any)[size]\r\n  ));\r\n}\r\n\r\nfunction getSpacingClass(kind: 'm' | 'p', options: any): string[] {\r\n  const cls: string[] = [];\r\n\r\n  Object.keys(options).forEach((size: string) => {\r\n    const bssize = 'def' === size ? '' : size;\r\n    const value = options[size];\r\n\r\n    if (value !== false) {\r\n      if ('number' === typeof value)\r\n        cls.push(getBootstrapClass(bssize as BsSize, { start: kind, end: value }));\r\n      else Object.keys(value).forEach((on: string) => {\r\n        const $value = value[on] || '';\r\n\r\n        if ($value)\r\n          cls.push(getBootstrapClass(bssize as BsSize, { start: `${kind}${on}`, end: $value }));\r\n      });\r\n    }\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getBorderClass(options: BsBorder): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('border');\r\n    else Object.keys(options).forEach((on: string) => {\r\n      switch (on) {\r\n        case 't': cls.push('border-top'); break;\r\n        case 'b': cls.push('border-bottom'); break;\r\n        case 'l': cls.push('border-left'); break;\r\n        case 'r': cls.push('border-right'); break;\r\n      }\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getRoundedClass(options: BsRounded): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('rounded');\r\n    else Object.keys(options).forEach((prop: string) => {\r\n      const { [prop]: value } = options as any;\r\n\r\n      if (value)\r\n        cls.push(`rounded-${value}`);\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getColorClass(options: BsColors): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) Object.keys(options).forEach((target: string) => {\r\n    const { [target]: value } = options as any;\r\n\r\n    if (value)\r\n      cls.push('border' === target ? `border-${value}` : `${target}-${value}`);\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getDisplayClass(display: BsDisplay, options: BsHidden): string[] {\r\n  const cls: string[] = [`d-${display}`];\r\n\r\n  if (options !== false) {\r\n    const hiddenOn: BsBreakpoint[] = Array.isArray(options) ? options : [options];\r\n\r\n    ['def', 'sm', 'md', 'lg', 'xl'].filter((breakpoint: string) =>\r\n      hiddenOn.indexOf(breakpoint as BsBreakpoint) >= 0\r\n    ).forEach((breakpoint: string) => {\r\n      const size: BsSize = 'def' === breakpoint ? '' : (breakpoint as BsSize);\r\n\r\n      cls.splice(cls.indexOf(getBootstrapClass(size, { start: 'd', end: display })), 1);\r\n      cls.push(getBootstrapClass(size, { start: 'd', end: 'none' }));\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nexport function getBootstrapClass(\r\n  size: BsSize,\r\n  { start = '', end = '' }: { start?: string | number, end?: string | number } = {}\r\n): string {\r\n  return [start, size, end].filter((value: string | number) => !(!value)).join('-');\r\n};\r\n\r\nexport function toClassString(cls: string[]): string {\r\n  return cls.filter((value: string, i: number, arr: string[]) =>\r\n    !(!value) && arr.indexOf(value) === i\r\n  ).join(' ');\r\n}\r\n\r\nexport function getColClass({ width = 'auto', offset = false, order = false }: IColProps): string[] {\r\n  return [ width, offset, order ].reduce((cls: string[], option: any, i: number): string[] => {\r\n    switch (i) {\r\n      case COLUMN.WIDTH: getColumnOptions<Width>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'col', end: 'auto' === opts ? '' : opts }))\r\n      ); break;\r\n      case COLUMN.OFFSET: getColumnOptions<BsCol12>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'offset', end: opts }))\r\n      ); break;\r\n      case COLUMN.ORDER: getColumnOptions<Order>(option, (size, opts) =>\r\n      cls.push(getBootstrapClass(size, { start: 'order', end: opts }))\r\n    ); break;\r\n    }\r\n    return [ ...cls ];\r\n  }, []);\r\n}\r\n\r\nexport function getBsClasses(display: BsDisplay, {\r\n  className = '',\r\n  margin = false,\r\n  padding = false,\r\n  border = false,\r\n  rounded = false,\r\n  colors = false,\r\n  hidden = false\r\n}: IBsgridProps): string[] {\r\n  const isMgSpacing = Object.keys(margin).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n  const isPdSpacing = Object.keys(padding).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n\r\n  return [\r\n    className,\r\n    ...getSpacingClass('m', !isMgSpacing ? { def: margin } : margin),\r\n    ...getSpacingClass('p', !isPdSpacing ? { def: padding } : padding),\r\n    ...getBorderClass(border),\r\n    ...getRoundedClass(rounded),\r\n    ...getColorClass(colors),\r\n    ...getDisplayClass(display, hidden)\r\n  ];\r\n};\r\n\r\nexport default interface IBsgridProps {\r\n  tagName?: string;\r\n  className?: string;\r\n\r\n  margin?: BsMargin | IBreakpoint<BsMargin>;\r\n  padding?: BsPadding | IBreakpoint<BsPadding>;\r\n  border?: BsBorder;\r\n  rounded?: BsRounded;\r\n  colors?: BsColors;\r\n  hidden?: BsHidden;\r\n\r\n  children?: ReactNode;\r\n}","import { FC, createElement } from 'react';\r\n\r\nimport IBsgridProps, {\r\n  IRowProps,\r\n  IColProps,\r\n  toClassString,\r\n  getBsClasses,\r\n  getColClass,\r\n  getBootstrapClass\r\n} from './grid.types';\r\n\r\n\r\n// TODO: Components\r\nexport const BsContainer: FC<IBsgridProps> = (props: IBsgridProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([ 'container', ...getBsClasses('block', props) ])\r\n  }, children);\r\n};\r\n\r\nexport const BsRow: FC<IRowProps> = (props: IRowProps) => {\r\n  const { tagName = 'div', children, gutters = true, alignable = '', align = false } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'row',\r\n      gutters ? '' : 'no-gutters',\r\n      align === false ? '' : `justify-content-${getBootstrapClass(alignable, { end: align })}`,\r\n      ...getBsClasses('flex', props)\r\n    ])\r\n  }, children);\r\n};\r\n\r\nexport const BsCol: FC<IColProps> = (props: IColProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'col',\r\n      ...getColClass(props),\r\n      ...getBsClasses('block', props)\r\n    ])\r\n  }, children);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  className?: string;\r\n  disableOnce?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst CycleDropdown: FC<IProps> = ({ value, onChange, className = '', disableOnce = false }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { disableOnce ? null : (\r\n        <option value=\"once\">{ intl.messages.CYCLE_ONCE }</option>\r\n      )}\r\n      <option value=\"day\">{ intl.messages.CYCLE_DAY }</option>\r\n      <option value=\"month\">{ intl.messages.CYCLE_MONTH }</option>\r\n      <option value=\"year\">{ intl.messages.CYCLE_YEAR }</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default CycleDropdown;","import React, { FC, ReactNode } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  children?: ReactNode;\r\n  className?: string;\r\n  disableDeposit?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst TypeDropdown: FC<IProps> = ({\r\n  className = '',\r\n  disableDeposit = false,\r\n  children,\r\n  value,\r\n  onChange\r\n}) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { children }\r\n      <option value=\"income\">{ intl.messages.INCOME }</option>\r\n      <option value=\"expenses\">{ intl.messages.EXPENSES }</option>\r\n\r\n      { disableDeposit ? null : (\r\n        <option value=\"deposit\">{ intl.messages.DEPOSIT }</option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default TypeDropdown;\r\n","module.exports = __webpack_public_path__ + \"static/media/404.bd332713.svg\";","module.exports = __webpack_public_path__ + \"static/media/cash-logo.cb5cc733.svg\";","var map = {\n\t\"./en.json\": [\n\t\t75,\n\t\t1\n\t],\n\t\"./zh.json\": [\n\t\t76,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 58;\nmodule.exports = webpackAsyncContext;","import React, {\r\n  FC,\r\n  Reducer,\r\n  Dispatch,\r\n  ReactNode,\r\n  createContext,\r\n  useState,\r\n  useReducer,\r\n  useMemo,\r\n  useContext\r\n} from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\nexport enum LANG { DEFAULT, EN, ZH }\r\n\r\ninterface IMessages { [message: string]: string; }\r\n\r\ninterface IMsgOptions { locale: string; messages: IMessages; }\r\n\r\ninterface IImportJSON { default: IMessages; }\r\n\r\ninterface IContext { locale: string; setLang: Dispatch<LANG> }\r\n\r\n\r\n// TODO: Variables & Reducer\r\nconst defintl = import('../assets/i18n/en.json').then(({ default: messages }: IImportJSON): IMsgOptions => ({\r\n  locale: 'en',\r\n  messages\r\n}));\r\n\r\nconst useI18n = () => useContext(Context);\r\n\r\nconst reducer: Reducer<Promise<IMsgOptions>, LANG> = (state, action: LANG) => {\r\n  switch (action) {\r\n    case LANG.EN: return defintl.then(res => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'en');\r\n\r\n      return res;\r\n    });\r\n    case LANG.ZH: return import('../assets/i18n/zh.json').then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'zh');\r\n\r\n      return { locale: 'zh', messages };\r\n    });\r\n    default: return ((locale: string) => {\r\n      locale = locale.substring(0, locale.indexOf('-') > 0 ? locale.indexOf('-') : undefined);\r\n\r\n      return import(`../assets/i18n/${locale}.json`).then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n        localStorage.setItem('CASH_MAP_LANG', locale);\r\n\r\n        return { locale, messages };\r\n      }).catch(() => defintl);\r\n    })(localStorage.getItem('CASH_MAP_LANG') || navigator.language.toLowerCase());\r\n  }\r\n};\r\n\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ locale: 'en', setLang: () => {} });\r\n\r\nconst I18n: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [{ locale, messages }, setMessages ] = useState<IMsgOptions>({ locale: 'en', messages: {} });\r\n  const [ promise, setLang ] = useReducer(reducer, defintl);\r\n  const hasMessages = Object.keys(messages).length > 0;\r\n\r\n  promise.then(msg => JSON.stringify(msg) === JSON.stringify(messages) ? null : setMessages(msg));\r\n\r\n  useMemo(() => hasMessages ? null : setLang(LANG.DEFAULT), [ hasMessages ]);\r\n\r\n  return !hasMessages ? null : (\r\n    <IntlProvider {...{ locale, messages }}>\r\n      <Context.Provider value={{ locale, setLang }}>\r\n        { children }\r\n      </Context.Provider>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport {\r\n  useI18n\r\n}\r\n","import React, { FC, ReactNode } from 'react';\r\nimport { MessageFormatElement } from 'intl-messageformat-parser';\r\n\r\ninterface IInlineGroupProps {\r\n  label?: string | MessageFormatElement[];\r\n  labelWidth?: number | string;\r\n  className?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const BsInlineGroup: FC<IInlineGroupProps> = ({ label = '', labelWidth = 'auto', className = '', children }) => {\r\n  return (\r\n    <div className={[ 'input-group', className ].join(' ')}>\r\n      { !label ? null : (\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text justify-content-end\" style={{ width: labelWidth }}>{ label }</div>\r\n        </div>\r\n      )}\r\n\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useState, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { Cycle, ISummary } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../grid';\r\nimport { BsInlineGroup } from '../form';\r\n\r\nimport CycleDropdown from '../editor/CycleDropdown';\r\n\r\n\r\n// TODO: Component\r\nconst SumDashboard: FC<{\r\n  summary: ISummary;\r\n  cycle: Cycle;\r\n  onCycleChange: (value: Cycle) => void\r\n}> = ({ summary, cycle, onCycleChange }) => {\r\n  const intl = useIntl();\r\n  const labelWidth = 'zh' === intl.locale ? 60 : 110;\r\n  const [ expanded, setExpanded ] = useState<boolean>(false);\r\n  const doCollapse = useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]);\r\n\r\n  return (\r\n    <fieldset className={ `summary-dashboard shadow ${ expanded ? 'sd-expand' : 'sd-collapse' }` }>\r\n      <legend>\r\n        <button type=\"button\" className=\"btn btn-link\" onClick={ doCollapse }>\r\n          <i className={ `mr-2 fa fa-${ expanded ? 'minus' : 'plus' }-square-o` } />\r\n          { intl.messages.SUMMARY } ({ intl.messages[ `CYCLE_${ cycle.toUpperCase() }` ] })\r\n        </button>\r\n      </legend>\r\n\r\n      { !expanded ? (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow className=\"text-right\">\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"APPLICABLE\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n            </BsCol>\r\n\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"DEPOSIT\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      ) : (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow>\r\n            <BsCol className=\"form-group\" width={{ sm: 6 }}>\r\n              <Fmsg tagName=\"label\" id=\"VIEW_CYCLE\" />\r\n\r\n              <CycleDropdown value={ cycle } disableOnce onChange={\r\n                value => onCycleChange(value as 'day' | 'month' | 'year')\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow>\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.INCOME } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.income).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.EXPENSES } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.expenses).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.DEPOSIT } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.APPLICABLE } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      )}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default SumDashboard;\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { BTN, useMessage } from '../../services/message';\r\nimport { IRecordData, useRecord } from '../../services/store/record';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  record: IRecordData;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ record }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onSlide: useCallback((turnon: boolean) => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    }), [ record, dispatch ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'UPDATE',\r\n        params: { ...record, group: value || '' },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'INFO', content: 'MSG_SAVE_SUCCESS' })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, isLoading, record ]),\r\n\r\n    doRemove: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_REMOVE_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'REMOVE',\r\n          params: record,\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch, record ])\r\n  };\r\n}\r\n\r\n// TODO: Components\r\nconst AmountSlidebar: FC<{ record: IRecordData; }> = ({ record }) => {\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const { onSlide, doUpdateGroup, doRemove } = useEvents({ record });\r\n\r\n  return (\r\n    <div className=\"form-group amount-slidebar\">\r\n      <RecordGroup show={ showGroup } group={ record.group || '' } onChange={ doUpdateGroup } />\r\n\r\n      <div className=\"media\">\r\n        <div className=\"btn-group-vertical\">\r\n          <Link className=\"mr-3 btn btn-link text-info\" to={ `/update/${ record.uid }` }>\r\n            <i className=\"fa fa-pencil-square-o\" />\r\n          </Link>\r\n\r\n          <RecordGroupToggle show={ showGroup } className=\"btn btn-link text-warning\" />\r\n        </div>\r\n        \r\n        <span className=\"media-body py-2\">\r\n          <h4>{ record.desc }</h4>\r\n          $ { Numeral(record.amount).format('0,0') } / { intl.messages[`CYCLE_${ (record.cycle || '').toUpperCase() }`] }\r\n        </span>\r\n\r\n        <button type=\"button\" className=\"btn btn-link text-white mt-2\" onClick={ doRemove }>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n\r\n      <input type=\"range\" className={ `custom-range ${ record.type  }` } min=\"0\" max=\"1\"\r\n        value={ 'actual' === record.status ? 1 : 0 } onChange={({ target: { value }}) => onSlide(value === '1')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountSlidebar;\r\n","import React, { FC, useState, useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../../services/loading';\r\nimport { useMessage } from '../../services/message';\r\nimport { useRecord, IRecordData, ISummary, getSummary } from '../../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../grid';\r\n\r\nimport RecordGroup, { RecordGroupToggle } from '../editor/RecordGroup';\r\nimport AmountSlidebar from './AmountSlidebar';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  list: IRecordData[];\r\n  expanded: [ boolean, Dispatch<SetStateAction<boolean>> ];\r\n}\r\n\r\ninterface IGroupProps {\r\n  cycle: 'day' | 'month' | 'year';\r\n  groupName?: string;\r\n  list: IRecordData[];\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ list, expanded: [ expanded, setExpanded ] }: IEventInput) => {\r\n  const { isLoading, Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    doCollapse: useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]),\r\n\r\n    doSlideAll: useCallback((turnon: boolean) => list.forEach(record => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    })), [ list, dispatch ]),\r\n\r\n    doUpdateGroup: useCallback((value: string) => isLoading ? null : Loading({\r\n      show: true,\r\n      callbackFn: () => {\r\n        let count = 0;\r\n\r\n        list.forEach(record => dispatch({\r\n          action: 'UPDATE',\r\n          params: { ...record, group: value },\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => {\r\n              count++;\r\n\r\n              if (count === list.length) Message({\r\n                type: 'INFO',\r\n                content: 'MSG_SAVE_SUCCESS'\r\n              });\r\n            }\r\n          })\r\n        }));\r\n      }\r\n    }), [ Message, Loading, isLoading, dispatch, list ])\r\n  };\r\n};\r\n\r\n// TODO: Component\r\nconst GroupCollapse: FC<IGroupProps> = ({ cycle, groupName = 'UNGROUP', list }) => {\r\n  const actualCount = list.filter(({ status }) => 'actual' === status).length;\r\n  const status = actualCount === list.length ? 1 : actualCount === 0 ? 0 : .5;\r\n  const intl = useIntl();\r\n  const showGroup = useState<boolean>(false);\r\n  const expanded = useState<boolean>(true);\r\n  const sum = getSummary({ cycle, list, ignore: true }) as ISummary;\r\n  const { doCollapse, doSlideAll, doUpdateGroup } = useEvents({ list, expanded });\r\n\r\n  return (\r\n    <BsContainer margin={{ y: 3 }}>\r\n      <RecordGroup show={ showGroup } group={ 'UNGROUP' === groupName ? '' : groupName } onChange={ doUpdateGroup } />\r\n\r\n      <BsRow>\r\n        <BsCol tagName=\"fieldset\" className=\"group-title\" width={{ sm: 8, md: 6 }}\r\n          border={{ t: true }} colors={{ border: 'warning' }}>\r\n\r\n          <legend>\r\n            { 'UNGROUP' === groupName ? <span className=\"p-2 text-warning\">{ intl.messages.UNGROUP }</span> :\r\n              <button type=\"button\" className=\"btn btn-link text-warning\" onClick={ doCollapse }>\r\n                <i className={ `mr-2 fa fa-${ expanded[0] ? 'minus' : 'plus' }-square-o` } />\r\n                { groupName }\r\n              </button>\r\n            }\r\n\r\n            { 'UNGROUP' === groupName ? null : (\r\n              <RecordGroupToggle show={ showGroup } icon=\"fa fa-pencil-square\" className=\"btn btn-link text-info\" />\r\n            )}\r\n          </legend>\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      { !expanded[0] ?\r\n        (<BsRow align=\"center\">\r\n          <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }}>\r\n            <table className=\"table table-dark table-striped table-hover text-right\">\r\n              <thead>\r\n                <tr>\r\n                  <Fmsg tagName=\"th\" id=\"INCOME\" />\r\n                  <Fmsg tagName=\"th\" id=\"EXPENSES\" />\r\n                  <Fmsg tagName=\"th\" id=\"DEPOSIT\" />\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr>\r\n                  <td>{ Numeral(sum.income).format('0,0') }</td>\r\n                  <td>{ Numeral(sum.expenses).format('0,0') }</td>\r\n                  <td>{ Numeral(sum.deposit).format('0,0') }</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <input type=\"range\" className=\"custom-range group\" min=\"0\" max=\"1\"\r\n              step={ actualCount > 0 && actualCount < list.length ? .5 : 1 }\r\n              value={ status } onChange={({ target: { value }}) => doSlideAll(value === '1')} />\r\n          </BsCol>\r\n        </BsRow>) :\r\n        \r\n        list.map((record, i) => <BsRow key={`record-${ record.uid }`} align=\"center\">\r\n          <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }} border={\r\n            i === (list.length - 1) ? false : { b: true }\r\n          }>\r\n            <AmountSlidebar record={ record } />\r\n          </BsCol>\r\n        </BsRow>\r\n      )}\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\nexport default GroupCollapse;\r\n","import React, { FC, useMemo, useCallback } from 'react';\r\nimport { useRecord } from '../../services/store/record';\r\n\r\nconst TransferButton: FC<{ className?: string; }> = ({ className = '' }) => {\r\n  const valid = useMemo(() => JSON.parse(localStorage.getItem('CM_RECORDS') || '[]').length > 0, []);\r\n  const { dispatch } = useRecord();\r\n  const doDuplicate = useCallback(() => dispatch({ action: 'DUPLICATE' }), [ dispatch ]);\r\n\r\n  return !valid ? null : (\r\n    <button type=\"button\" className={ `btn btn-info ${ className }` } onClick={ doDuplicate }>\r\n      <i className=\"fa fa-cloud-upload\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TransferButton;\r\n","import React, { Dispatch, SetStateAction, FC, useState, useCallback, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\n\r\nimport { useLoading } from '../services/loading';\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { useRecord } from '../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from './grid';\r\nimport { BsInlineGroup } from './form';\r\n\r\nimport SumDashboard from './toolbar/SumDashboard';\r\nimport GroupCollapse from './toolbar/GroupCollapse';\r\nimport TransferButton from './toolbar/TransferButton';\r\n\r\nimport TypeDropdown from './editor/TypeDropdown';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  summaryCycle: 'day' | 'month' | 'year';\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ summaryCycle, setFilter }: IEventInput) => {\r\n  const [ loaded, setLoaded ] = useState<boolean>(false);\r\n  const { Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  useEffect(() => {\r\n    if (!loaded) Loading({\r\n      show: true,\r\n      callbackFn: () => dispatch({\r\n        action: 'SUMMARY',\r\n        params: { cycle: summaryCycle },\r\n        fail: (e: Error) => Loading({\r\n          show: false,\r\n          callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n        }),\r\n        success: () => dispatch({\r\n          action: 'LIST',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => setLoaded(true)\r\n          })\r\n        })\r\n      })\r\n    });\r\n  }, [ Loading, Message, summaryCycle, loaded, setLoaded, dispatch ]);\r\n\r\n  return {\r\n    onCycleChange: useCallback((value: 'day' | 'month' | 'year') => dispatch({\r\n      action: 'SUMMARY',\r\n      params: { cycle: value }\r\n    }), [ dispatch ]),\r\n    \r\n    onFilterChange: useCallback((value: string) => {\r\n      setFilter(value);\r\n      dispatch({ action: 'LIST', params: { type: 'all' === value ? '' : value }})\r\n    }, [ dispatch, setFilter ]),\r\n\r\n    doClear: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_CLEAR_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'CLEAR',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch ])\r\n  }\r\n};\r\n\r\n// TODO: Component - APP\r\nconst App: FC = () => {\r\n  const intl = useIntl();\r\n  const [ filter, setFilter ] = useState('all');\r\n  const { summary, list } = useRecord();\r\n  const { onCycleChange, onFilterChange, doClear } = useEvents({ summaryCycle: summary.cycle, setFilter });\r\n\r\n  return (\r\n    <div>\r\n      <SumDashboard summary={ summary } cycle={ summary.cycle } onCycleChange={ onCycleChange } />\r\n\r\n      { Object.keys(list).map(group =>\r\n        <GroupCollapse key={ group } cycle={ summary.cycle } groupName={ group } list={ list[group] } />\r\n      )}\r\n\r\n      <BsContainer className=\"list-fbar\">\r\n        <BsRow padding={{ t: 3 }}>\r\n          <BsCol className=\"form-group\">\r\n            <Fmsg tagName=\"label\" id=\"FILTER_MAINTAIN\" />\r\n\r\n            <BsInlineGroup>\r\n              <Link className=\"btn btn-primary\" to=\"/append\">\r\n                <i className=\"fa fa-plus mr-2\" /> { intl.messages.APPEND_RECORD }\r\n              </Link>\r\n\r\n              <TypeDropdown className=\"rounded mx-2\" value={ filter } onChange={ onFilterChange }>\r\n                <option value=\"all\">{ intl.messages.ALL_OPTION }</option>\r\n              </TypeDropdown>\r\n\r\n              <TransferButton className=\"mr-2\" />\r\n\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={ doClear }>\r\n                <i className=\"fa fa-remove mr-2\" /> { intl.messages.CLEAR }\r\n              </button>\r\n            </BsInlineGroup>\r\n          </BsCol>\r\n        </BsRow>\r\n      </BsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component, FC, useEffect, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport { RouteProps, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useLoading } from './loading';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../components/grid';\r\nimport App from '../components/App';\r\n\r\nimport error404 from '../assets/imgs/404.svg';\r\n\r\n\r\n// TODO: Types\r\ninterface ILoadable {\r\n  loading?: FC;\r\n  loader: () => Promise<{\r\n    default: FC<RouteComponentProps<any>>;\r\n  }>;\r\n}\r\n\r\ninterface IRouter extends RouteProps {\r\n  text?: string;\r\n  icon?: string;\r\n}\r\n\r\n// TODO: 404 Page Not Found\r\nconst PageNotFound: FC = () => {\r\n  const goBack = useCallback(() => window.history.back(), []);\r\n\r\n  return (\r\n    <BsContainer className=\"not-found-404\">\r\n      <BsRow align=\"center\">\r\n        <BsCol width={{ def: 12, sm: 6, md: 4 }}>\r\n          <img className=\"img-fluid\" src={error404} alt=\"404\" />\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      <BsRow align=\"center\">\r\n        <BsCol className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-lg btn-link\" onClick={goBack}>\r\n            <Fmsg id=\"BACK_TO_PREV_PAGE\" />\r\n          </button>\r\n        </BsCol>\r\n      </BsRow>\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\n// TODO: Loading Mask\r\nconst LoadingMask: FC = () => {\r\n  const { Loading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    Loading({ show: true });\r\n\r\n    return () => Loading({ show: false })\r\n  }, [ Loading ]);\r\n  return null;\r\n};\r\n\r\n// TODO: Loadable\r\nconst Loadable = ({ loader, loading = LoadingMask }: ILoadable) => class LoadableComponent extends Component<\r\n  RouteComponentProps<any>,\r\n  { Route: FC<RouteComponentProps<any>>; }\r\n> {\r\n  state = { Route: loading };\r\n\r\n  constructor(props: RouteComponentProps<any>) {\r\n    super(props);\r\n    loader().then(({ default: component }) => this.setState({ Route: component }));\r\n  }\r\n\r\n  render() {\r\n    const { Route } = this.state;\r\n\r\n    return (\r\n      <Route { ...this.props } />\r\n    );\r\n  }\r\n};\r\n  \r\n\r\n// TODO: Router Options\r\nconst router: IRouter[] = [{\r\n  path: '/',\r\n  exact: true,\r\n  component: App\r\n}, {\r\n  path: '/append',\r\n  text: 'APPEND_RECORD',\r\n  icon: 'fa fa-plus',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/update/:uid',\r\n  text: 'UPDATE_RECORD',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  component: PageNotFound\r\n}];\r\n\r\nexport default router;\r\n","import React, { FC, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useI18n, LANG } from '../../services/i18n';\r\n\r\nimport Logo from '../../assets/imgs/cash-logo.svg';\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = () => {\r\n  const { setLang } = useI18n();\r\n\r\n  return {\r\n    asEnglish: useCallback(() => setLang(LANG.EN), [ setLang ]),\r\n    asChinese: useCallback(() => setLang(LANG.ZH), [ setLang ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst MainHeader: FC = () => {\r\n  const dropdown = useRef(null);\r\n  const { asEnglish, asChinese } = useEvents();\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-dark bg-dark text-secondary border-bottom border-white\">\r\n      <Link className=\"navbar-brand text-white\" to=\"/\">\r\n        <img className=\"rounded-circle\" src={ Logo } alt=\"Logo\" />\r\n      </Link>\r\n      \r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"lang-dropdown navbar-nav ml-auto\">\r\n          <li ref={ dropdown } className=\"nav-item dropdown\">\r\n            <button type=\"button\" className=\"btn btn-link nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n              <i className=\"fa fa-language mr-2\" />\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asEnglish }>English</button>\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asChinese }>繁體中文</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuidv4 from 'uuid/v4';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport $ from 'jquery';\nimport 'hammerjs';\nimport 'popper.js';\n\nimport I18n from './services/i18n';\nimport LoadingMask from './services/loading';\nimport MessageBox from './services/message';\nimport RecordStore from './services/store/record';\nimport routers from './services/router';\n\nimport MainHeader from './components/toolbar/MainHeader';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/main.scss';\n\n\n(window as any).$ = $;\n\nimport('bootstrap').then(() => {\n  ReactDOM.render((\n    <I18n>\n      <LoadingMask>\n        <MessageBox>\n          <HashRouter>\n            <MainHeader />\n\n            <div className=\"cash-map-app\">\n              <RecordStore>\n                <Switch>\n                  { routers.map(options => <Route key={uuidv4()} {...options} />) }\n                </Switch>\n              </RecordStore>\n            </div>\n          </HashRouter>\n        </MessageBox>\n      </LoadingMask>\n    </I18n>\n  ), document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n","import * as Firebase from 'firebase';\r\nimport Moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport { Cycle, ISummary, IRecordData, IResponse, ISummaryParams } from './type';\r\n\r\n\r\n// TODO: Basic\r\nconst STORAGE_KEY = 'CASH_MAP_KEY';\r\n\r\nconst RecordRef = Firebase.initializeApp({\r\n  apiKey      : 'AIzaSyC8rTJofdQg0Y1k2-Zjav-ASVbSg0fziOg',\r\n  authDomain  : 'cashmap-cdce1.firebaseapp.com',\r\n  databaseURL : 'https://cashmap-cdce1.firebaseio.com/'\r\n}).database().ref((() => {\r\n  if (!localStorage.getItem(STORAGE_KEY))\r\n    localStorage.setItem(STORAGE_KEY, uuidv4());\r\n\r\n  return localStorage.getItem(STORAGE_KEY) || '';\r\n})());\r\n\r\nconst getAvgAmount = (sumcycle: Cycle, { cycle = 'month', amount = 0 }: IRecordData): number => {\r\n  const daysInMonth = Moment(new Date()).daysInMonth();\r\n  const daysInYear  = Moment(`${ new Date().getFullYear() }/12/31`, 'YYYY/MM/DD').dayOfYear();\r\n\r\n  switch (sumcycle) {\r\n    case 'day': switch (cycle) {\r\n      case 'month' : return Math.floor(amount / daysInMonth);\r\n      case 'year'  : return Math.floor(amount / daysInYear);\r\n    }\r\n    break;\r\n    case 'month': switch (cycle) {\r\n      case 'day'  : return amount * daysInMonth;\r\n      case 'year' : return Math.floor(amount / 12);\r\n    }\r\n    break;\r\n    case 'year': switch (cycle) {\r\n      case 'day'   : return amount * daysInYear;\r\n      case 'month' : return amount * 12;\r\n    }\r\n    break;\r\n  }\r\n  return amount;\r\n};\r\n\r\nconst getSum = ({ cycle, ignore = false, list = []}: ISummaryParams) =>\r\n  list.filter(record => ignore || 'actual' === record.status).reduce((summary: ISummary, record) => {\r\n    const amount = getAvgAmount(summary.cycle, record);\r\n\r\n    if ('once' === record.cycle)\r\n      summary.deposit += amount * ('expenses' === record.type ? -1 : 1);\r\n    else switch (record.type) {\r\n      case 'income'   : summary.income   += amount; break;\r\n      case 'expenses' : summary.expenses += amount; break;\r\n      case 'deposit'  :\r\n        summary.deposit += amount;\r\n        summary.income  -= amount;\r\n        break;\r\n    }\r\n    return { ...summary, applicable: summary.income - summary.expenses };\r\n  }, { cycle, income: 0, expenses: 0, deposit: 0, applicable: 0 });\r\n\r\n\r\n// TODO: Firebase Listeners\r\n// const RECORD_LIST: IRecordData[] = [];\r\n\r\n// RecordRef.on('child_added', snapshot => RECORD_LIST.push({ ...snapshot.val(), uid: snapshot.key || '' }));\r\n\r\n// RecordRef.on('child_changed', snapshot => RECORD_LIST.splice(\r\n//   RECORD_LIST.findIndex(({ uid }) => uid === snapshot.val().uid),\r\n//   1,\r\n//   snapshot.val()\r\n// ));\r\n\r\n// RecordRef.on('child_removed', snapshot => RECORD_LIST.splice(\r\n//   RECORD_LIST.findIndex(({ uid }) => uid === snapshot.val().uid),\r\n//   1\r\n// ));\r\n\r\n\r\n// TODO: Export Methods\r\nconst findByUID = (uid: string): Promise<IResponse<IRecordData>> => new Promise((resolve, reject) =>\r\n  RecordRef.child(uid).on('value', snapshot => snapshot.val() === null ? reject(\r\n    'DATA_NOT_FOUND'\r\n  ) : resolve({\r\n    status  : 200,\r\n    content : { ...snapshot.val(), uid }\r\n  })));\r\n\r\nconst getList = (params: any = {}): Promise<IResponse<IRecordData[]>> => new Promise(resolve => \r\n  RecordRef.on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : Object.keys(snapshot.val() || {}).map(uid => ({ ...snapshot.val()[uid], uid })).filter(record =>\r\n      Object.keys(params).length === Object.keys(params).filter(param =>\r\n        !params[param] || record[param] === params[param]  \r\n      ).length\r\n    )\r\n  }))\r\n);\r\n\r\nconst getGroups = (): Promise<IResponse<string[]>> => new Promise(resolve =>\r\n  RecordRef.on('value', snapshot => resolve({\r\n    status  : 200,\r\n    content : Object.keys(snapshot.val() || {})\r\n      .map(uid => snapshot.val()[uid])\r\n      .filter(({ group }) => !!group)\r\n      .map(({ group }) => group)\r\n  }))\r\n);\r\n\r\nconst getSummary = ({ cycle, ignore, list }: ISummaryParams): Promise<IResponse<ISummary>> | ISummary =>\r\n  list ? getSum({ cycle, ignore, list }) : new Promise(resolve =>\r\n    RecordRef.on('value', snapshot => resolve({\r\n      status  : 200,\r\n      content : getSum({\r\n        cycle,\r\n        ignore,\r\n        list: Object.keys(snapshot.val() || {}).map(uid => snapshot.val()[uid])\r\n      })\r\n    }))\r\n  );\r\n\r\nconst doAdd = (record: IRecordData): Promise<IResponse<boolean>> => {\r\n  delete record.uid;\r\n\r\n  return RecordRef.push(record).then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n};\r\n\r\nconst doUpdate = (record: IRecordData): Promise<IResponse<boolean>> => {\r\n  const uid = record.uid || '';\r\n\r\n  delete record.uid;\r\n\r\n  return RecordRef.child(uid).update(record).then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n};\r\n\r\nconst doRemove = (record: IRecordData): Promise<IResponse<boolean>> =>\r\n  RecordRef.child(record.uid || '').remove().then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n\r\nconst doClear = (): Promise<IResponse<boolean>> =>\r\n  RecordRef.remove().then(() => ({\r\n    status  : 200,\r\n    content : true\r\n  }));\r\n\r\nconst doDuplicate = (records: IRecordData[]) => new Promise<IResponse<boolean>>(resolve => {\r\n  let count = 0;\r\n\r\n  records.forEach(record => {\r\n    delete record.uid;\r\n\r\n    RecordRef.push(record).then(() => {\r\n      count++;\r\n\r\n      if (count === records.length) resolve({\r\n        status  : 200,\r\n        content : true\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\nexport default {\r\n  findByUID,\r\n  getList,\r\n  getGroups,\r\n  getSummary,\r\n\r\n  doAdd,\r\n  doUpdate,\r\n  doRemove,\r\n  doClear,\r\n  doDuplicate\r\n};\r\n","import { Reducer } from 'react';\r\n\r\nimport FirebaseRecord from './firebase';\r\n\r\nimport {\r\n  ISummary,\r\n  IStoreState,\r\n  IStoreAction,\r\n  IDispatchState,\r\n  IDispatchAction,\r\n  IRecordData,\r\n  IResponse,\r\n  Cycle\r\n} from './type';\r\n\r\n\r\n// TODO: Functions\r\nconst emptyFn = () => {};\r\n\r\nconst toList = (list: {[ groupName: string ]: IRecordData[]; }): IRecordData[] =>\r\n  Object.keys(list).reduce(($list: IRecordData[], groupName: string) => [\r\n    ...$list,\r\n    ...list[ groupName ]\r\n  ], []);\r\n\r\nconst toGroup = (list: IRecordData[]): {[ groupName: string ]: IRecordData[]; } =>\r\n  list.sort(({ group: g1 = '' }, { group: g2 = '' }) =>\r\n    !g1 ? 1 : !g2 ? -1 : g1 > g2 ? 1 : g1 < g2 ? -1 : 0\r\n  ).reduce((map: {[ groupName: string ]: IRecordData[]; }, record) => ({\r\n    ...map,\r\n    [ record.group || 'UNGROUP' ]: [ ...map[ record.group || 'UNGROUP' ] || [], record ]\r\n  }), {});\r\n\r\nconst doReload = (cycle: Cycle, params: IRecordData, { status, content }: IResponse<boolean>) => new Promise<{\r\n  list    : IRecordData[];\r\n  group   : string[];\r\n  summary : ISummary;\r\n}>((resolve, reject) => {\r\n  if (status !== 200 || !content) reject(\r\n    'Error Request.'\r\n  );\r\n\r\n  FirebaseRecord.getList(params)\r\n    .then(({ content: list }) => FirebaseRecord.getGroups()\r\n      .then(({ content: group }) => (FirebaseRecord.getSummary({ cycle }) as Promise<IResponse<ISummary>>)\r\n        .then(({ content: summary }) => resolve({ list, group, summary }))\r\n      )\r\n    );\r\n});\r\n\r\n\r\n// TODO: Reducers\r\nexport const StateStore: Reducer<IStoreState, IStoreAction> = (state, {\r\n  data,\r\n  group   = state.group,\r\n  summary = state.summary,\r\n  list    = toList(state.list)\r\n}) => ({\r\n  group,\r\n  summary,\r\n  data : data === true ? state.data : data,\r\n  list : toGroup(list)\r\n});\r\n\r\nexport const DispatchStore: Reducer<IDispatchState, IDispatchAction> = (state, {\r\n  action,\r\n  params: $params = {},\r\n  success = emptyFn,\r\n  fail    = emptyFn\r\n}) => {\r\n  const { dispatch, params, cycle } = state;\r\n\r\n  switch (action) {\r\n    case 'SUMMARY':\r\n      (FirebaseRecord.getSummary({ cycle: ($params.cycle || cycle) as Cycle }) as Promise<IResponse<ISummary>>)\r\n        .then(({ content }) => dispatch({ summary: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      return { dispatch, params, cycle: ($params.cycle || cycle) as Cycle };\r\n\r\n    case 'LIST':\r\n      FirebaseRecord.getList($params)\r\n        .then(({ content }) => dispatch({ list: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      return { dispatch, cycle, params: $params };\r\n\r\n    case 'FIND':\r\n      FirebaseRecord.findByUID($params.uid || '')\r\n        .then(({ content }) => dispatch({ data: !content ? true : content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'GROUP':\r\n      FirebaseRecord.getGroups()\r\n        .then(({ content }) => dispatch({ group: content }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'CREATE':\r\n      FirebaseRecord.doAdd($params)\r\n        .then(res => doReload(cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'UPDATE':\r\n      FirebaseRecord.doUpdate($params)\r\n        .then(res => doReload(cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n    break;\r\n\r\n    case 'REMOVE':\r\n      FirebaseRecord.doRemove($params)\r\n        .then(res => doReload(cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'CLEAR':\r\n      FirebaseRecord.doClear()\r\n        .then(() => dispatch({\r\n          list    : [],\r\n          group   : [],\r\n          summary : { cycle, income: 0, expenses: 0, deposit: 0, applicable: 0 }\r\n        }))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n\r\n    case 'DUPLICATE':\r\n      FirebaseRecord.doDuplicate(JSON.parse(localStorage.getItem('CM_RECORDS') || '[]'))\r\n        .then(res => doReload(cycle, params, res)\r\n          .then(({ list, group, summary }) => dispatch({ list, group, summary }))\r\n          .then(() => localStorage.removeItem('CM_RECORDS'))\r\n          .then(() => success(params))\r\n        )\r\n        .catch(e => fail(e, params));\r\n\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\nimport Moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\nconst DATE_FROMAT: string = 'YYYY/MM';\r\n\r\n// TODO: Basic Types\r\nexport type Cycle = 'day' | 'month' | 'year';\r\n\r\nexport interface ISummary { cycle: Cycle; income: number; expenses: number; deposit: number; applicable: number; }\r\n\r\nexport interface IRecordData {\r\n  uid    ?: string;    desc    ?: string;\r\n  type   ?: string;    status  ?: string;\r\n  cycle  ?: string;    validFm ?: string;\r\n  amount ?: number;    validTo ?: string;\r\n  group  ?: string;\r\n}\r\n\r\nexport interface IResponse<T> { status: number; content: T; message?: string; }\r\n\r\nexport interface ISummaryParams { cycle: Cycle; ignore?: boolean; list?: IRecordData[]; }\r\n\r\nexport class RecordModel {\r\n  private $uid     !: string;\r\n  private $desc    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $type    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $status  !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $cycle   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $group   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validFm !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validTo !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $amount  !: [ number, Dispatch<SetStateAction<number>> ];\r\n\r\n  constructor({\r\n    uid     = uuidv4() , desc    = '' , \r\n    type    = 'income' , status  = 'expected',\r\n    cycle   = 'month'  , validFm = Moment(new Date()).format(DATE_FROMAT),\r\n    validTo = ''       , group   = '',\r\n    amount  = 0\r\n  }: IRecordData = {}) {\r\n    this.$uid     = uid;                  this.$desc    = useState(desc);\r\n    this.$type    = useState(type);       this.$status  = useState(status);\r\n    this.$cycle   = useState(cycle);      this.$validFm = useState(validFm);\r\n    this.$validTo = useState(validTo);    this.$amount  = useState(amount);\r\n    this.$group   = useState(group);\r\n  }\r\n\r\n  get uid(): string { return this.$uid; }\r\n  \r\n  get desc(): string { return this.$desc[0]; }\r\n  set desc(value: string) { this.$desc[1](value); }\r\n\r\n  get type(): string { return this.$type[0]; }               get status(): string { return this.$status[0]; }\r\n  set type(value: string) { this.$type[1](value); }          set status(value: string) { this.$status[1](value); }\r\n\r\n  get cycle(): string { return this.$cycle[0]; }             get validFm(): string { return this.$validFm[0]; }\r\n  set cycle(value: string) { this.$cycle[1](value); }        set validFm(value: string) { this.$validFm[1](value); }\r\n\r\n  get validTo(): string { return this.$validTo[0]; }         get amount(): number { return this.$amount[0]; }\r\n  set validTo(value: string) { this.$validTo[1](value); }    set amount(value: number) { this.$amount[1](value); }\r\n\r\n  get group(): string { return this.$group[0]; }\r\n  set group(value: string) { this.$group[1](value); }\r\n\r\n  get vdateFm(): Date | null { return this.validFm ? Moment(this.validFm + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateFm(value: Date | null) { this.validFm = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get vdateTo(): Date | null { return this.validTo ? Moment(this.validTo + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateTo(value: Date | null) { this.validTo = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get amountStr(): string { return this.amount ? this.amount.toString() : ''; }\r\n  set amountStr(value: string) {\r\n    const amt = parseFloat(value);\r\n\r\n    this.amount = !isNaN(amt) ? amt : 0;\r\n  }\r\n\r\n  getJSON(showID: boolean = true): IRecordData {\r\n    return {\r\n      desc   : this.desc   , status  : this.status  ,\r\n      type   : this.type   , validFm : this.validFm ,\r\n      cycle  : this.cycle  , validTo : this.validTo ,\r\n      group  : this.group  ,\r\n      amount : this.amount , ...( showID ? { uid: this.uid } : {})\r\n    };\r\n  }\r\n\r\n  reset(): void {\r\n    this.$uid   = uuidv4();    this.desc    = '';\r\n    this.type   = 'income';    this.status  = 'actual';\r\n    this.cycle  = 'month';     this.validFm = Moment(new Date()).format(DATE_FROMAT);\r\n    this.amount = 0;           this.validTo = '';\r\n    this.group  = '';\r\n  }\r\n}\r\n\r\n\r\n// TODO: Reducer Types\r\nexport interface IDispatchState {\r\n  params   : IRecordData;\r\n  cycle    : 'day' | 'month' | 'year';\r\n  dispatch : Dispatch<IStoreAction>;\r\n}\r\n\r\nexport interface IDispatchAction {\r\n  action   : 'LIST' | 'FIND' | 'GROUP' | 'CREATE' | 'UPDATE' | 'REMOVE' | 'CLEAR' | 'SUMMARY' | 'DUPLICATE';\r\n  params  ?: IRecordData;\r\n  success ?: (params: IRecordData) => void;\r\n  fail    ?: (e: Error, params?: IRecordData) => void;\r\n}\r\n\r\nexport interface IStoreAction {\r\n  data    ?: IRecordData | true;\r\n  summary ?: ISummary;\r\n  group   ?: string[];\r\n  list    ?: IRecordData[];\r\n}\r\n\r\nexport interface IStoreState {\r\n  data    ?: IRecordData;\r\n  summary  : ISummary;\r\n  group    : string[];\r\n  list     : {[ groupName: string ]: IRecordData[]; };\r\n}\r\n","import React, { FC, ReactNode, Dispatch, createContext, useReducer, useContext } from 'react';\r\n\r\nimport { StateStore, DispatchStore } from './reducer';\r\nimport FirebaseRecord from './firebase';\r\n\r\nimport {\r\n  Cycle,\r\n  ISummary,\r\n  IDispatchAction,\r\n  IStoreState,\r\n  IStoreAction,\r\n  IRecordData,\r\n  RecordModel\r\n} from './type';\r\n\r\n\r\n// TODO: Variables\r\nconst STORE_DISPATCH = Symbol('STORE_DISPATCH');\r\nconst DEFAULT_STATE: IStoreState = {\r\n  list    : {},\r\n  group   : [],\r\n  summary : {\r\n    cycle      : 'month',\r\n    income     : 0,\r\n    expenses   : 0,\r\n    deposit    : 0,\r\n    applicable : 0\r\n  }\r\n};\r\n\r\n// TODO: Export Basic\r\nexport type Cycle = Cycle;\r\nexport type ISummary = ISummary;\r\nexport type IRecordData = IRecordData;\r\nexport { RecordModel };\r\n\r\ninterface IRecordContext extends IStoreState {\r\n  dispatch           : Dispatch<IDispatchAction>;\r\n  [ STORE_DISPATCH ] : Dispatch<IStoreAction>;\r\n}\r\n\r\n\r\n// TODO: Context Components\r\nexport const getSummary = FirebaseRecord.getSummary;\r\nexport const useRecord = () => useContext(RecordContext);\r\n\r\nconst RecordContext = createContext<IRecordContext>({\r\n  ...DEFAULT_STATE,\r\n  dispatch: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst RecordStore: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [ store, $dispatch ] = useReducer(StateStore, DEFAULT_STATE);\r\n  const dispatch = useReducer(DispatchStore, { params: {}, cycle: 'month', dispatch: $dispatch });\r\n\r\n  return (\r\n    <RecordContext.Provider value={{ ...store, dispatch: dispatch[1], [ STORE_DISPATCH ]: $dispatch }}>\r\n      { children }\r\n    </RecordContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecordStore;\r\n"],"sourceRoot":""}