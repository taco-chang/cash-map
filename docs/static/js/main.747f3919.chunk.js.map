{"version":3,"sources":["components/grid/grid.types.ts","components/grid/index.tsx","services/loading.tsx","services/message.tsx","services/store/record/request.ts","services/store/record/index.tsx","components/editor/CycleDropdown.tsx","components/editor/TypeDropdown.tsx","assets/imgs/404.svg","assets/imgs/cash-logo.svg","assets/i18n lazy /^/.*/.json$/ groupOptions: {} namespace object","services/i18n.tsx","components/form/index.tsx","components/AmountSlidebar.tsx","components/App.tsx","services/router.tsx","components/MainHeader.tsx","serviceWorker.ts","index.tsx"],"names":["COLUMN","getColumnOptions","options","fn","opts","Object","def","keys","forEach","size","getSpacingClass","kind","cls","bssize","value","push","getBootstrapClass","start","end","on","$value","filter","join","toClassString","i","arr","indexOf","getColClass","width","offset","order","reduce","option","WIDTH","OFFSET","ORDER","getBsClasses","display","className","margin","padding","border","rounded","colors","hidden","isMgSpacing","prop","length","isPdSpacing","getBorderClass","getRoundedClass","target","getColorClass","hiddenOn","Array","isArray","breakpoint","splice","getDisplayClass","BsContainer","props","tagName","children","createElement","BsRow","gutters","alignable","align","BsCol","useLoading","useContext","Context","createContext","isLoading","Loading","LoadingMask","useState","show","callbackFn","useEffect","Function","Provider","BTN","STORE_DISPATCH","Symbol","useMessage","messageStore","state","btns","type","text","code","CONFIRM","icon","CANCEL","clearTimeout","timeout","handler","setMessage","dispatch","uid","uuidv4","undefined","window","setTimeout","Message","MessageBox","useReducer","storeDispatch","$do","onClickMask","$","modal","remove","useCallback","e","parents","preventDefault","stopPropagation","useEvents","id","onClick","toLowerCase","title","content","map","btn","key","getRecords","JSON","parse","localStorage","getItem","setRecords","records","setItem","stringify","getList","status","Promise","resolve","data","DATE_FROMAT","REFRESH_DISPATCH","REFRESH_STATE","DEFAULT_STATE","allData","list","sumcycle","summary","income","expenses","deposit","applicable","RecordModel","desc","cycle","validFm","Moment","Date","format","validTo","amount","$uid","$desc","$type","$status","$cycle","$validFm","$validTo","$amount","this","showID","toDate","toString","amt","parseFloat","isNaN","useRecord","getAvgAmount","daysInMonth","daysInYear","getFullYear","dayOfYear","Math","floor","recordStore","override","all","res","record","doReducer","action","params","success","fail","doReload","then","reject","Error","catch","findIndex","updateRecord","findByID","store","RecordStore","CycleDropdown","onChange","disableOnce","intl","useIntl","messages","CYCLE_ONCE","CYCLE_DAY","CYCLE_MONTH","CYCLE_YEAR","TypeDropdown","disableDeposit","INCOME","EXPENSES","DEPOSIT","module","exports","webpackAsyncContext","req","__webpack_require__","o","ids","t","LANG","defintl","locale","default","reducer","EN","ZH","navigator","language","substring","setLang","I18n","setMessages","promise","hasMessages","msg","useMemo","DEFAULT","BsInlineGroup","label","labelWidth","style","AmountSlidebar","onSlide","turnon","doRemove","message","to","Numeral","toUpperCase","min","max","SummaryDashboard","onCycleChange","expanded","setExpanded","doCollapse","SUMMARY","sm","APPLICABLE","App","setFilter","onFilterChange","doClear","y","lg","b","APPEND_RECORD","ALL_OPTION","CLEAR","Loadable","loader","loading","Route","component","setState","Component","router","path","exact","goBack","history","back","md","src","error404","alt","asEnglish","asChinese","MainHeader","dropdown","useRef","Logo","ref","data-toggle","Boolean","location","hostname","match","ReactDOM","render","routers","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.747f3919.chunk.js","sourcesContent":["import { ReactNode } from 'react';\r\n\r\n\r\n// TODO: Basic Types\r\ntype Breakpoint = 'sm' | 'md' | 'lg' | 'xl';\r\n\r\ntype BsSize = '' | Breakpoint;\r\ntype BsBreakpoint = 'def' | Breakpoint;\r\ntype BsSpacing5 = 1 | 2 | 3 | 4 | 5;\r\n\r\ntype BsColor = 'primary' | 'secondary' | 'success' | 'danger'\r\n  | 'warning' | 'info' | 'light' | 'dark' | 'white';\r\n\r\ntype BsDisplay = 'inline' | 'inline-block' | 'inline-flex'\r\n  | 'block' | 'flex' | 'table' | 'table-row' | 'table-cell';\r\n\r\n\r\n// TODO: Configures Types\r\nenum COLUMN { WIDTH, OFFSET, ORDER }\r\n\r\ntype BsCol12 = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\ntype Width = 'auto' | BsCol12;\r\ntype Order = 'first' | 'last' | BsCol12;\r\n\r\ntype BsColors = false | { border?: BsColor; text?: BsColor; bg?: BsColor; };\r\ntype BsHidden = false | BsBreakpoint | BsBreakpoint[];\r\ntype BsBorder = boolean | { t?: true;  l?: true; b?: true;  r?: true; };\r\ntype BsRounded = boolean | { size?: 'sm' | 'lg'; type?: 'top' | 'bottom' | 'left' | 'right' | 'circle' | 'pill'; };\r\n\r\ntype BsMargin = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5 | 'auto';\r\n  b?: BsSpacing5;  r?: BsSpacing5 | 'auto';\r\n  y?: BsSpacing5;  x?: BsSpacing5 | 'auto';\r\n};\r\n\r\ntype BsPadding = false | BsSpacing5 | {\r\n  t?: BsSpacing5;  l?: BsSpacing5;\r\n  b?: BsSpacing5;  r?: BsSpacing5;\r\n  y?: BsSpacing5;  x?: BsSpacing5;\r\n};\r\n\r\ninterface IBreakpoint<T> { def?: T; sm?: false | T; md?: false | T; lg?: false | T; xl?: false | T; }\r\n\r\nexport interface IRowProps extends IBsgridProps {\r\n  align?: false | 'start' | 'center' | 'end' | 'around' | 'between';\r\n  alignable?: BsSize;\r\n  gutters?: boolean;\r\n}\r\n\r\nexport interface IColProps extends IBsgridProps {\r\n  width?: Width | IBreakpoint<Width>;\r\n  offset?: false | BsCol12 | IBreakpoint<BsCol12>;\r\n  order?: false | Order | IBreakpoint<Order>;\r\n}\r\n\r\n\r\n// TODO: Generate Class Function\r\nfunction getColumnOptions<T>(options: T | false, fn: (bssize: BsSize, opts: T) => void): void {\r\n  const opts: IBreakpoint<T> = (options instanceof Object ? options : { def: options }) as IBreakpoint<T>;\r\n\r\n  Object.keys(opts).forEach((size: string) => (opts as any)[size] === false ? null : fn(\r\n    ('def' === size ? '' : size) as BsSize,\r\n    (opts as any)[size]\r\n  ));\r\n}\r\n\r\nfunction getSpacingClass(kind: 'm' | 'p', options: any): string[] {\r\n  const cls: string[] = [];\r\n\r\n  Object.keys(options).forEach((size: string) => {\r\n    const bssize = 'def' === size ? '' : size;\r\n    const value = options[size];\r\n\r\n    if (value !== false) {\r\n      if ('number' === typeof value)\r\n        cls.push(getBootstrapClass(bssize as BsSize, { start: kind, end: value }));\r\n      else Object.keys(value).forEach((on: string) => {\r\n        const $value = value[on] || '';\r\n\r\n        if ($value)\r\n          cls.push(getBootstrapClass(bssize as BsSize, { start: `${kind}${on}`, end: $value }));\r\n      });\r\n    }\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getBorderClass(options: BsBorder): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('border');\r\n    else Object.keys(options).forEach((on: string) => {\r\n      switch (on) {\r\n        case 't': cls.push('border-top'); break;\r\n        case 'b': cls.push('border-bottom'); break;\r\n        case 'l': cls.push('border-left'); break;\r\n        case 'r': cls.push('border-right'); break;\r\n      }\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getRoundedClass(options: BsRounded): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) {\r\n    if (options === true)\r\n      cls.push('rounded');\r\n    else Object.keys(options).forEach((prop: string) => {\r\n      const { [prop]: value } = options as any;\r\n\r\n      if (value)\r\n        cls.push(`rounded-${value}`);\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nfunction getColorClass(options: BsColors): string[] {\r\n  const cls: string[] = [];\r\n\r\n  if (options !== false) Object.keys(options).forEach((target: string) => {\r\n    const { [target]: value } = options as any;\r\n\r\n    if (value)\r\n      cls.push('border' === target ? `border-${value}` : `${target}-${value}`);\r\n  });\r\n  return cls;\r\n}\r\n\r\nfunction getDisplayClass(display: BsDisplay, options: BsHidden): string[] {\r\n  const cls: string[] = [`d-${display}`];\r\n\r\n  if (options !== false) {\r\n    const hiddenOn: BsBreakpoint[] = Array.isArray(options) ? options : [options];\r\n\r\n    ['def', 'sm', 'md', 'lg', 'xl'].filter((breakpoint: string) =>\r\n      hiddenOn.indexOf(breakpoint as BsBreakpoint) >= 0\r\n    ).forEach((breakpoint: string) => {\r\n      const size: BsSize = 'def' === breakpoint ? '' : (breakpoint as BsSize);\r\n\r\n      cls.splice(cls.indexOf(getBootstrapClass(size, { start: 'd', end: display })), 1);\r\n      cls.push(getBootstrapClass(size, { start: 'd', end: 'none' }));\r\n    });\r\n  }\r\n  return cls;\r\n}\r\n\r\nexport function getBootstrapClass(\r\n  size: BsSize,\r\n  { start = '', end = '' }: { start?: string | number, end?: string | number } = {}\r\n): string {\r\n  return [start, size, end].filter((value: string | number) => !(!value)).join('-');\r\n};\r\n\r\nexport function toClassString(cls: string[]): string {\r\n  return cls.filter((value: string, i: number, arr: string[]) =>\r\n    !(!value) && arr.indexOf(value) === i\r\n  ).join(' ');\r\n}\r\n\r\nexport function getColClass({ width = 'auto', offset = false, order = false }: IColProps): string[] {\r\n  return [ width, offset, order ].reduce((cls: string[], option: any, i: number): string[] => {\r\n    switch (i) {\r\n      case COLUMN.WIDTH: getColumnOptions<Width>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'col', end: 'auto' === opts ? '' : opts }))\r\n      ); break;\r\n      case COLUMN.OFFSET: getColumnOptions<BsCol12>(option, (size, opts) =>\r\n        cls.push(getBootstrapClass(size, { start: 'offset', end: opts }))\r\n      ); break;\r\n      case COLUMN.ORDER: getColumnOptions<Order>(option, (size, opts) =>\r\n      cls.push(getBootstrapClass(size, { start: 'order', end: opts }))\r\n    ); break;\r\n    }\r\n    return [ ...cls ];\r\n  }, []);\r\n}\r\n\r\nexport function getBsClasses(display: BsDisplay, {\r\n  className = '',\r\n  margin = false,\r\n  padding = false,\r\n  border = false,\r\n  rounded = false,\r\n  colors = false,\r\n  hidden = false\r\n}: IBsgridProps): string[] {\r\n  const isMgSpacing = Object.keys(margin).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n  const isPdSpacing = Object.keys(padding).filter(prop => [ 'def', 'sm', 'md', 'lg', 'xl' ].indexOf(prop) >= 0).length > 0;\r\n\r\n  return [\r\n    className,\r\n    ...getSpacingClass('m', !isMgSpacing ? { def: margin } : margin),\r\n    ...getSpacingClass('p', !isPdSpacing ? { def: padding } : padding),\r\n    ...getBorderClass(border),\r\n    ...getRoundedClass(rounded),\r\n    ...getColorClass(colors),\r\n    ...getDisplayClass(display, hidden)\r\n  ];\r\n};\r\n\r\nexport default interface IBsgridProps {\r\n  tagName?: string;\r\n  className?: string;\r\n\r\n  margin?: BsMargin | IBreakpoint<BsMargin>;\r\n  padding?: BsPadding | IBreakpoint<BsPadding>;\r\n  border?: BsBorder;\r\n  rounded?: BsRounded;\r\n  colors?: BsColors;\r\n  hidden?: BsHidden;\r\n\r\n  children?: ReactNode;\r\n}","import { FC, createElement } from 'react';\r\n\r\nimport IBsgridProps, {\r\n  IRowProps,\r\n  IColProps,\r\n  toClassString,\r\n  getBsClasses,\r\n  getColClass,\r\n  getBootstrapClass\r\n} from './grid.types';\r\n\r\n\r\n// TODO: Components\r\nexport const BsContainer: FC<IBsgridProps> = (props: IBsgridProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([ 'container', ...getBsClasses('block', props) ])\r\n  }, children);\r\n};\r\n\r\nexport const BsRow: FC<IRowProps> = (props: IRowProps) => {\r\n  const { tagName = 'div', children, gutters = true, alignable = '', align = false } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'row',\r\n      gutters ? '' : 'no-gutters',\r\n      align === false ? '' : `justify-content-${getBootstrapClass(alignable, { end: align })}`,\r\n      ...getBsClasses('flex', props)\r\n    ])\r\n  }, children);\r\n};\r\n\r\nexport const BsCol: FC<IColProps> = (props: IColProps) => {\r\n  const { tagName = 'div', children } = props;\r\n\r\n  return createElement(tagName, {\r\n    className: toClassString([\r\n      'col',\r\n      ...getColClass(props),\r\n      ...getBsClasses('block', props)\r\n    ])\r\n  }, children);\r\n}\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  Dispatch,\r\n  SetStateAction,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect\r\n} from 'react';\r\n\r\n\r\n// TODO: Types\r\ninterface IState { show: boolean; callbackFn?: () => void; }\r\ninterface IContext { isLoading: boolean; Loading: Dispatch<SetStateAction<IState>> }\r\n\r\n// TODO: Variables\r\nconst useLoading = () => useContext(Context);\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ isLoading: false, Loading: () => {} });\r\n\r\nconst LoadingMask: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ show: isLoading, callbackFn }, Loading ] = useState<IState>({ show: false });\r\n\r\n  useEffect(() => {\r\n    if (callbackFn instanceof Function)\r\n      callbackFn();\r\n  }, [ callbackFn ]);\r\n\r\n  return (\r\n    <Context.Provider value={{ isLoading, Loading }}>\r\n      { !isLoading ? null : (\r\n        <div className=\"loading-mask\" />\r\n      )}\r\n\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadingMask;\r\nexport { useLoading };\r\n","import React, {\r\n  FC,\r\n  Dispatch,\r\n  Reducer,\r\n  ReactNode,\r\n  MouseEvent,\r\n  createContext,\r\n  useEffect,\r\n  useContext,\r\n  useReducer,\r\n  useCallback\r\n} from 'react';\r\n\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n// TODO: Types\r\nconst STORE_DISPATCH = Symbol('DISPATCH');\r\n\r\nexport enum BTN { CONFIRM, CANCEL }\r\n\r\ninterface IStoreState { options?: IMessageState; }\r\n\r\ninterface IContext {\r\n  options?: IMessageOptions;\r\n  Message: Dispatch<IMessageOptions | BTN>;\r\n  [ STORE_DISPATCH ]: Dispatch<IMessageOptions | BTN>;\r\n}\r\n\r\ninterface IMessageOptions {\r\n  type: 'INFO' | 'WARNING' | 'DANGER' | 'CONFIRM';\r\n  uid?: string;\r\n  title?: string;\r\n  icon?: string;\r\n  content: string;\r\n  timeout?: number;\r\n  handler?: (btn: BTN) => any;\r\n}\r\n\r\ninterface IMessageState extends IMessageOptions {\r\n  btns: ({\r\n    text: string;\r\n    code: BTN;\r\n    icon?: string;\r\n  })[];\r\n}\r\n\r\n// TODO: Hooks\r\nconst useMessage = () => useContext(Context);\r\n\r\nconst useEvents = (options?: IMessageState) => {\r\n  useEffect(() => {\r\n    if (options)\r\n      $(`#${ options.uid }`).modal('show');\r\n    else\r\n      $('div.modal-backdrop').remove();\r\n  }, [ options ]);\r\n\r\n  return {\r\n    onClickMask: useCallback((e: MouseEvent) => {\r\n      if ($(e.target).parents('div.alert').length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    }, [])\r\n  };\r\n};\r\n\r\n// TODO: Reducer\r\nconst messageStore: Reducer<IStoreState, IMessageOptions | BTN> = (state, options) => {\r\n  switch (typeof options) {\r\n    case 'object': return {\r\n      options: {\r\n        ...options,\r\n        btns: 'CONFIRM' !== options.type ? [\r\n          { text: 'CHECK_IT', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ] : [\r\n          { text: 'CANCEL', code: BTN.CANCEL, icon: 'fa fa-ban' },\r\n          { text: 'CONFIRM', code: BTN.CONFIRM, icon: 'fa fa-check' }\r\n        ]\r\n      }\r\n    };\r\n    case 'number':\r\n      if (state.options) {\r\n        clearTimeout(state.options.timeout);\r\n\r\n        if (state.options.handler instanceof Function) state.options.handler(\r\n          options\r\n        );\r\n      }\r\n      return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nconst setMessage: Reducer<Dispatch<IMessageOptions | BTN>, IMessageOptions | BTN> = (dispatch, options) => {\r\n  switch (typeof options) {\r\n    case 'number':\r\n      dispatch(options);\r\n      break;\r\n\r\n    case 'object':\r\n      const { type, timeout = null } = options;\r\n\r\n      dispatch({\r\n        ...options,\r\n        uid     : uuidv4(),\r\n        timeout : 'CONFIRM' === type ? undefined : window.setTimeout(\r\n          () => dispatch(BTN.CANCEL),\r\n          !timeout ? 2000 : timeout\r\n        )\r\n      });\r\n      break;\r\n  }\r\n  return dispatch;\r\n};\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({\r\n  Message: () => {},\r\n  [ STORE_DISPATCH ]: () => {}\r\n});\r\n\r\nconst MessageBox: FC<{ children?: ReactNode }> = ({ children }) => {\r\n  const [{ options }, storeDispatch ] = useReducer(messageStore, {});\r\n  const $do = useReducer(setMessage, storeDispatch);\r\n  const { onClickMask } = useEvents(options);\r\n\r\n  return (\r\n    <Context.Provider value={{ options, Message: $do[1], [ STORE_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n\r\n      { !options ? null : (\r\n        <div className=\"modal message-modal\" id={ options.uid } onClick={ onClickMask }>\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className={ `alert alert-${ 'CONFIRM' === options.type ? 'primary' : options.type.toLowerCase() }` }>\r\n                <div className=\"media\">\r\n                  { !options.icon ? null : <i className={ `mr-3 ${options.icon}` } /> }\r\n\r\n                  <div className=\"media-body\">\r\n                    { !options.title ? null : (\r\n                      <h5 className=\"mt-0\">\r\n                        <Fmsg tagName=\"strong\" id={ options.title } />\r\n                      </h5>\r\n                    ) }\r\n\r\n                    <Fmsg tagName=\"p\" id={ options.content } />\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      { options.btns.map(btn => (\r\n                        <button key={ `btn-${ btn.code }` } type=\"button\" className={ `ml-1 btn btn-${\r\n                          BTN.CANCEL === btn.code ? 'secondary'\r\n                            : 'CONFIRM' === options.type ? 'primary'\r\n                              : options.type.toLowerCase()\r\n                        }`} onClick={ () => $do[1](btn.code) }>\r\n                          { !btn.icon ? null : <i className={ `mr-2 ${btn.icon}` } /> }\r\n                          <Fmsg id={ btn.text } />\r\n                        </button>\r\n                      )) }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageBox;\r\nexport { useMessage };\r\n","const getRecords = <T extends { uid?: string; }>(): T[] => JSON.parse(localStorage.getItem('CM_RECORDS') || '[]');\r\nconst setRecords = <T extends { uid?: string; }>(records: T[]): void => localStorage.setItem('CM_RECORDS', JSON.stringify(records));\r\n\r\ninterface IResponse<T> {\r\n  status: number;\r\n  content: T;\r\n  message?: string;\r\n}\r\n\r\nexport const findByID = <T extends { uid?: string; }>(id?: string) => new Promise<IResponse<T>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna get the specify record, must input index.')\r\n  );\r\n\r\n  resolve({\r\n    status: 200,\r\n    content: getRecords<T>().filter(({ uid }) => uid === id)[0]\r\n  });\r\n});\r\n\r\nexport const getList = <T extends { uid?: string; }>({ status, type }: { status?: string; type?: string; } = {}) => new Promise<IResponse<T[]>>(resolve => resolve({\r\n  status: 200,\r\n  content: getRecords<T>().filter(data =>\r\n    (!status || ((data as any).status === status)) && (!type || ((data as any).type === type))\r\n  )\r\n}));\r\n\r\nexport const createRecord = <T extends { uid?: string; }>(data: T) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!data.uid) reject(\r\n    new Error('Must have to specify a uid when create.')\r\n  );\r\n  const list = getRecords<T>();\r\n\r\n  setRecords<T>([ ...list, { ...data } ]);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const updateRecord = <T extends { uid?: string; }>(data: T, id?: string) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna update the specify record, must input index.')\r\n  );  \r\n  const list = getRecords<T>();\r\n\r\n  list.splice(list.findIndex(({ uid }) => uid === id), 1, data);\r\n  setRecords<T>(list);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const removeRecord = <T extends { uid?: string; }>(id?: string) => new Promise<IResponse<boolean>>((resolve, reject) => {\r\n  if (!id) reject(\r\n    new Error('If wanna remove the specify record, must input index.')\r\n  );  \r\n  const list = getRecords<T>();\r\n\r\n  list.splice(list.findIndex(({ uid }) => uid === id), 1);\r\n  setRecords<T>(list);\r\n  resolve({ status: 200, content: true });\r\n});\r\n\r\nexport const clearRecord = <T extends { uid?: string; }>() => new Promise<IResponse<boolean>>(resolve => {\r\n  setRecords<T>([]);\r\n  resolve({ status: 200, content: true });\r\n});\r\n","import React, { FC, Reducer, Dispatch, SetStateAction, ReactNode, createContext, useState, useContext, useReducer } from 'react';\r\nimport Moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport { findByID, getList, createRecord, updateRecord, removeRecord, clearRecord } from './request';\r\n\r\n\r\n// TODO: Types\r\nconst DATE_FROMAT: string = 'YYYY/MM';\r\nconst REFRESH_DISPATCH = Symbol('DISPATCH');\r\nconst REFRESH_STATE = Symbol('STATE');\r\n\r\nexport interface IRequestAction {\r\n  action   : 'ALL' | 'LIST' | 'FIND' | 'CREATE' | 'UPDATE' | 'REMOVE' | 'CLEAR' | 'SUMMARY';\r\n  params  ?: IRecordData;\r\n  success ?: (params: IRecordData) => void;\r\n  fail    ?: (e: Error, params?: IRecordData) => void;\r\n}\r\n\r\ninterface IStoreAction {\r\n  override?: boolean;\r\n  [ REFRESH_STATE ]: {\r\n    sumcycle ?: 'day' | 'month' | 'year';\r\n    summary  ?: ISummary;\r\n    allData  ?: { [ uid: string ]: IRecordData; };\r\n    target   ?: { list?: IRecordData[]; data?: IRecordData; };\r\n  };\r\n}\r\n\r\nconst DEFAULT_STATE: IStoreState = {\r\n  allData  : {},\r\n  target   : { list: [] },\r\n  sumcycle : 'month',\r\n  summary  : {\r\n    income     : 0,\r\n    expenses   : 0,\r\n    deposit    : 0,\r\n    applicable : 0\r\n  }\r\n};\r\n\r\nexport interface ISummary { income: number; expenses: number; deposit: number; applicable: number; }\r\n\r\nexport interface IRecordData {\r\n  uid     ?: string;     desc    ?: string;\r\n  type    ?: string;     status  ?: string;\r\n  cycle   ?: string;     validFm ?: string;\r\n  validTo ?: string;     amount  ?: number;\r\n  \r\n}\r\n\r\ninterface IStoreState {\r\n  sumcycle : 'day' | 'month' | 'year';\r\n  summary  : ISummary;\r\n  allData  : { [ uid: string ]: IRecordData; };\r\n  target   : { list: IRecordData[]; data?: IRecordData; };\r\n}\r\n\r\nexport class RecordModel {\r\n  private $uid       !: string;\r\n  private $desc      !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $type      !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $status    !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $cycle     !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validFm   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $validTo   !: [ string, Dispatch<SetStateAction<string>> ];\r\n  private $amount    !: [ number, Dispatch<SetStateAction<number>> ];\r\n\r\n  constructor({\r\n    uid       = uuidv4() , desc    = '' , \r\n    type      = 'income' , status  = 'expected',\r\n    cycle     = 'month'  , validFm = Moment(new Date()).format(DATE_FROMAT),\r\n    validTo   = ''       , amount  = 0\r\n  }: IRecordData = {}) {\r\n    this.$uid       = uid;                  this.$desc    = useState(desc);\r\n    this.$type      = useState(type);       this.$status  = useState(status);\r\n    this.$cycle     = useState(cycle);      this.$validFm = useState(validFm);\r\n    this.$validTo   = useState(validTo);    this.$amount  = useState(amount);\r\n  }\r\n\r\n  get uid(): string { return this.$uid; }\r\n  \r\n  get desc(): string { return this.$desc[0]; }\r\n  set desc(value: string) { this.$desc[1](value); }\r\n\r\n  get type(): string { return this.$type[0]; }               get status(): string { return this.$status[0]; }\r\n  set type(value: string) { this.$type[1](value); }          set status(value: string) { this.$status[1](value); }\r\n\r\n  get cycle(): string { return this.$cycle[0]; }             get validFm(): string { return this.$validFm[0]; }\r\n  set cycle(value: string) { this.$cycle[1](value); }        set validFm(value: string) { this.$validFm[1](value); }\r\n\r\n  get validTo(): string { return this.$validTo[0]; }         get amount(): number { return this.$amount[0]; }\r\n  set validTo(value: string) { this.$validTo[1](value); }    set amount(value: number) { this.$amount[1](value); }\r\n\r\n  get vdateFm(): Date | null { return this.validFm ? Moment(this.validFm + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateFm(value: Date | null) { this.validFm = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get vdateTo(): Date | null { return this.validTo ? Moment(this.validTo + '/01', 'YYYY/MM/DD').toDate() : null; }\r\n  set vdateTo(value: Date | null) { this.validTo = !value ? '' : Moment(value).format(DATE_FROMAT); }\r\n\r\n  get amountStr(): string { return this.amount ? this.amount.toString() : ''; }\r\n  set amountStr(value: string) {\r\n    const amt = parseFloat(value);\r\n\r\n    this.amount = !isNaN(amt) ? amt : 0;\r\n  }\r\n\r\n  getJSON(showID: boolean = true): IRecordData {\r\n    return {\r\n      desc   : this.desc   , status  : this.status  ,\r\n      type   : this.type   , validFm : this.validFm ,\r\n      cycle  : this.cycle  , validTo : this.validTo ,\r\n      amount : this.amount , ...( showID ? { uid: this.uid } : {})\r\n    };\r\n  }\r\n\r\n  reset(): void {\r\n    this.$uid   = uuidv4();    this.desc    = '';\r\n    this.type   = 'income';    this.status  = 'actual';\r\n    this.cycle  = 'month';     this.validFm = Moment(new Date()).format(DATE_FROMAT);\r\n    this.amount = 0;           this.validTo = '';\r\n  }\r\n}\r\n\r\n// TODO: Hooks & Functions\r\nconst useRecord = () => useContext(Context);\r\n\r\nconst getAvgAmount = (sumcycle: 'day' | 'month' | 'year', { cycle = 'month', amount = 0 }: IRecordData): number => {\r\n  const daysInMonth = Moment(new Date()).daysInMonth();\r\n  const daysInYear  = Moment(`${ new Date().getFullYear() }/12/31`, 'YYYY/MM/DD').dayOfYear();\r\n\r\n  switch (sumcycle) {\r\n    case 'day': switch (cycle) {\r\n      case 'month' : return Math.floor(amount / daysInMonth);\r\n      case 'year'  : return Math.floor(amount / daysInYear);\r\n    }\r\n    break;\r\n    case 'month': switch (cycle) {\r\n      case 'day'  : return amount * daysInMonth;\r\n      case 'year' : return Math.floor(amount / 12);\r\n    }\r\n    break;\r\n    case 'year': switch (cycle) {\r\n      case 'day'   : return amount * daysInYear;\r\n      case 'month' : return amount * 12;\r\n    }\r\n    break;\r\n  }\r\n  return amount;\r\n}\r\n\r\n// TODO: Reducers\r\nconst recordStore: Reducer<IStoreState, IStoreAction> = (state = DEFAULT_STATE, {\r\n  override = false,\r\n  [ REFRESH_STATE ]: {\r\n    sumcycle = state.sumcycle,\r\n    allData  = state.allData,\r\n    target   : { list = state.target.list, data } = state.target\r\n  }\r\n}) => {\r\n  const all = !override ? allData : list.reduce((res: {[ uid: string ]: IRecordData }, record) => ({\r\n    ...res,\r\n    [ record.uid || '' ]: record\r\n  }), allData);\r\n\r\n  return {\r\n    ...state, sumcycle,\r\n    allData : all,\r\n    target  : {\r\n      data,\r\n      list: list.filter(({ uid = '' }) => uid in all).map(\r\n        record => all[record.uid || ''] ? all[record.uid || ''] : record\r\n      )\r\n    },\r\n    summary: Object.keys(all)\r\n      .map(uid => all[uid])\r\n      .filter(record => 'actual' === record.status)\r\n      .reduce((summary: ISummary, record) => {\r\n        const amount = getAvgAmount(sumcycle, record);\r\n  \r\n        if ('once' === record.cycle)\r\n          summary.deposit += amount * ('expenses' === record.type ? -1 : 1);\r\n        else switch (record.type) {\r\n          case 'income'   : summary.income   += amount; break;\r\n          case 'expenses' : summary.expenses += amount; break;\r\n          case 'deposit'  :\r\n            summary.deposit += amount;\r\n            summary.income  -= amount;\r\n            break;\r\n        }\r\n        return { ...summary, applicable: summary.income - summary.expenses };\r\n      }, { income: 0, expenses: 0, deposit: 0, applicable: 0 })\r\n  };\r\n};\r\n\r\nconst doReducer: Reducer<Dispatch<IStoreAction>, IRequestAction> = (\r\n  dispatch,\r\n  { action, params = {}, success = () => {}, fail = () => {}}\r\n) => {\r\n  const doReload = () => getList<IRecordData>().then(({ content }) => dispatch({\r\n    [ REFRESH_STATE ]: {\r\n      target: { },\r\n      allData: content.reduce((res: {[ uid: string ]: IRecordData; }, record) => ({\r\n        ...res,\r\n        [ record.uid || '' ]: record\r\n      }), {})\r\n    }\r\n  }));\r\n\r\n  switch (action) {\r\n    case 'CREATE' : createRecord<IRecordData>(params)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n      break;\r\n    case 'UPDATE' : updateRecord<IRecordData>(params, params.uid)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n      break;\r\n    case 'REMOVE' : removeRecord<IRecordData>(params.uid)\r\n      .then(doReload)\r\n      .then(() => success(params))\r\n      .catch(e => fail(e, params));\r\n\r\n      break;\r\n    case 'CLEAR'  : clearRecord<IRecordData>()\r\n      .then(() => getList<IRecordData>()\r\n        .then(() => dispatch({[ REFRESH_STATE ]: { allData: {}, target: { list: []}}}))\r\n        .then(() => success(params))\r\n        .catch(e => fail(e))\r\n      )\r\n      .catch(e => fail(e));\r\n\r\n    break;\r\n    case 'SUMMARY':\r\n      if (!params.cycle || ['day', 'month', 'year'].indexOf(params.cycle) < 0) throw new Error(\r\n        'If wanna re-calculate the summary, must specify cycle.'\r\n      );\r\n      dispatch({[ REFRESH_STATE ]: { sumcycle: params.cycle as 'day' | 'month' | 'year' }});\r\n\r\n      break;\r\n    case 'FIND': findByID<IRecordData>(params.uid)\r\n      .then(({ content }) => dispatch({[ REFRESH_STATE ]: { target  : { data: content }}}))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n      break;\r\n    case 'LIST': getList<IRecordData>({ status: params.status, type: params.type })\r\n      .then(({ content }) => dispatch({ override: true, [ REFRESH_STATE ]: { target  : { list: content }}}))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n      break;\r\n    case 'ALL': getList<IRecordData>()\r\n      .then(({ content }) => dispatch({\r\n        [ REFRESH_STATE ]: {\r\n          allData : content.reduce((res: {[ id: number ]: IRecordData; }, data) => ({\r\n            ...res, [ data.uid || '' ]: data\r\n          }), {})\r\n        }\r\n      }))\r\n      .then(() => success(params))\r\n      .catch(e => fail(e));\r\n\r\n      break;\r\n  }\r\n  return dispatch;\r\n}\r\n\r\n// TODO: Components\r\nconst Context = createContext<{\r\n  store: IStoreState;\r\n  dispatch: Dispatch<IRequestAction>;\r\n  [ REFRESH_DISPATCH ]: Dispatch<IStoreAction>;\r\n}>({\r\n  store: DEFAULT_STATE,\r\n  dispatch: () => {},\r\n  [ REFRESH_DISPATCH ]: () => {}\r\n});\r\n\r\nconst RecordStore: FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [ store, storeDispatch ] = useReducer(recordStore, DEFAULT_STATE);\r\n  const $do = useReducer(doReducer, storeDispatch);\r\n\r\n  return (\r\n    <Context.Provider value={{ store, dispatch: $do[1], [ REFRESH_DISPATCH ]: storeDispatch }}>\r\n      { children }\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\n// TODO: Export\r\nexport default RecordStore;\r\nexport { useRecord };\r\n","import React, { FC } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  className?: string;\r\n  disableOnce?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst CycleDropdown: FC<IProps> = ({ value, onChange, className = '', disableOnce = false }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { disableOnce ? null : (\r\n        <option value=\"once\">{ intl.messages.CYCLE_ONCE }</option>\r\n      )}\r\n      <option value=\"day\">{ intl.messages.CYCLE_DAY }</option>\r\n      <option value=\"month\">{ intl.messages.CYCLE_MONTH }</option>\r\n      <option value=\"year\">{ intl.messages.CYCLE_YEAR }</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default CycleDropdown;","import React, { FC, ReactNode } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\ninterface IProps {\r\n  children?: ReactNode;\r\n  className?: string;\r\n  disableDeposit?: boolean;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n// TODO: Components\r\nconst TypeDropdown: FC<IProps> = ({\r\n  className = '',\r\n  disableDeposit = false,\r\n  children,\r\n  value,\r\n  onChange\r\n}) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <select className={ `form-control ${ className }`} value={ value } onChange={\r\n      ({ target }) => onChange(target.value)\r\n    }>\r\n      { children }\r\n      <option value=\"income\">{ intl.messages.INCOME }</option>\r\n      <option value=\"expenses\">{ intl.messages.EXPENSES }</option>\r\n\r\n      { disableDeposit ? null : (\r\n        <option value=\"deposit\">{ intl.messages.DEPOSIT }</option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default TypeDropdown;\r\n","module.exports = __webpack_public_path__ + \"static/media/404.bd332713.svg\";","module.exports = __webpack_public_path__ + \"static/media/cash-logo.cb5cc733.svg\";","var map = {\n\t\"./en.json\": [\n\t\t58,\n\t\t1\n\t],\n\t\"./zh.json\": [\n\t\t59,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 51;\nmodule.exports = webpackAsyncContext;","import React, {\r\n  FC,\r\n  Reducer,\r\n  Dispatch,\r\n  ReactNode,\r\n  createContext,\r\n  useState,\r\n  useReducer,\r\n  useMemo,\r\n  useContext\r\n} from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n\r\n// TODO: Types\r\nexport enum LANG { DEFAULT, EN, ZH }\r\n\r\ninterface IMessages { [message: string]: string; }\r\n\r\ninterface IMsgOptions { locale: string; messages: IMessages; }\r\n\r\ninterface IImportJSON { default: IMessages; }\r\n\r\ninterface IContext { locale: string; setLang: Dispatch<LANG> }\r\n\r\n\r\n// TODO: Variables & Reducer\r\nconst defintl = import('../assets/i18n/en.json').then(({ default: messages }: IImportJSON): IMsgOptions => ({\r\n  locale: 'en',\r\n  messages\r\n}));\r\n\r\nconst useI18n = () => useContext(Context);\r\n\r\nconst reducer: Reducer<Promise<IMsgOptions>, LANG> = (state, action: LANG) => {\r\n  switch (action) {\r\n    case LANG.EN: return defintl.then(res => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'en');\r\n\r\n      return res;\r\n    });\r\n    case LANG.ZH: return import('../assets/i18n/zh.json').then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n      localStorage.setItem('CASH_MAP_LANG', 'zh');\r\n\r\n      return { locale: 'zh', messages };\r\n    });\r\n    default: return ((locale: string) => {\r\n      locale = locale.substring(0, locale.indexOf('-') > 0 ? locale.indexOf('-') : undefined);\r\n\r\n      return import(`../assets/i18n/${locale}.json`).then(({ default: messages }: IImportJSON): IMsgOptions => {\r\n        localStorage.setItem('CASH_MAP_LANG', locale);\r\n\r\n        return { locale, messages };\r\n      }).catch(() => defintl);\r\n    })(localStorage.getItem('CASH_MAP_LANG') || navigator.language.toLowerCase());\r\n  }\r\n};\r\n\r\n\r\n// TODO: Components\r\nconst Context = createContext<IContext>({ locale: 'en', setLang: () => {} });\r\n\r\nconst I18n: FC<{ children: ReactNode; }> = ({ children }) => {\r\n  const [{ locale, messages }, setMessages ] = useState<IMsgOptions>({ locale: 'en', messages: {} });\r\n  const [ promise, setLang ] = useReducer(reducer, defintl);\r\n  const hasMessages = Object.keys(messages).length > 0;\r\n\r\n  promise.then(msg => JSON.stringify(msg) === JSON.stringify(messages) ? null : setMessages(msg));\r\n\r\n  useMemo(() => hasMessages ? null : setLang(LANG.DEFAULT), [ hasMessages ]);\r\n\r\n  return !hasMessages ? null : (\r\n    <IntlProvider {...{ locale, messages }}>\r\n      <Context.Provider value={{ locale, setLang }}>\r\n        { children }\r\n      </Context.Provider>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport {\r\n  useI18n\r\n}\r\n","import React, { FC, ReactNode } from 'react';\r\nimport { MessageFormatElement } from 'intl-messageformat-parser';\r\n\r\ninterface IInlineGroupProps {\r\n  label?: string | MessageFormatElement[];\r\n  labelWidth?: number | string;\r\n  className?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const BsInlineGroup: FC<IInlineGroupProps> = ({ label = '', labelWidth = 'auto', className = '', children }) => {\r\n  return (\r\n    <div className={[ 'input-group', className ].join(' ')}>\r\n      { !label ? null : (\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text justify-content-end\" style={{ width: labelWidth }}>{ label }</div>\r\n        </div>\r\n      )}\r\n\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../services/loading';\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { IRecordData, useRecord } from '../services/store/record';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  record: IRecordData;\r\n}\r\n\r\n// TODO: Events\r\nconst useEvents = ({ record }: IEventInput) => {\r\n  const { Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  return {\r\n    onSlide: useCallback((turnon: boolean) => dispatch({\r\n      action: 'UPDATE',\r\n      params: { ...record, status: turnon ? 'actual' : 'expected' }\r\n    }), [ record, dispatch ]),\r\n\r\n    doRemove: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_REMOVE_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'REMOVE',\r\n          params: record,\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Message, Loading, dispatch, record ])\r\n  };\r\n}\r\n\r\n// TODO: Components\r\nconst AmountSlidebar: FC<{ record: IRecordData; }> = ({ record }) => {\r\n  const intl = useIntl();\r\n  const { onSlide, doRemove } = useEvents({ record });\r\n\r\n  return (\r\n    <div className=\"form-group amount-slidebar\">\r\n      <div className=\"media\">\r\n        <Link className=\"mr-3 btn btn-link text-info\" to={ `/update/${ record.uid }` }>\r\n          <i className=\"fa fa-pencil\" />\r\n        </Link>\r\n        \r\n        <span className=\"media-body\">\r\n          <h4>{ record.desc }</h4>\r\n          $ { Numeral(record.amount).format('0,0') } / { intl.messages[`CYCLE_${ (record.cycle || '').toUpperCase() }`] }\r\n        </span>\r\n\r\n        <button type=\"button\" className=\"btn btn-link text-white\" onClick={ doRemove }>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n\r\n      <input type=\"range\" className={ `custom-range ${ record.type  }` } min=\"0\" max=\"1\"\r\n        value={ 'actual' === record.status ? 1 : 0 } onChange={({ target: { value }}) => onSlide(value === '1')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountSlidebar;\r\n","import React, { Dispatch, SetStateAction, FC, useState, useCallback, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormattedMessage as Fmsg, useIntl } from 'react-intl';\r\nimport Numeral from 'numeral';\r\n\r\nimport { useLoading } from '../services/loading';\r\nimport { BTN, useMessage } from '../services/message';\r\nimport { ISummary, useRecord } from '../services/store/record';\r\n\r\nimport { BsContainer, BsRow, BsCol } from './grid';\r\nimport { BsInlineGroup } from './form';\r\n\r\nimport CycleDropdown from './editor/CycleDropdown';\r\nimport TypeDropdown from './editor/TypeDropdown';\r\nimport AmountSlidebar from './AmountSlidebar';\r\n\r\n\r\n// TODO: Types\r\ninterface IEventInput {\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = ({ setFilter }: IEventInput) => {\r\n  const { Loading } = useLoading();\r\n  const { Message } = useMessage();\r\n  const { dispatch } = useRecord();\r\n\r\n  useEffect(() => dispatch({\r\n    action: 'ALL',\r\n    success: () => dispatch({ action: 'LIST' })\r\n  }), [ dispatch ]);\r\n\r\n  return {\r\n    onCycleChange: useCallback((value: 'day' | 'month' | 'year') => dispatch({\r\n      action: 'SUMMARY',\r\n      params: { cycle: value }\r\n    }), [ dispatch ]),\r\n    \r\n    onFilterChange: useCallback((value: string) => {\r\n      setFilter(value);\r\n      dispatch({ action: 'LIST', params: { type: 'all' === value ? '' : value }})\r\n    }, [ dispatch, setFilter ]),\r\n\r\n    doClear: useCallback(() => Message({\r\n      type    : 'CONFIRM',\r\n      title   : 'MSG_CONFIRM_TITLE',\r\n      icon    : 'fa fa-question',\r\n      content : 'MSG_CLEAR_QUESTION',\r\n      handler : btn => BTN.CONFIRM !== btn ? null : Loading({\r\n        show: true,\r\n        callbackFn: () => dispatch({\r\n          action: 'CLEAR',\r\n          fail: (e: Error) => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'DANGER', content: e.message })\r\n          }),\r\n          success: () => Loading({\r\n            show: false,\r\n            callbackFn: () => Message({ type: 'INFO', content: 'MSG_REMOVE_SUCCESS' })\r\n          })\r\n        })\r\n      })\r\n    }), [ Loading, Message, dispatch ])\r\n  }\r\n};\r\n\r\n// TODO: Component - Summary Dashboard\r\nconst SummaryDashboard: FC<{\r\n  summary: ISummary;\r\n  cycle: 'day' | 'month' | 'year';\r\n  onCycleChange: (value: 'day' | 'month' | 'year') => void\r\n}> = ({ summary, cycle, onCycleChange }) => {\r\n  const intl = useIntl();\r\n  const labelWidth = 'zh' === intl.locale ? 60 : 110;\r\n  const [ expanded, setExpanded ] = useState<boolean>(false);\r\n\r\n  const doCollapse = useCallback(() => setExpanded(!expanded), [ expanded, setExpanded ]);\r\n\r\n  return (\r\n    <fieldset className={ `summary-dashboard shadow ${ expanded ? 'sd-expand' : 'sd-collapse' }` }>\r\n      <legend>\r\n        <button type=\"button\" className=\"btn btn-link\" onClick={ doCollapse }>\r\n          { intl.messages.SUMMARY } ({ intl.messages[ `CYCLE_${ cycle.toUpperCase() }` ] })\r\n          <i className={ `ml-2 fa fa-${ expanded ? 'minus' : 'plus' }-square-o` } />\r\n        </button>\r\n      </legend>\r\n\r\n      { !expanded ? (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow className=\"text-right\">\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"APPLICABLE\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n            </BsCol>\r\n\r\n            <BsCol className=\"form-group\">\r\n              <Fmsg tagName=\"label\" id=\"DEPOSIT\" />\r\n              <span className=\"d-block\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      ) : (\r\n        <BsContainer tagName=\"form\">\r\n          <BsRow>\r\n            <BsCol className=\"form-group\" width={{ sm: 6 }}>\r\n              <Fmsg tagName=\"label\" id=\"VIEW_CYCLE\" />\r\n\r\n              <CycleDropdown value={ cycle } disableOnce onChange={\r\n                value => onCycleChange(value as 'day' | 'month' | 'year')\r\n              } />\r\n            </BsCol>\r\n          </BsRow>\r\n\r\n          <BsRow>\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.INCOME } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.income).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.EXPENSES } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.expenses).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.DEPOSIT } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.deposit).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n\r\n            <BsCol width={{ def: 12, sm: 6 }}>\r\n              <BsInlineGroup label={ intl.messages.APPLICABLE } labelWidth={ labelWidth }>\r\n                <span className=\"form-control text-right\">$ { Numeral(summary.applicable).format('0,0') }</span>\r\n              </BsInlineGroup>\r\n            </BsCol>\r\n          </BsRow>\r\n        </BsContainer>\r\n      )}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\n// TODO: Component - APP\r\nconst App: FC = () => {\r\n  const intl = useIntl();\r\n  const [ filter, setFilter ] = useState('all');\r\n  const { store: { summary, sumcycle, target: { list } } } = useRecord();\r\n  const { onCycleChange, onFilterChange, doClear } = useEvents({ setFilter });\r\n\r\n  return (\r\n    <div>\r\n      <SummaryDashboard summary={ summary } cycle={ sumcycle } onCycleChange={ onCycleChange } />\r\n\r\n      <BsContainer margin={{ y: 3 }}>\r\n        { list.map(record =>\r\n          <BsRow key={`record-${ record.uid }`} align=\"center\">\r\n            <BsCol width={{ def: 12, sm: 10, lg: 8 }} margin={{ t: 3, b: 1 }} border={{ b: true }}>\r\n              <AmountSlidebar record={ record } />\r\n            </BsCol>\r\n          </BsRow>\r\n        )}\r\n\r\n        <BsRow className=\"list-fbar\" padding={{ t: 3 }}>\r\n          <BsCol className=\"form-group\">\r\n            <Fmsg tagName=\"label\" id=\"FILTER_MAINTAIN\" />\r\n\r\n            <BsInlineGroup>\r\n              <Link className=\"btn btn-primary\" to=\"/append\">\r\n                <i className=\"fa fa-plus mr-2\" /> { intl.messages.APPEND_RECORD }\r\n              </Link>\r\n\r\n              <TypeDropdown className=\"rounded mx-2\" value={ filter } onChange={ onFilterChange }>\r\n                <option value=\"all\">{ intl.messages.ALL_OPTION }</option>\r\n              </TypeDropdown>\r\n\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={ doClear }>\r\n                <i className=\"fa fa-remove mr-2\" /> { intl.messages.CLEAR }\r\n              </button>\r\n            </BsInlineGroup>\r\n          </BsCol>\r\n        </BsRow>\r\n      </BsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component, FC, useEffect, useCallback } from 'react';\r\nimport { FormattedMessage as Fmsg } from 'react-intl';\r\nimport { RouteProps, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useLoading } from './loading';\r\n\r\nimport { BsContainer, BsRow, BsCol } from '../components/grid';\r\nimport App from '../components/App';\r\n\r\nimport error404 from '../assets/imgs/404.svg';\r\n\r\n\r\n// TODO: Types\r\ninterface ILoadable {\r\n  loading?: FC;\r\n  loader: () => Promise<{\r\n    default: FC<RouteComponentProps<any>>;\r\n  }>;\r\n}\r\n\r\ninterface IRouter extends RouteProps {\r\n  text?: string;\r\n  icon?: string;\r\n}\r\n\r\n// TODO: 404 Page Not Found\r\nconst PageNotFound: FC = () => {\r\n  const goBack = useCallback(() => window.history.back(), []);\r\n\r\n  return (\r\n    <BsContainer className=\"not-found-404\">\r\n      <BsRow align=\"center\">\r\n        <BsCol width={{ def: 12, sm: 6, md: 4 }}>\r\n          <img className=\"img-fluid\" src={error404} alt=\"404\" />\r\n        </BsCol>\r\n      </BsRow>\r\n\r\n      <BsRow align=\"center\">\r\n        <BsCol className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-lg btn-link\" onClick={goBack}>\r\n            <Fmsg id=\"BACK_TO_PREV_PAGE\" />\r\n          </button>\r\n        </BsCol>\r\n      </BsRow>\r\n    </BsContainer>\r\n  );\r\n};\r\n\r\n// TODO: Loading Mask\r\nconst LoadingMask: FC = () => {\r\n  const { Loading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    Loading({ show: true });\r\n\r\n    return () => Loading({ show: false })\r\n  }, [ Loading ]);\r\n  return null;\r\n};\r\n\r\n// TODO: Loadable\r\nconst Loadable = ({ loader, loading = LoadingMask }: ILoadable) => class LoadableComponent extends Component<\r\n  RouteComponentProps<any>,\r\n  { Route: FC<RouteComponentProps<any>>; }\r\n> {\r\n  state = { Route: loading };\r\n\r\n  constructor(props: RouteComponentProps<any>) {\r\n    super(props);\r\n    loader().then(({ default: component }) => this.setState({ Route: component }));\r\n  }\r\n\r\n  render() {\r\n    const { Route } = this.state;\r\n\r\n    return (\r\n      <Route { ...this.props } />\r\n    );\r\n  }\r\n};\r\n  \r\n\r\n// TODO: Router Options\r\nconst router: IRouter[] = [{\r\n  path: '/',\r\n  exact: true,\r\n  component: App\r\n}, {\r\n  path: '/append',\r\n  text: 'APPEND_RECORD',\r\n  icon: 'fa fa-plus',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  path: '/update/:uid',\r\n  text: 'UPDATE_RECORD',\r\n  component: Loadable({\r\n    loader: () => import('../components/EditRecord'),\r\n    loading: LoadingMask\r\n  })\r\n}, {\r\n  component: PageNotFound\r\n}];\r\n\r\nexport default router;\r\n","import React, { FC, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useI18n, LANG } from '../services/i18n';\r\n\r\nimport Logo from '../assets/imgs/cash-logo.svg';\r\n\r\n\r\n// TODO: Events\r\nconst useEvents = () => {\r\n  const { setLang } = useI18n();\r\n\r\n  return {\r\n    asEnglish: useCallback(() => setLang(LANG.EN), [ setLang ]),\r\n    asChinese: useCallback(() => setLang(LANG.ZH), [ setLang ])\r\n  };\r\n};\r\n\r\n// TODO: Components\r\nconst MainHeader: FC = () => {\r\n  const dropdown = useRef(null);\r\n  const { asEnglish, asChinese } = useEvents();\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-dark bg-dark text-secondary border-bottom border-white\">\r\n      <Link className=\"navbar-brand text-white\" to=\"/\">\r\n        <img className=\"rounded-circle\" src={ Logo } alt=\"Logo\" />\r\n      </Link>\r\n      \r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"lang-dropdown navbar-nav ml-auto\">\r\n          <li ref={ dropdown } className=\"nav-item dropdown\">\r\n            <button type=\"button\" className=\"btn btn-link nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n              <i className=\"fa fa-language mr-2\" />\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asEnglish }>English</button>\r\n              <button type=\"button\" className=\"dropdown-item\" onClick={ asChinese }>繁體中文</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuidv4 from 'uuid/v4';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport $ from 'jquery';\nimport 'hammerjs';\nimport 'popper.js';\n\nimport I18n from './services/i18n';\nimport LoadingMask from './services/loading';\nimport MessageBox from './services/message';\nimport RecordStore from './services/store/record';\nimport routers from './services/router';\n\nimport MainHeader from './components/MainHeader';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/main.scss';\n\n\n(window as any).$ = $;\n\nimport('bootstrap').then(() => {\n  ReactDOM.render((\n    <I18n>\n      <LoadingMask>\n        <MessageBox>\n          <HashRouter>\n            <MainHeader />\n\n            <div className=\"cash-map-app\">\n              <RecordStore>\n                <Switch>\n                  { routers.map(options => <Route key={uuidv4()} {...options} />) }\n                </Switch>\n              </RecordStore>\n            </div>\n          </HashRouter>\n        </MessageBox>\n      </LoadingMask>\n    </I18n>\n  ), document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}